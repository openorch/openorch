"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2793],{955814:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(474848),n=r(28453);const i={sidebar_position:100,tags:["secret-svc","secrets","configuration","services"]},c="Secret Svc",o={id:"built-in-services/secret-svc",title:"Secret Svc",description:"The Secret Svc stores sensitive or internal (non-end-user-facing) configuration. Aims to store all configuration not required at bootstrap, both for internal and external services.",source:"@site/docs/built-in-services/secret-svc.md",sourceDirName:"built-in-services",slug:"/built-in-services/secret-svc",permalink:"/docs/built-in-services/secret-svc",draft:!1,unlisted:!1,editUrl:"https://github.com/openorch/openorch/tree/main/docs-source/docs/built-in-services/secret-svc.md",tags:[{inline:!0,label:"secret-svc",permalink:"/docs/tags/secret-svc"},{inline:!0,label:"secrets",permalink:"/docs/tags/secrets"},{inline:!0,label:"configuration",permalink:"/docs/tags/configuration"},{inline:!0,label:"services",permalink:"/docs/tags/services"}],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100,tags:["secret-svc","secrets","configuration","services"]},sidebar:"tutorialSidebar",previous:{title:"User Svc",permalink:"/docs/built-in-services/user-svc"},next:{title:"Config Svc",permalink:"/docs/built-in-services/config-svc"}},a={},l=[{value:"Design choices",id:"design-choices",level:2},{value:"About readers and writers",id:"about-readers-and-writers",level:2},{value:"Encryption at rest",id:"encryption-at-rest",level:3}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"secret-svc",children:"Secret Svc"}),"\n",(0,t.jsx)(s.p,{children:"The Secret Svc stores sensitive or internal (non-end-user-facing) configuration. Aims to store all configuration not required at bootstrap, both for internal and external services."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["This page is a high level overview of the ",(0,t.jsx)(s.code,{children:"Secret Svc"}),". For more details, please see the ",(0,t.jsx)(s.a,{href:"/docs/openorch/list-secrets",children:"Secret Svc API documentation"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"design-choices",children:"Design choices"}),"\n",(0,t.jsx)(s.p,{children:"The Secret Svc, like most things in OpenOrch, is designed to be simple to reason about."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-go",children:'type Secret struct {\n\tKey            string   // Secret key eg. "MY_API_KEY"\n\tValue          string   // Secret value eg. "nNl4X9\\+@95Z"\n\tReaders        []string // Slugs of services and users who can read the secret\n\tWriters        []string // Slugs of services and users who can modify the secret\n}\n'})}),"\n",(0,t.jsx)(s.p,{children:"Instead of the OpenOrch injecting environment variables into service containers when they are deployed, the services are left to their own devices to read secrets from the Secret Svc through normal service calls, using their credentials."}),"\n",(0,t.jsx)(s.h2,{id:"about-readers-and-writers",children:"About readers and writers"}),"\n",(0,t.jsx)(s.p,{children:"At the moment only admins can read or write secrets. The system is only designed to work for service 2 service calls. In the future with readers and writers we might create a more multitenant system where even non-admins can read and write secrets."}),"\n",(0,t.jsx)(s.h3,{id:"encryption-at-rest",children:"Encryption at rest"}),"\n",(0,t.jsxs)(s.p,{children:["All data is encrypted using the encryption key provided by the envar ",(0,t.jsx)(s.code,{children:"OPENORCH_ENCRYPTION_KEY"})," (see Todo section)."]}),"\n",(0,t.jsx)(s.p,{children:"The server encrypts the secret values before saving them to disk/DB. The secret values are transmitted to readers unencrypted."}),"\n",(0,t.jsx)(s.h1,{id:"todo",children:"Todo"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Make it so the encryption key doesn't have to be exposed in an envar"}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);