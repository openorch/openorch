"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>v,contentTitle:()=>b,default:()=>I,frontMatter:()=>f,metadata:()=>q,toc:()=>N});var t=a(74848),r=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),m=a.n(d),p=(a(36683),a(81124)),c=a.n(p),h=a(60674),u=a.n(h),x=a(23397),g=a.n(x),j=(a(26651),a(51107)),y=(a(77675),a(19365));const f={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,q={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},v={},N=[];function k(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt-svc/prompt"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(m(),{className:"openapi-tabs__mime",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(y.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function I(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(k,{...e})}):k(e)}}}]);