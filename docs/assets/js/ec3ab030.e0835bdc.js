"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>b,default:()=>T,frontMatter:()=>y,metadata:()=>v,toc:()=>N});var t=a(74848),r=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),m=a.n(d),p=(a(36683),a(81124)),c=a.n(p),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),j=(a(26651),a(51107)),f=(a(77675),a(19365));const y={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Get Model Status",permalink:"/docs/singulatron/get-model-status"},next:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"}},q={},N=[];function M(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt/add"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(m(),{className:"openapi-tabs__mime",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(f.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function T(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(M,{...e})}):M(e)}}}]);