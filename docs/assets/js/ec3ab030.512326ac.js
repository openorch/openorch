"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>v,default:()=>P,frontMatter:()=>j,metadata:()=>b,toc:()=>N});var t=a(74848),r=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),p=a.n(d),m=(a(36683),a(81124)),c=a.n(m),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),f=(a(26651),a(51107)),y=(a(77675),a(19365));const j={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},v=void 0,b={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"List Prompts",permalink:"/docs/singulatron/get-prompts"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},q={},N=[];function k(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt-svc/prompt"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(p(),{className:"openapi-tabs__mime",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(y.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(y.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function P(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(k,{...e})}):k(e)}}}]);