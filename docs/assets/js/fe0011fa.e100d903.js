"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[797],{24631:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var i=n(74848),s=n(28453);const o={sidebar_position:2,tags:["contributing","clients"]},c="Contribute to the Clients",r={id:"contributing/contributing-to-the-clients",title:"Contribute to the Clients",description:"TypeScript/JavaScript Clients",source:"@site/docs/contributing/contributing-to-the-clients.md",sourceDirName:"contributing",slug:"/contributing/contributing-to-the-clients",permalink:"/docs/contributing/contributing-to-the-clients",draft:!1,unlisted:!1,editUrl:"https://github.com/singulatron/superplatform/tree/main/docs-source/docs/contributing/contributing-to-the-clients.md",tags:[{inline:!0,label:"contributing",permalink:"/docs/tags/contributing"},{inline:!0,label:"clients",permalink:"/docs/tags/clients"}],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,tags:["contributing","clients"]},sidebar:"tutorialSidebar",previous:{title:"Contribute to the Docs",permalink:"/docs/contributing/contributing-to-the-docs"},next:{title:"Platform Capabilities",permalink:"/docs/category/platform-capabilities"}},l={},a=[{value:"TypeScript/JavaScript Clients",id:"typescriptjavascript-clients",level:2},{value:"Publishing",id:"publishing",level:3}];function d(t){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,s.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"contribute-to-the-clients",children:"Contribute to the Clients"}),"\n",(0,i.jsx)(e.h2,{id:"typescriptjavascript-clients",children:"TypeScript/JavaScript Clients"}),"\n",(0,i.jsxs)(e.p,{children:["Without some scripting making sweeping changes in the clients would be hard because of how they depend on each other: ",(0,i.jsx)(e.code,{children:"js/types"})," (",(0,i.jsx)(e.code,{children:"@singulatron/types"}),") is a dependency of ",(0,i.jsx)(e.code,{children:"js/client"})," (",(0,i.jsx)(e.code,{children:"@singulatron/client"}),")."]}),"\n",(0,i.jsxs)(e.p,{children:["To fix this a tiny script ",(0,i.jsx)(e.code,{children:"link_local.sh"})," was introduced."]}),"\n",(0,i.jsxs)(e.p,{children:["Your local workflow when editing the ",(0,i.jsx)(e.code,{children:"@singulatron/types"})," should be is to issue the ",(0,i.jsx)(e.code,{children:"bash link_local.sh"})," in the ",(0,i.jsx)(e.code,{children:"clients/js"})," folder. The script links up and builds the packages in the correct order for local testing."]}),"\n",(0,i.jsx)(e.h3,{id:"publishing",children:"Publishing"}),"\n",(0,i.jsxs)(e.p,{children:["Just bump the version number in the ",(0,i.jsx)(e.code,{children:"package.json"}),"s and the clients will be automatically published when merged to main."]})]})}function u(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>r});var i=n(96540);const s={},o=i.createContext(s);function c(t){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:c(t.components),i.createElement(o.Provider,{value:e},t.children)}}}]);