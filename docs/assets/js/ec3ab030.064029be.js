"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>y,default:()=>w,frontMatter:()=>b,metadata:()=>q,toc:()=>v});var t=a(74848),i=a(28453),r=a(91366),n=a.n(r),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),p=a.n(d),m=(a(36683),a(81124)),c=a.n(m),h=a(60674),u=a.n(h),x=a(23397),g=a.n(x),j=(a(26651),a(51107)),f=(a(77675),a(19365));const b={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},y=void 0,q={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},N={},v=[];function S(e){const s={code:"code",p:"p",...(0,i.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt-service/prompt"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(p(),{className:"openapi-tabs__mime",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(f.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function w(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(S,{...e})}):S(e)}}}]);