"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2384],{61592:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>y,default:()=>D,frontMatter:()=>b,metadata:()=>v,toc:()=>P});var i=a(74848),r=a(28453),t=a(91366),n=a.n(t),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),c=a.n(d),m=(a(36683),a(81124)),p=a.n(m),h=a(60674),u=a.n(h),x=a(23397),j=a.n(x),f=(a(26651),a(51107)),g=(a(77675),a(19365));const b={id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/superplatform/superplatform",custom_edit_url:null},y=void 0,v={id:"superplatform/list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/superplatform/list-prompts.api.mdx",sourceDirName:"superplatform",slug:"/superplatform/list-prompts",permalink:"/docs/superplatform/list-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/superplatform/superplatform",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/superplatform/add-prompt"},next:{title:"Subscribe to Prompt Responses by Thread",permalink:"/docs/superplatform/subscribe-to-prompt-responses"}},N={},P=[];function q(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/prompt-svc/prompts"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{className:"openapi-tabs__mime",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"filters"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (",(0,i.jsx)(s.code,{children:"all"}),", ",(0,i.jsx)(s.code,{children:"equal"}),", ",(0,i.jsx)(s.code,{children:"contains"}),", ",(0,i.jsx)(s.code,{children:"startsWith"}),") and field selectors (",(0,i.jsx)(s.code,{children:"field"}),", ",(0,i.jsx)(s.code,{children:"fields"}),", ",(0,i.jsx)(s.code,{children:"id"}),") for easier access."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"fields",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonValues",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"op",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`equals`, `containsSubstring`, `startsWith`, `intersects`, `isInList`]",schema:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonAfter",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(g.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Superplatform internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function D(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(q,{...e})}):q(e)}}}]);