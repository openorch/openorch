"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[4644],{22881:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>y,default:()=>R,frontMatter:()=>b,metadata:()=>v,toc:()=>q});var i=a(74848),r=a(28453),t=a(91366),n=a.n(t),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),c=a.n(d),m=(a(36683),a(81124)),p=a.n(m),h=a(60674),u=a.n(h),x=a(23397),j=a.n(x),g=(a(26651),a(51107)),f=(a(77675),a(19365));const b={id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},y=void 0,v={id:"openorch/list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/openorch/list-prompts.api.mdx",sourceDirName:"openorch",slug:"/openorch/list-prompts",permalink:"/docs/openorch/list-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/openorch/add-prompt"},next:{title:"Subscribe to Prompt Responses by Thread",permalink:"/docs/openorch/subscribe-to-prompt-responses"}},N={},q=[];function L(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/prompt-svc/prompts"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"filters"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (",(0,i.jsx)(s.code,{children:"all"}),", ",(0,i.jsx)(s.code,{children:"equal"}),", ",(0,i.jsx)(s.code,{children:"contains"}),", ",(0,i.jsx)(s.code,{children:"startsWith"}),") and field selectors (",(0,i.jsx)(s.code,{children:"field"}),", ",(0,i.jsx)(s.code,{children:"fields"}),", ",(0,i.jsx)(s.code,{children:"id"}),") for easier access."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"fields",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonValues",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"op",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`equals`, `containsSubstring`, `startsWith`, `intersects`, `isInList`]",schema:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonAfter",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the OpenOrch internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function R(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}}}]);