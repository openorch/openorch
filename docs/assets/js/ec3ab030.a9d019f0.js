"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>b,default:()=>M,frontMatter:()=>y,metadata:()=>v,toc:()=>N});var r=a(74848),t=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),p=a.n(d),m=(a(36683),a(81124)),c=a.n(m),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),j=(a(26651),a(51107)),f=(a(77675),a(19365));const y={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Upsert an Instance",permalink:"/docs/singulatron/upsert-instance"},next:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"}},q={},N=[];function S(e){const s={code:"code",p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,r.jsx)(o(),{method:"post",path:"/prompt-svc/prompt"}),"\n",(0,r.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,r.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,r.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(p(),{className:"openapi-tabs__mime",children:(0,r.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,r.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,r.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,r.jsx)(s.p,{children:"Body"})}),(0,r.jsx)("strong",{className:"openapi-schema__required",children:(0,r.jsx)(s.p,{children:"required"})})]}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,r.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,r.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,r.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,r.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,r.jsx)("div",{children:(0,r.jsx)("div",{children:(0,r.jsxs)(n(),{label:void 0,id:void 0,children:[(0,r.jsxs)(f.default,{label:"200",value:"200",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"OK"})}),(0,r.jsx)("div",{children:(0,r.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,r.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,r.jsx)("summary",{style:{},children:(0,r.jsxs)("span",{className:"openapi-schema__container",children:[(0,r.jsx)("strong",{className:"openapi-schema__property",children:(0,r.jsx)(s.p,{children:"prompt"})}),(0,r.jsx)("span",{className:"openapi-schema__name",children:(0,r.jsx)(s.p,{children:"object"})})]})}),(0,r.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,r.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,r.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,r.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(f.default,{label:"400",value:"400",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Invalid JSON"})}),(0,r.jsx)("div",{children:(0,r.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(f.default,{label:"401",value:"401",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Unauthorized"})}),(0,r.jsx)("div",{children:(0,r.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(f.default,{label:"500",value:"500",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Internal Server Error"})}),(0,r.jsx)("div",{children:(0,r.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function M(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(S,{...e})}):S(e)}}}]);