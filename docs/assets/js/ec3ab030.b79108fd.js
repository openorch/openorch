"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>b,default:()=>S,frontMatter:()=>y,metadata:()=>v,toc:()=>q});var t=a(74848),r=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),m=a.n(d),p=(a(36683),a(81124)),c=a.n(p),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),j=(a(26651),a(51107)),f=(a(77675),a(19365));const y={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"eJztWEtv20YQ/iuDvbQFGNst2osuheOmgNsmDiwHPcgGMuKOyI2Xu/Q+LLOC/nsxS1KkJCaHFEgv0omc3Z359punuBGSfO5UHZQ1YiYupfSAYGgNtbNVHSBYCCX1b0+RIgEaCaRCSQ7WqIKHlXVplyNfW+MJvlcr+Ogbk38E5cFTq8dF+iED68BRiM54UFVFUmEg3ZyJTDh6iuTDaysbMduI3JpAJvAj1rVWOTLK80+eoW6Ez0uqkJ9qZ2tyQZHv3qo6HMtzRxhIXqal/Wtf9UuMli8SVEVgV+Orp+PKGgYamprETPjglCnENhPknHXHet+wGEKJAdBZTyAjn+hV0gvlkbdmoFaAppnUreSx4mvZI41GPUWC69/24U5q0ujDbTTH6v5qF6Zuz2d6vC5O377Cl1sKruN5X/Xb3Rr4mnK1UiShtGuo0DTJUmvTNz5QBb60UUsOENcA9obXJRlQAR6Jag+JbGWKERZlAhXkEhgrSV9PcPa2XeBLfoo+JKtzZYqoMThrgHU4g3rEZdI1eeUhyPaNvG8Bd0RW5D0WBCp40iugBJlesKo1q/u7xPAd59sSDRr8dcqQi+bKRjNh6rZb6Y2ZWC3JJeg7Vnv+0CdKmXsZiZMxkegnGfQBQ0yuRK1vVmK22AgysRKzRUo6GTVJkaAZRpmJ3PKNQpImxekJl2ikNek5R5MTH3s4vGMmXl6x9lfP6AxWHEOLjsZ5AjIfmRzLb3fmx9KrEZSx/M0O1lh6OYK4p2UHd/uQHfDe7jhMN+atMfmxm+aNyUE69Uye4zhVzc4tKDnSU83rA5/raaqvJZoCoglK35uRJ5UHxtuXDlOcwesGJK0w6jB2eQrxgoKHOgawBrAt3veGtfPGXCsyAdZK63a3j0sGvkzxgXBXOkIJ8+AIq7N787t18BRV/pjwSeVCA91FTcEpTc/kQHFE21Ug04UhoVfkWKXkVqJM4YGZctbY6HVzdm+uDYSSy2OOntp2kVjresYoAZfWakLDbAeqao2Bjhm/61YOXAQ3aQPqM3irijLAkkASO0bCytkKugKxl6KL63fzu4dNq2K7OE+vU3kaEltTdeeuW+nzdCgv7ZmhzC1JW6Yn2LN7c5Xc4/e9sucT3gieKOlC49ctzb267N5Yl8j82DHQNuSO1dS0EZba5o/swFbBZLGLtfxc5/zQL/W3S/0iNZCD+tMpmTbgyU1R9yHJgQcBVOaQPj4F69IyRZUKgeSXG+C2nTAUl4HZoi/hQ0Gyy0+Uh7TvULI9LAKXUkJX62/bDBZj7UxwMtfOQ6mY/nRxcXzDmz9T+fyqQaf1GD99oT2dZqDTDHSagU4z0GkGOs1ApxnoNAP9hxlom4mfp2aYa/OMWkn4Y37z7uunmd34cIx4GsmPE1wZjKG0Tv3TFtxvguSXaU66RjonxyUhld5vBImFWPjBv54dXFEorRQzUds0rNYYSjET5+2Wc5TMGOO4Hb7CvelrwPir2miGHPpXB3AQ8MQ2vO2mrkE0HpguRiPLsKM3OTUjDCPBxdCs9zpz24k4y8d18vPFbFe7BgCjnB8Juzwd+0CZle2/WGLOLLEPVEjlU2TimZxv4yLNTdaHCpO/udnv/ZsQB5129BX0f/4428VZoJdwXmtUqQFFp1NwpFjalZNMcDQ9ZKLkUJstxGazRE8fnN5uWfwUyTVitnjIxDM6hUvmafGwzURJKPkvzWIjHqnhfyXt7V/dsXXeriOjOMqdbdafuMxzShg+v3ecDe9v5nciE8vumzOHoZgJh2sOMly3/rPJGykTk2wjNJoiYsF7W538+xeG8Thy",sidebar_class_name:"post api-method",custom_edit_url:null},b=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"eJztWEtv20YQ/iuDvbQFGNst2osuheOmgNsmDiwHPcgGMuKOyI2Xu/Q+LLOC/nsxS1KkJCaHFEgv0omc3Z359punuBGSfO5UHZQ1YiYupfSAYGgNtbNVHSBYCCX1b0+RIgEaCaRCSQ7WqIKHlXVplyNfW+MJvlcr+Ogbk38E5cFTq8dF+iED68BRiM54UFVFUmEg3ZyJTDh6iuTDaysbMduI3JpAJvAj1rVWOTLK80+eoW6Ez0uqkJ9qZ2tyQZHv3qo6HMtzRxhIXqal/Wtf9UuMli8SVEVgV+Orp+PKGgYamprETPjglCnENhPknHXHet+wGEKJAdBZTyAjn+hV0gvlkbdmoFaAppnUreSx4mvZI41GPUWC69/24U5q0ujDbTTH6v5qF6Zuz2d6vC5O377Cl1sKruN5X/Xb3Rr4mnK1UiShtGuo0DTJUmvTNz5QBb60UUsOENcA9obXJRlQAR6Jag+JbGWKERZlAhXkEhgrSV9PcPa2XeBLfoo+JKtzZYqoMThrgHU4g3rEZdI1eeUhyPaNvG8Bd0RW5D0WBCp40iugBJlesKo1q/u7xPAd59sSDRr8dcqQi+bKRjNh6rZb6Y2ZWC3JJeg7Vnv+0CdKmXsZiZMxkegnGfQBQ0yuRK1vVmK22AgysRKzRUo6GTVJkaAZRpmJ3PKNQpImxekJl2ikNek5R5MTH3s4vGMmXl6x9lfP6AxWHEOLjsZ5AjIfmRzLb3fmx9KrEZSx/M0O1lh6OYK4p2UHd/uQHfDe7jhMN+atMfmxm+aNyUE69Uye4zhVzc4tKDnSU83rA5/raaqvJZoCoglK35uRJ5UHxtuXDlOcwesGJK0w6jB2eQrxgoKHOgawBrAt3veGtfPGXCsyAdZK63a3j0sGvkzxgXBXOkIJ8+AIq7N787t18BRV/pjwSeVCA91FTcEpTc/kQHFE21Ug04UhoVfkWKXkVqJM4YGZctbY6HVzdm+uDYSSy2OOntp2kVjresYoAZfWakLDbAeqao2Bjhm/61YOXAQ3aQPqM3irijLAkkASO0bCytkKugKxl6KL63fzu4dNq2K7OE+vU3kaEltTdeeuW+nzdCgv7ZmhzC1JW6Yn2LN7c5Xc4/e9sucT3gieKOlC49ctzb267N5Yl8j82DHQNuSO1dS0EZba5o/swFbBZLGLtfxc5/zQL/W3S/0iNZCD+tMpmTbgyU1R9yHJgQcBVOaQPj4F69IyRZUKgeSXG+C2nTAUl4HZoi/hQ0Gyy0+Uh7TvULI9LAKXUkJX62/bDBZj7UxwMtfOQ6mY/nRxcXzDmz9T+fyqQaf1GD99oT2dZqDTDHSagU4z0GkGOs1ApxnoNAP9hxlom4mfp2aYa/OMWkn4Y37z7uunmd34cIx4GsmPE1wZjKG0Tv3TFtxvguSXaU66RjonxyUhld5vBImFWPjBv54dXFEorRQzUds0rNYYSjET5+2Wc5TMGOO4Hb7CvelrwPir2miGHPpXB3AQ8MQ2vO2mrkE0HpguRiPLsKM3OTUjDCPBxdCs9zpz24k4y8d18vPFbFe7BgCjnB8Juzwd+0CZle2/WGLOLLEPVEjlU2TimZxv4yLNTdaHCpO/udnv/ZsQB5129BX0f/4428VZoJdwXmtUqQFFp1NwpFjalZNMcDQ9ZKLkUJstxGazRE8fnN5uWfwUyTVitnjIxDM6hUvmafGwzURJKPkvzWIjHqnhfyXt7V/dsXXeriOjOMqdbdafuMxzShg+v3ecDe9v5nciE8vumzOHoZgJh2sOMly3/rPJGykTk2wjNJoiYsF7W538+xeG8Thy",sidebar_class_name:"post api-method",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Create or update a generic object",permalink:"/docs/singulatron/create-or-update-a-generic-object"},next:{title:"List prompts",permalink:"/docs/singulatron/list-prompts"}},N={},q=[];function M(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt/add"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(m(),{className:"openapi-tabs__mime",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg.",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. Might be derived from ModelId",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(f.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg.",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. Might be derived from ModelId",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 0,\n    "modelId": "string",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(f.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function S(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(M,{...e})}):M(e)}}}]);