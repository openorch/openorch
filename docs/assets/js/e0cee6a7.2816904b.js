"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3189],{53414:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>b,default:()=>S,frontMatter:()=>y,metadata:()=>v,toc:()=>q});var i=a(74848),r=a(28453),n=a(91366),l=a.n(n),t=(a(6050),a(57742)),o=a.n(t),m=(a(67792),a(27362)),c=a.n(m),d=(a(36683),a(81124)),p=a.n(d),h=a(60674),u=a.n(h),x=a(23397),j=a.n(x),g=(a(26651),a(51107)),f=(a(77675),a(19365));const y={id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",custom_edit_url:null},b=void 0,v={id:"singulatron/list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/singulatron/list-prompts.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/list-prompts",permalink:"/docs/singulatron/list-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/singulatron/add-prompt"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},N={},q=[];function _(e){const s={p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/prompt/list"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(c(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"undefined[]",qualifierMessage:void 0,schema:{description:"After is used for paginations. Instead of offset-based pagination,\nwe support cursor-based pagination because it works better in a scalable,\ndistributed environment.",items:{},type:"array"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"conditions"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Conditions are filtering options of a query."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"all",required:!1,schemaName:"object",qualifierMessage:void 0,schema:{type:"object"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"contains"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"selector"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"any",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"oneOf",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"value",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}})]})]})}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"equal"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"selector"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"any",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"oneOf",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"value",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}})]})]})}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"startsWith"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"selector"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"any",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"oneOf",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"value",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}})]})]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Conditions\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(l(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(c(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(j(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function S(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(_,{...e})}):_(e)}}}]);