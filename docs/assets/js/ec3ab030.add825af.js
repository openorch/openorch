"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>S,contentTitle:()=>b,default:()=>I,frontMatter:()=>f,metadata:()=>v,toc:()=>N});var i=a(74848),t=a(28453),r=a(91366),n=a.n(r),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),p=a.n(d),m=(a(36683),a(81124)),c=a.n(m),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),j=(a(26651),a(51107)),y=(a(77675),a(19365));const f={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"List Prompts",permalink:"/docs/singulatron/list-prompts"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},S={},N=[];function q(e){const s={code:"code",p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/prompt-service/prompt"}),"\n",(0,i.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,i.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,i.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(p(),{className:"openapi-tabs__mime",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})}),(0,i.jsx)("strong",{className:"openapi-schema__required",children:(0,i.jsx)(s.p,{children:"required"})})]}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(y.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompt"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(y.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(y.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(y.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(y.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function I(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(q,{...e})}):q(e)}}}]);