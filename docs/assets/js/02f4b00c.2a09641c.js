"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[110],{59280:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>b,default:()=>S,frontMatter:()=>y,metadata:()=>v,toc:()=>N});var i=a(74848),r=a(28453),t=a(91366),n=a.n(t),l=(a(6050),a(57742)),d=a.n(l),o=(a(67792),a(27362)),m=a.n(o),c=(a(36683),a(81124)),p=a.n(c),h=a(60674),u=a.n(h),j=a(23397),x=a.n(j),g=(a(26651),a(51107)),f=(a(77675),a(19365));const y={id:"get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},b=void 0,v={id:"singulatron/get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/singulatron/get-prompts.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/get-prompts",permalink:"/docs/singulatron/get-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/singulatron/add-prompt"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},q={},N=[];function M(e){const s={code:"code",p:"p",...(0,r.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(d(),{method:"post",path:"/prompt-svc/prompts"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(g.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(m(),{className:"openapi-tabs__mime",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"filters"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (",(0,i.jsx)(s.code,{children:"all"}),", ",(0,i.jsx)(s.code,{children:"equal"}),", ",(0,i.jsx)(s.code,{children:"contains"}),", ",(0,i.jsx)(s.code,{children:"startsWith"}),") and field selectors (",(0,i.jsx)(s.code,{children:"field"}),", ",(0,i.jsx)(s.code,{children:"fields"}),", ",(0,i.jsx)(s.code,{children:"id"}),") for easier access."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"fields",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonValues",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"op",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`equals`, `containsSubstring`, `startsWith`, `intersects`, `isInList`]",schema:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonAfter",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(f.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(f.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(f.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(f.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(f.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function S(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(M,{...e})}):M(e)}}}]);