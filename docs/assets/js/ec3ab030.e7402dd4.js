"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2652],{54160:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>q,contentTitle:()=>y,default:()=>w,frontMatter:()=>f,metadata:()=>v,toc:()=>N});var t=a(74848),i=a(28453),r=a(91366),n=a.n(r),l=(a(6050),a(57742)),o=a.n(l),d=(a(67792),a(27362)),p=a.n(d),m=(a(36683),a(81124)),c=a.n(m),h=a(60674),u=a.n(h),x=a(23397),g=a.n(x),j=(a(26651),a(51107)),b=(a(77675),a(19365));const f={id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},y=void 0,v={id:"singulatron/add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",source:"@site/docs/singulatron/add-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-prompt",permalink:"/docs/singulatron/add-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-prompt",title:"Add Prompt",description:"Adds a new prompt to the prompt queue and either waits for the response (if `sync` is set to true), or returns immediately.",sidebar_label:"Add Prompt",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/singulatron/singulatron",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"List Prompts",permalink:"/docs/singulatron/get-prompts"},next:{title:"Remove Prompt",permalink:"/docs/singulatron/remove-prompt"}},q={},N=[];function M(e){const s={code:"code",p:"p",...(0,i.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add Prompt"}),"\n",(0,t.jsx)(o(),{method:"post",path:"/prompt-svc/prompt"}),"\n",(0,t.jsxs)(s.p,{children:["Adds a new prompt to the prompt queue and either waits for the response (if ",(0,t.jsx)(s.code,{children:"sync"})," is set to true), or returns immediately."]}),"\n",(0,t.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,t.jsx)(p(),{className:"openapi-tabs__mime",children:(0,t.jsx)(b.default,{label:"application/json",value:"application/json-schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,t.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,t.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,t.jsx)(s.p,{children:"Body"})}),(0,t.jsx)("strong",{className:"openapi-schema__required",children:(0,t.jsx)(s.p,{children:"required"})})]}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,t.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,t.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}})]})]})})}),"\n",(0,t.jsx)("div",{children:(0,t.jsx)("div",{children:(0,t.jsxs)(n(),{label:void 0,id:void 0,children:[(0,t.jsxs)(b.default,{label:"200",value:"200",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"OK"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,t.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,t.jsx)("summary",{style:{},children:(0,t.jsxs)("span",{className:"openapi-schema__container",children:[(0,t.jsx)("strong",{className:"openapi-schema__property",children:(0,t.jsx)(s.p,{children:"prompt"})}),(0,t.jsx)("span",{className:"openapi-schema__name",children:(0,t.jsx)(s.p,{children:"object"})})]})}),(0,t.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,t.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,t.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,t.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,t.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,t.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,t.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 10,\n    "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n    "prompt": "What\'s a banana?",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "[INST]{prompt}[/INST]",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(b.default,{label:"400",value:"400",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Invalid JSON"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(b.default,{label:"401",value:"401",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Unauthorized"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,t.jsxs)(b.default,{label:"500",value:"500",children:[(0,t.jsx)("div",{children:(0,t.jsx)(s.p,{children:"Internal Server Error"})}),(0,t.jsx)("div",{children:(0,t.jsx)(p(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,t.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,t.jsxs)(g(),{className:"openapi-tabs__schema",children:[(0,t.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,t.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,t.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,t.jsx)("strong",{children:(0,t.jsx)(s.p,{children:"Schema"})})}),(0,t.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,t.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,t.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,t.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,t.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function w(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(M,{...e})}):M(e)}}}]);