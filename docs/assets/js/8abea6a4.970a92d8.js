"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[7955],{48533:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var n=s(74848),l=s(28453);const t={sidebar_position:60,tags:["policy-svc","blocklist","rate-limiting","policy","policies","reliability"]},c="Policy Svc",o={id:"services/policy-svc",title:"Policy Svc",description:"The policy service provides features such as rate limiting of endpoint calls by user ip, user id, organization id and more.",source:"@site/docs/services/policy-svc.md",sourceDirName:"services",slug:"/services/policy-svc",permalink:"/docs/services/policy-svc",draft:!1,unlisted:!1,editUrl:"https://github.com/singulatron/superplatform/tree/main/docs-source/docs/services/policy-svc.md",tags:[{inline:!0,label:"policy-svc",permalink:"/docs/tags/policy-svc"},{inline:!0,label:"blocklist",permalink:"/docs/tags/blocklist"},{inline:!0,label:"rate-limiting",permalink:"/docs/tags/rate-limiting"},{inline:!0,label:"policy",permalink:"/docs/tags/policy"},{inline:!0,label:"policies",permalink:"/docs/tags/policies"},{inline:!0,label:"reliability",permalink:"/docs/tags/reliability"}],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60,tags:["policy-svc","blocklist","rate-limiting","policy","policies","reliability"]},sidebar:"tutorialSidebar",previous:{title:"Model Svc",permalink:"/docs/services/model-svc"},next:{title:"Prompt Svc",permalink:"/docs/services/prompt-svc"}},r={},a=[{value:"Responsibilities",id:"responsibilities",level:2},{value:"How It Works",id:"how-it-works",level:2},{value:"Usage",id:"usage",level:2},{value:"Terms",id:"terms",level:2},{value:"Policy Templates",id:"policy-templates",level:3},{value:"Rate Limit",id:"rate-limit",level:4},{value:"Blocklist",id:"blocklist",level:4},{value:"Policy Instance",id:"policy-instance",level:3},{value:"Examples",id:"examples",level:2},{value:"Rate Limit",id:"rate-limit-1",level:3},{value:"Block by IP",id:"block-by-ip",level:3}];function d(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"policy-svc",children:"Policy Svc"}),"\n",(0,n.jsx)(i.p,{children:"The policy service provides features such as rate limiting of endpoint calls by user ip, user id, organization id and more."}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["This page is a high level overview of the ",(0,n.jsx)(i.code,{children:"Policy Svc"}),". For more details, please see the ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:"Policy Svc API documentation"}),"."]}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"responsibilities",children:"Responsibilities"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"Provide tools for service writers to prevent adversarial users from causing service degradation"}),"\n"]}),"\n",(0,n.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,n.jsxs)(i.p,{children:["The Policy Svc requires you to explicitly call the ",(0,n.jsx)(i.a,{href:"/docs/singulatron/check",children:"/policy-svc/check"})," endpoint in every service endpoint you are building. There is no magic or framework feature involved."]}),"\n",(0,n.jsx)(i.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(i.p,{children:"The policy service has two endpoint:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["You can create policy instances with ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:"/policy-svc/upsert-instance"})," - use this to define rate limits, block IPs etc."]}),"\n",(0,n.jsxs)(i.li,{children:["A ",(0,n.jsx)(i.a,{href:"/docs/singulatron/check",children:"/policy-svc/check"})," endpoint that you should call for every request in your endpoint you want to rate limit."]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["While the documentation should be\nthorough, it might be not be the easiest to understand at first glance due to the presence of ",(0,n.jsx)(i.code,{children:"*Parameters"})," fields which are specific to ",(0,n.jsx)(i.code,{children:"Policy Templates"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"terms",children:"Terms"}),"\n",(0,n.jsx)(i.h3,{id:"policy-templates",children:"Policy Templates"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"Policy Templates"})," are hardcoded features of the ",(0,n.jsx)(i.code,{children:"Policy Svc"}),":"]}),"\n",(0,n.jsx)(i.h4,{id:"rate-limit",children:"Rate Limit"}),"\n",(0,n.jsxs)(i.p,{children:["Rate Limit (templateId: ",(0,n.jsx)(i.code,{children:"rate-limit"}),") provides rate limiting various entities and scopes, see the ",(0,n.jsx)(i.code,{children:"rateLimitParameters"})," in the ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:"api doc"}),")."]}),"\n",(0,n.jsx)(i.h4,{id:"blocklist",children:"Blocklist"}),"\n",(0,n.jsxs)(i.p,{children:["Blocklist provides blocking of access by ",(0,n.jsx)(i.code,{children:"ip"})," addresses, see the ",(0,n.jsx)(i.code,{children:"blocklistParameters"})," in the ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:"api doc"}),")."]}),"\n",(0,n.jsx)(i.h3,{id:"policy-instance",children:"Policy Instance"}),"\n",(0,n.jsx)(i.p,{children:"A policy instance is a specific application of a policy template to certain data like endpoints, user ids, ip addresses etc."}),"\n",(0,n.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(i.h3,{id:"rate-limit-1",children:"Rate Limit"}),"\n",(0,n.jsxs)(i.p,{children:["The following ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:(0,n.jsx)(i.code,{children:"/policy-svc/upsert-instance"})})," payload rate limits calls to the ",(0,n.jsx)(i.code,{children:"register"})," endpoint by caller IP: maximum 5 calls are permitted per IP per day:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-js",children:'{\n  "instance": {\n    "endpoint": "/user-svc/register",\n    "id": "insta_dBZRCej3fo",\n    "rateLimitParameters": {\n      "entity": "ip",\n      "maxRequests": 5,\n      "scope": "endpoint",\n      "timeWindow": "1d"\n    },\n    "templateId": "rate-limit"\n  }\n}\n'})}),"\n",(0,n.jsx)(i.h3,{id:"block-by-ip",children:"Block by IP"}),"\n",(0,n.jsxs)(i.p,{children:["The following ",(0,n.jsx)(i.a,{href:"/docs/singulatron/upsert-instance",children:(0,n.jsx)(i.code,{children:"/policy-svc/upsert-instance"})})," payload blocks access to the register endpoint by ip address."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-js",children:'{\n  "instance": {\n    "endpoint": "/user-svc/register",\n    "id": "insta_dBZRCej3fo",\n    "blocklistParameters": {\n      "blockedIPs": ["8.8.8.8"]\n    },\n    "templateId": "rate-limit"\n  }\n}\n'})})]})}function p(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>c,x:()=>o});var n=s(96540);const l={},t=n.createContext(l);function c(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:c(e.components),n.createElement(t.Provider,{value:i},e.children)}}}]);