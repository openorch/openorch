"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[4644],{145262:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>v,contentTitle:()=>b,default:()=>w,frontMatter:()=>y,metadata:()=>N,toc:()=>q});var i=a(474848),t=a(28453),r=a(891366),n=a.n(r),l=(a(206050),a(157742)),o=a.n(l),d=(a(567792),a(427362)),m=a.n(d),c=(a(336683),a(781124)),p=a.n(c),h=a(760674),u=a.n(h),j=a(323397),f=a.n(j),x=(a(626651),a(751107)),g=(a(377675),a(119365));const y={id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},b=void 0,N={id:"openorch/list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",source:"@site/docs/openorch/list-prompts.api.mdx",sourceDirName:"openorch",slug:"/openorch/list-prompts",permalink:"/docs/openorch/list-prompts",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"list-prompts",title:"List Prompts",description:"List prompts that satisfy a query.",sidebar_label:"List Prompts",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Add Prompt",permalink:"/docs/openorch/add-prompt"},next:{title:"Subscribe to Prompt Responses by Thread",permalink:"/docs/openorch/subscribe-to-prompt-responses"}},v={},q=[];function S(e){const s={code:"code",p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(x.default,{as:"h1",className:"openapi__heading",children:"List Prompts"}),"\n",(0,i.jsx)(o(),{method:"post",path:"/prompt-svc/prompts"}),"\n",(0,i.jsx)(s.p,{children:"List prompts that satisfy a query."}),"\n",(0,i.jsx)(x.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,i.jsx)(m(),{className:"openapi-tabs__mime",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json-schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:(0,i.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,i.jsx)(s.p,{children:"Body"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,i.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,i.jsx)(s.p,{children:"List Prompts Request"})})}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"query"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"filters"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsxs)(s.p,{children:["Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (",(0,i.jsx)(s.code,{children:"all"}),", ",(0,i.jsx)(s.code,{children:"equal"}),", ",(0,i.jsx)(s.code,{children:"contains"}),", ",(0,i.jsx)(s.code,{children:"startsWith"}),") and field selectors (",(0,i.jsx)(s.code,{children:"field"}),", ",(0,i.jsx)(s.code,{children:"fields"}),", ",(0,i.jsx)(s.code,{children:"id"}),") for easier access."]})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"fields",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{items:{type:"string"},type:"array"}}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonValues",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"op",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`equals`, `containsSubstring`, `startsWith`, `intersects`, `isInList`]",schema:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})}),(0,i.jsx)(u(),{collapsible:!1,name:"jsonAfter",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"limit",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"Limit the number of records in the result set.",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"orderBys"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("div",{style:{marginTop:".5rem",marginBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"OrderBys order the result set."})}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"desc",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"field",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"The field by which to order the results",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"randomize",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})})})]})})}),"\n",(0,i.jsx)("div",{children:(0,i.jsx)("div",{children:(0,i.jsxs)(n(),{label:void 0,id:void 0,children:[(0,i.jsxs)(g.default,{label:"200",value:"200",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"OK"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,i.jsx)(u(),{collapsible:!1,name:"after",required:!1,schemaName:"",qualifierMessage:void 0,schema:{}}),(0,i.jsx)(u(),{collapsible:!1,name:"count",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{type:"integer"}}),(0,i.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,i.jsx)("summary",{style:{},children:(0,i.jsxs)("span",{className:"openapi-schema__container",children:[(0,i.jsx)("strong",{className:"openapi-schema__property",children:(0,i.jsx)(s.p,{children:"prompts"})}),(0,i.jsx)("span",{className:"openapi-schema__name",children:(0,i.jsx)(s.p,{children:"object[]"})})]})}),(0,i.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"},children:(0,i.jsx)(s.p,{children:"Array ["})})}),(0,i.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",example:10,type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the OpenOrch internal ID of the model.",example:"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"prompt",required:!0,schemaName:"string",qualifierMessage:void 0,schema:{description:"Prompt is the message itself eg. \"What's a banana?",example:"What's a banana?",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,i.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,i.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,i.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. If not present it's derived from ModelId.",example:"[INST]{prompt}[/INST]",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,i.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}}),(0,i.jsx)("li",{children:(0,i.jsx)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"},children:(0,i.jsx)(s.p,{children:"]"})})})]})]})})]})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "after": {},\n  "count": 0,\n  "prompts": [\n    {\n      "createdAt": "string",\n      "error": "string",\n      "id": "string",\n      "lastRun": "string",\n      "maxRetries": 10,\n      "modelId": "huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf",\n      "prompt": "What\'s a banana?",\n      "runCount": 0,\n      "status": "scheduled",\n      "sync": true,\n      "template": "[INST]{prompt}[/INST]",\n      "threadId": "string",\n      "updatedAt": "string",\n      "userId": "string"\n    }\n  ]\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"400",value:"400",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Invalid JSON"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"401",value:"401",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Unauthorized"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,i.jsxs)(g.default,{label:"500",value:"500",children:[(0,i.jsx)("div",{children:(0,i.jsx)(s.p,{children:"Internal Server Error"})}),(0,i.jsx)("div",{children:(0,i.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,i.jsx)(g.default,{label:"application/json",value:"application/json",children:(0,i.jsxs)(f(),{className:"openapi-tabs__schema",children:[(0,i.jsx)(g.default,{label:"Schema",value:"Schema",children:(0,i.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,i.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,i.jsx)("strong",{children:(0,i.jsx)(s.p,{children:"Schema"})})}),(0,i.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,i.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,i.jsx)(g.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,i.jsx)(p(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function w(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(S,{...e})}):S(e)}}}]);