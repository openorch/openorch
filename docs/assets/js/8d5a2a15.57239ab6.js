"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[6636],{52724:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var r=i(74848),t=i(28453);const n={sidebar_position:1,tags:["user-svc","permissions","roles","authentication","authorization"]},a="User Svc",o={id:"services/user-svc",title:"User Svc",description:"The user service (abbreviated to User Svc) is at the heart of Singulatron.",source:"@site/docs/services/user-svc.md",sourceDirName:"services",slug:"/services/user-svc",permalink:"/docs/services/user-svc",draft:!1,unlisted:!1,editUrl:"https://github.com/singulatron/singulatron/tree/main/docs-source/docs/services/user-svc.md",tags:[{inline:!0,label:"user-svc",permalink:"/docs/tags/user-svc"},{inline:!0,label:"permissions",permalink:"/docs/tags/permissions"},{inline:!0,label:"roles",permalink:"/docs/tags/roles"},{inline:!0,label:"authentication",permalink:"/docs/tags/authentication"},{inline:!0,label:"authorization",permalink:"/docs/tags/authorization"}],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,tags:["user-svc","permissions","roles","authentication","authorization"]},sidebar:"tutorialSidebar",previous:{title:"Services",permalink:"/docs/category/services"},next:{title:"Contributing",permalink:"/docs/category/contributing"}},c={},l=[{value:"Writing a service that uses the User Svc",id:"writing-a-service-that-uses-the-user-svc",level:2},{value:"Managing credentials",id:"managing-credentials",level:3},{value:"Defining your permissions",id:"defining-your-permissions",level:3}];function h(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.h1,{id:"user-svc",children:"User Svc"}),"\n",(0,r.jsxs)(s.p,{children:["The user service (abbreviated to ",(0,r.jsx)(s.code,{children:"User Svc"}),") is at the heart of Singulatron.\nThis page aims to give a high level overview about it. For API call level details see the ",(0,r.jsx)(s.a,{href:"http://localhost:3000/docs/singulatron/login",children:"API documentation"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"writing-a-service-that-uses-the-user-svc",children:"Writing a service that uses the User Svc"}),"\n",(0,r.jsx)(s.h3,{id:"managing-credentials",children:"Managing credentials"}),"\n",(0,r.jsx)(s.p,{children:"The first concept to understand is that service (machine) and user (human) accounts look and function the same."}),"\n",(0,r.jsxs)(s.p,{children:["Every service you write needs to ",(0,r.jsx)(s.a,{href:"http://localhost:3000/docs/singulatron/register",children:"register"})," at startup, or log in with the credentials it saves and manages if it's already regsitered. Just like a human."]}),"\n",(0,r.jsxs)(s.p,{children:["All of this should happen through the Singulatron API, or a language specific client that was generated from the API, but we also publish some language specific helper functions in the ",(0,r.jsx)(s.a,{href:"https://github.com/singulatron/singulatron/tree/main/localtron/sdk",children:"SDK folder"})," - they are not strictly needed however."]}),"\n",(0,r.jsx)(s.h3,{id:"defining-your-permissions",children:"Defining your permissions"}),"\n",(0,r.jsxs)(s.p,{children:["Let's say your service is ",(0,r.jsx)(s.code,{children:"petstore-svc"}),". Singulatron prefers fine-grained access control, so you are free to define your own permissions, such as ",(0,r.jsx)(s.code,{children:"petstore-svc:read"})," or ",(0,r.jsx)(s.code,{children:"petstore-svc:pet:read"}),". The permission names are up to you, but"]})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}}}]);