"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[3758],{56745:(e,s,a)=>{a.r(s),a.d(s,{assets:()=>N,contentTitle:()=>q,default:()=>w,frontMatter:()=>f,metadata:()=>y,toc:()=>v});var r=a(74848),t=a(28453),i=a(91366),n=a.n(i),l=(a(6050),a(57742)),d=a.n(l),o=(a(67792),a(27362)),m=a.n(o),p=(a(36683),a(81124)),c=a.n(p),h=a(60674),u=a.n(h),g=a(23397),x=a.n(g),j=(a(26651),a(51107)),b=(a(77675),a(19365));const f={id:"add-a-new-prompt",title:"Add a new prompt",description:"Add a new prompt for a user",sidebar_label:"Add a new prompt",hide_title:!0,hide_table_of_contents:!0,api:"eJztWE2P2zYQ/SsDXnpxdrdFe/GlSLYpsG2TDdYb9GAvkLE4lpiVSC05XK9r+L8XQ0mWbCsJkENO9okakjOPbzgf5lZpCpk3NRtn1VS91hoQLK2h9q6qGVbOA0IM5NVEeXqKFPiN0xs13arMWSbLMsS6Lk2GouXycxBVWxWygiqUUe1dTZ4NhfarqvlUnnlCJv06TR3Cuu6mwATggoBNReBWadwiTduNsxdqonhTk5qqwN7YXO0mirx3/lTvWxEDF8iA3gUCHWVHp5JeKIuydAJmBWg3o7qNPlV8ozuk0ZqnSHDzxyHcUU0lBr6L9lTdP83E2OllT4fXx/HTV/hyR+xbng9Vv9vPQagpMytDGgq3hgrtJllqbIZNYKogFC6WGjyx3wB2htcFWTAMj0R1gES2sfkAi7FMOfkExmkqb0Y4e9dMyCE/x8DJ6szYPJbI3lkQHd5iOeAy6Ro9cn/JDo18aAC3RFYUAuYEhgOVK6D8YmEBYKH+LZB/CoCwRIsWf1+oMSM+2msX7YiZu3amM2RjtSSfYO8Z7bjDkOgU3nUkYNcQGEbZC4wckxuxLG9XajrfKrKxUtN5CjgdS9IqQbOCcqIyV9UlcZImxWmES7Ta2TTO0GYk2x6OzzhRL69E+6tn9BYruT/zlsJZAjIbmBzK7/bmh9LrAZSh/O0e1lD6egDxQMse7u5hcsR7s+I41IS3jc1O3TTb2Ay0N88U5A5zQb5zC2q55SnfdZd+jYYBrYYCbQ7RsikXduBJE0DwdmnD5hfwZgOaVhhLHro8Xe+cOEAdGZwFhKdIkRZWtMvCrDRkGdamLJvVIS4F+DLdD4T7whNqmLEnrC4W9k/n4Sma7DHh08bzBtqD2lzCmZ7Jg5E77VZMtr2GhMGQF5XaARfG5gGEKe+si6HcXCzsjQUuJDVmGCRHEENijR2wjzQIvqVzJaEVtpmqukSmU8bv25kjF8FtWoDlBbwzecGwJNAkjtGw8q6CNjmk8JzfvJ/dP2ybrbv5Zfoci09OLI3lmvt2povPPqU0e/rUtqTSCS3sLhb2OrklHHrjwBeyEAJR0oU2rBt6O3WThXU+kfipPbnQ/aljsy23y9Jlj+K4RsFogou1/lK1/NhNdadLNSIVjaO80yoZNxDIj1H3MclBij8ae0yf7IJ14YSiyjCT/nrR2+0lbvmZMh6V7I7DXNqUNpPfNTHadidG0shUqJT0TKF2NjRV75erq9Oz3P6dEuR3tTGNb2T0leJz7nDOHc65wzl3OOcO59zhnDucc4fzxQ5nN1G/jnUoN/YZS6Phr9nt++/vVfbNwbexNUh+HmHFYuTCefNfk1J/CJLfxjlpy+SMvAR9Sq4/CJIIMU9VovF4kJpSERdOq6mqXWpFa+RCTdVls+QStTAmOO76F7S3Lyi14vBFbNAh9hWqBdgLpB/rv/Y9VS8atkNXg4akX9GZ7CV9qb/qi/BBxW0qjETxMP/1Gvpk1MsGQTwQtoE3pNrYleseFTETMoRqw8KQtCbP5EPj/tT8uMAVJrdK1R55uVRHhXPwXPmNV87W6UwvfFmXaFK+j75MnkqO7XwvXYZOTUUhfp/O1Xa7xEAffbnbifgpkt+o6fxhop7RG1zKaeYPu4kqCLX8e5hv1SNt5A9Ag+7VvViX5WUUFCcXeTfpdrzOMkoYvrx2eDU/3M7u1UQt28dbuRNqqjyuxfe4blh2ia0UFkm2VSXaPGIuaxud8vsfl0nUNg==",sidebar_class_name:"post api-method",custom_edit_url:null},q=void 0,y={id:"singulatron/add-a-new-prompt",title:"Add a new prompt",description:"Add a new prompt for a user",source:"@site/docs/singulatron/add-a-new-prompt.api.mdx",sourceDirName:"singulatron",slug:"/singulatron/add-a-new-prompt",permalink:"/docs/singulatron/add-a-new-prompt",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"add-a-new-prompt",title:"Add a new prompt",description:"Add a new prompt for a user",sidebar_label:"Add a new prompt",hide_title:!0,hide_table_of_contents:!0,api:"eJztWE2P2zYQ/SsDXnpxdrdFe/GlSLYpsG2TDdYb9GAvkLE4lpiVSC05XK9r+L8XQ0mWbCsJkENO9okakjOPbzgf5lZpCpk3NRtn1VS91hoQLK2h9q6qGVbOA0IM5NVEeXqKFPiN0xs13arMWSbLMsS6Lk2GouXycxBVWxWygiqUUe1dTZ4NhfarqvlUnnlCJv06TR3Cuu6mwATggoBNReBWadwiTduNsxdqonhTk5qqwN7YXO0mirx3/lTvWxEDF8iA3gUCHWVHp5JeKIuydAJmBWg3o7qNPlV8ozuk0ZqnSHDzxyHcUU0lBr6L9lTdP83E2OllT4fXx/HTV/hyR+xbng9Vv9vPQagpMytDGgq3hgrtJllqbIZNYKogFC6WGjyx3wB2htcFWTAMj0R1gES2sfkAi7FMOfkExmkqb0Y4e9dMyCE/x8DJ6szYPJbI3lkQHd5iOeAy6Ro9cn/JDo18aAC3RFYUAuYEhgOVK6D8YmEBYKH+LZB/CoCwRIsWf1+oMSM+2msX7YiZu3amM2RjtSSfYO8Z7bjDkOgU3nUkYNcQGEbZC4wckxuxLG9XajrfKrKxUtN5CjgdS9IqQbOCcqIyV9UlcZImxWmES7Ta2TTO0GYk2x6OzzhRL69E+6tn9BYruT/zlsJZAjIbmBzK7/bmh9LrAZSh/O0e1lD6egDxQMse7u5hcsR7s+I41IS3jc1O3TTb2Ay0N88U5A5zQb5zC2q55SnfdZd+jYYBrYYCbQ7RsikXduBJE0DwdmnD5hfwZgOaVhhLHro8Xe+cOEAdGZwFhKdIkRZWtMvCrDRkGdamLJvVIS4F+DLdD4T7whNqmLEnrC4W9k/n4Sma7DHh08bzBtqD2lzCmZ7Jg5E77VZMtr2GhMGQF5XaARfG5gGEKe+si6HcXCzsjQUuJDVmGCRHEENijR2wjzQIvqVzJaEVtpmqukSmU8bv25kjF8FtWoDlBbwzecGwJNAkjtGw8q6CNjmk8JzfvJ/dP2ybrbv5Zfoci09OLI3lmvt2povPPqU0e/rUtqTSCS3sLhb2OrklHHrjwBeyEAJR0oU2rBt6O3WThXU+kfipPbnQ/aljsy23y9Jlj+K4RsFogou1/lK1/NhNdadLNSIVjaO80yoZNxDIj1H3MclBij8ae0yf7IJ14YSiyjCT/nrR2+0lbvmZMh6V7I7DXNqUNpPfNTHadidG0shUqJT0TKF2NjRV75erq9Oz3P6dEuR3tTGNb2T0leJz7nDOHc65wzl3OOcO59zhnDucc4fzxQ5nN1G/jnUoN/YZS6Phr9nt++/vVfbNwbexNUh+HmHFYuTCefNfk1J/CJLfxjlpy+SMvAR9Sq4/CJIIMU9VovF4kJpSERdOq6mqXWpFa+RCTdVls+QStTAmOO76F7S3Lyi14vBFbNAh9hWqBdgLpB/rv/Y9VS8atkNXg4akX9GZ7CV9qb/qi/BBxW0qjETxMP/1Gvpk1MsGQTwQtoE3pNrYleseFTETMoRqw8KQtCbP5EPj/tT8uMAVJrdK1R55uVRHhXPwXPmNV87W6UwvfFmXaFK+j75MnkqO7XwvXYZOTUUhfp/O1Xa7xEAffbnbifgpkt+o6fxhop7RG1zKaeYPu4kqCLX8e5hv1SNt5A9Ag+7VvViX5WUUFCcXeTfpdrzOMkoYvrx2eDU/3M7u1UQt28dbuRNqqjyuxfe4blh2ia0UFkm2VSXaPGIuaxud8vsfl0nUNg==",sidebar_class_name:"post api-method",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Create or update a generic object",permalink:"/docs/singulatron/create-or-update-a-generic-object"},next:{title:"List prompts",permalink:"/docs/singulatron/list-prompts"}},N={},v=[];function S(e){const s={p:"p",...(0,t.R)(),...e.components},{Details:a}=s;return a||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(j.default,{as:"h1",className:"openapi__heading",children:"Add a new prompt"}),"\n",(0,r.jsx)(d(),{method:"post",path:"/prompt/add"}),"\n",(0,r.jsx)(s.p,{children:"Add a new prompt for a user"}),"\n",(0,r.jsx)(j.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(m(),{className:"openapi-tabs__mime",children:(0,r.jsx)(b.default,{label:"application/json",value:"application/json-schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details mime","data-collapsed":!1,open:!0,children:[(0,r.jsxs)("summary",{style:{},className:"openapi-markdown__details-summary-mime",children:[(0,r.jsx)("h3",{className:"openapi-markdown__details-summary-header-body",children:(0,r.jsx)(s.p,{children:"Body"})}),(0,r.jsx)("strong",{className:"openapi-schema__required",children:(0,r.jsx)(s.p,{children:"required"})})]}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"},children:(0,r.jsx)("div",{style:{marginTop:"1rem",marginBottom:"1rem"},children:(0,r.jsx)(s.p,{children:"Add Prompt Request"})})}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,r.jsx)("summary",{style:{},children:(0,r.jsxs)("span",{className:"openapi-schema__container",children:[(0,r.jsx)("strong",{className:"openapi-schema__property",children:(0,r.jsx)(s.p,{children:"prompt"})}),(0,r.jsx)("span",{className:"openapi-schema__name",children:(0,r.jsx)(s.p,{children:"object"})})]})}),(0,r.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"prompt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:'Prompt is the message itself eg.\n   "What\'s a banana?"',type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,r.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,r.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. Might be derived from ModelId\n   [INST]{prompt}[/INST]",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})})]})})}),"\n",(0,r.jsx)("div",{children:(0,r.jsx)("div",{children:(0,r.jsxs)(n(),{label:void 0,id:void 0,children:[(0,r.jsxs)(b.default,{label:"200",value:"200",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"OK"})}),(0,r.jsx)("div",{children:(0,r.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsxs)("ul",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"answer",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}}),(0,r.jsx)(u(),{collapsible:!0,className:"schemaItem",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details",children:[(0,r.jsx)("summary",{style:{},children:(0,r.jsxs)("span",{className:"openapi-schema__container",children:[(0,r.jsx)("strong",{className:"openapi-schema__property",children:(0,r.jsx)(s.p,{children:"prompt"})}),(0,r.jsx)("span",{className:"openapi-schema__name",children:(0,r.jsx)(s.p,{children:"object"})})]})}),(0,r.jsxs)("div",{style:{marginLeft:"1rem"},children:[(0,r.jsx)(u(),{collapsible:!1,name:"createdAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"CreatedAt is the time of the prompt creation.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Error that arose during prompt execution, if any.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"id",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Id is the unique ID of the prompt.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"lastRun",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"LastRun is the time of the last prompt run.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"maxRetries",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"MaxRetries specified how many times the system should retry a prompt when it keeps erroring.",type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"modelId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ModelId is just the Singulatron internal ID of the model.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"prompt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:'Prompt is the message itself eg.\n   "What\'s a banana?"',type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"runCount",required:!1,schemaName:"integer",qualifierMessage:void 0,schema:{description:"RunCount is the number of times the prompt was retried due to errors",type:"integer"}}),(0,r.jsx)(u(),{collapsible:!1,name:"status",required:!1,schemaName:"string",qualifierMessage:"**Possible values:** [`scheduled`, `running`, `completed`, `errored`, `abandoned`, `canceled`]",schema:{enum:["scheduled","running","completed","errored","abandoned","canceled"],type:"string","x-enum-varnames":["PromptStatusScheduled","PromptStatusRunning","PromptStatusCompleted","PromptStatusErrored","PromptStatusAbandoned","PromptStatusCanceled"]}}),(0,r.jsx)(u(),{collapsible:!1,name:"sync",required:!1,schemaName:"boolean",qualifierMessage:void 0,schema:{description:"Sync drives whether prompt add request should wait and hang until\nthe prompt is done executing. By default the prompt just gets put on a queue\nand the client will just subscribe to a Thread Stream.\nFor quick and dirty scripting however it's often times easier to do things syncronously.\nIn those cases set Sync to true.",type:"boolean"}}),(0,r.jsx)(u(),{collapsible:!1,name:"template",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"Template of the prompt. Optional. Might be derived from ModelId\n   [INST]{prompt}[/INST]",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"threadId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"ThreadId is the ID of the thread a prompt belongs to.\nClients subscribe to Thread Streams to see the answer to a prompt,\nor set `prompt.sync` to true for a blocking answer.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"updatedAt",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UpdatedAt is the last time the prompt was updated.",type:"string"}}),(0,r.jsx)(u(),{collapsible:!1,name:"userId",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{description:"UserId contains the ID of the user who submitted the prompt.",type:"string"}})]})]})})]})]})}),(0,r.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "answer": "string",\n  "prompt": {\n    "createdAt": "string",\n    "error": "string",\n    "id": "string",\n    "lastRun": "string",\n    "maxRetries": 0,\n    "modelId": "string",\n    "prompt": "string",\n    "runCount": 0,\n    "status": "scheduled",\n    "sync": true,\n    "template": "string",\n    "threadId": "string",\n    "updatedAt": "string",\n    "userId": "string"\n  }\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(b.default,{label:"400",value:"400",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Invalid JSON"})}),(0,r.jsx)("div",{children:(0,r.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(b.default,{label:"401",value:"401",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Unauthorized"})}),(0,r.jsx)("div",{children:(0,r.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]}),(0,r.jsxs)(b.default,{label:"500",value:"500",children:[(0,r.jsx)("div",{children:(0,r.jsx)(s.p,{children:"Internal Server Error"})}),(0,r.jsx)("div",{children:(0,r.jsx)(m(),{className:"openapi-tabs__mime",schemaType:"response",children:(0,r.jsx)(b.default,{label:"application/json",value:"application/json",children:(0,r.jsxs)(x(),{className:"openapi-tabs__schema",children:[(0,r.jsx)(b.default,{label:"Schema",value:"Schema",children:(0,r.jsxs)(a,{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0,children:[(0,r.jsx)("summary",{style:{},className:"openapi-markdown__details-summary-response",children:(0,r.jsx)("strong",{children:(0,r.jsx)(s.p,{children:"Schema"})})}),(0,r.jsx)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,r.jsx)("ul",{style:{marginLeft:"1rem"},children:(0,r.jsx)(u(),{collapsible:!1,name:"error",required:!1,schemaName:"string",qualifierMessage:void 0,schema:{type:"string"}})})]})}),(0,r.jsx)(b.default,{label:"Example (from schema)",value:"Example (from schema)",children:(0,r.jsx)(c(),{responseExample:'{\n  "error": "string"\n}',language:"json"})})]})})})})]})]})})})]})}function w(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(S,{...e})}):S(e)}}}]);