{"searchDocs":[{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Welcome to Singulatron","type":0,"sectionRef":"#","url":"/docs/intro","content":"Welcome to Singulatron What is it?â€‹ Singulatron is a rapid prototyping environment for the AI age. It allows you to self-host and work with LLMs and other AI technologies, offering a comprehensive framework and ecosystem for rapidly building AI-driven applications. It lets you:â€‹ Run AI Models [x]â€‹ Run open-source AI models privately on your own infrastructure, ensuring that your data and operations remain fully under your control. Quickly Build Backendless AI Apps [x]â€‹ Build backendless application by using Singulatron as a database and AI prompting API. Develop Microservices-Based AI Applications [ ]â€‹ Singulatron itself is built on a microservices architecture. The platform's built-in services communicate with each other through the same APIs that you'll use to build apps on top of Singulatron. Deploy Third-Party AI Apps Easily [ ]â€‹ Singulatron is designed to make deploying third-party AI applications straightforward. With its focus on virtualization and containers (primarily Docker) and a microservices, API-first approach (using OpenAPI), Singulatron seamlessly integrates other applications into its ecosystem. Runningâ€‹ To run Singulatron on your servers, or even to lauch on your own laptop, see Start. Privacy Noticeâ€‹ Privacy is of prime importance to us. To learn more about the privcy aspects of this software, visit the Privacy Notice page.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Contribute to the Clients","type":0,"sectionRef":"#","url":"/docs/contributing/contributing-to-the-clients","content":"Contribute to the Clients TypeScript/JavaScript Clientsâ€‹ Without some scripting making sweeping changes in the clients would be hard because of how they depend on each other: js/types (@singulatron/types) is a dependency of js/client (@singulatron/client). To fix this a tiny script link_local.sh was introduced. Your local workflow when editing the @singulatron/types should be is to issue the bash link_local.sh in the clients/js folder. The script links up and builds the packages in the correct order for local testing. Publishingâ€‹ Just bump the version number in the package.jsons and the clients will be automatically published when merged to main.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Contribute to the Docs","type":0,"sectionRef":"#","url":"/docs/contributing/contributing-to-the-docs","content":"Contribute to the Docs Step into the docs-source folder from the repo root and run npm run start to see the Documentation section in live reload mode. However, the API section won't refresh automatically. To change the API, you must edit the Go endpoints and run bash build.sh in the docs-source folder. You can run bash build.sh while npm run start is active for a relatively quick feedback loop.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Privacy Notice","type":0,"sectionRef":"#","url":"/docs/privacy-notice","content":"Privacy Notice This document details the privacy considerations of Singulatron. Overviewâ€‹ By running AIs locally/on-premise with Singulatron, neither the questions nor the answers leave your computer/premises. There are a few dependencies that are so huge that they are not bundled with Singulatron and must be downloaded at the start of the application: Things Singulatron downloadsâ€‹ Model Listâ€‹ There is a small list of hardcoded models in Singulatron, but the rest of the model list is downloaded from https://api.commonagi.com, a server owned by the authors of the Singulatron. Model Filesâ€‹ The model weights themselves are downloaded from https://huggingface.co. Docker Containersâ€‹ Docker containers are a form of lightweight virtualization technology that enables Singulatron to run a wide range of AI architectures. Things Singulatron uploadsâ€‹ None.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Once it's running","type":0,"sectionRef":"#","url":"/docs/running/using","content":"Once it's running Using Singulatron. Default Credentialsâ€‹ Unless you configured otherwise, you can log in with the following default credentials: username: singulatron password: changeme ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Supported LLMs","type":0,"sectionRef":"#","url":"/docs/platform-capabilities/supported-llms","content":"Supported LLMs LLaMA ðŸ¦™ LLaMA 2 ðŸ¦™ðŸ¦™ LLaMA 3 ðŸ¦™ðŸ¦™ðŸ¦™ Mistral 7B Mixtral MoE DBRX Falcon Chinese LLaMA / Alpaca and Chinese LLaMA-2 / Alpaca-2 Vigogne (French) BERT Koala Baichuan 1 &amp; 2 + derivations Aquila 1 &amp; 2 Starcoder models Refact MPT Bloom Yi models StableLM models Deepseek models Qwen models PLaMo-13B Phi models GPT-2 Orion 14B InternLM2 CodeShell Gemma Mamba Grok-1 Xverse Command-R models SEA-LION GritLM-7B + GritLM-8x7B OLMo GPT-NeoX + Pythia ChatGLM3-6b + ChatGLM4-9b","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"User Svc","type":0,"sectionRef":"#","url":"/docs/services/user-svc","content":"User Svc The user service (abbreviated to User Svc) is at the heart of Singulatron. This page aims to give a high level overview about it. For API call level details see the API documentation. Writing a service that uses the User Svcâ€‹ Managing credentialsâ€‹ The first concept to understand is that service (machine) and user (human) accounts look and function the same. Every service you write needs to register at startup, or log in with the credentials it saves and manages if it's already regsitered. Just like a human. All of this should happen through the Singulatron API, or a language specific client that was generated from the API, but we also publish some language specific helper functions in the SDK folder - they are not strictly needed however. Defining your permissionsâ€‹ Let's say your service is petstore-svc. Singulatron prefers fine-grained access control, so you are free to define your own permissions, such as petstore-svc:read or petstore-svc:pet:read. The permission names are up to you, but","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Running Locally","type":0,"sectionRef":"#","url":"/docs/running/locally","content":"Running Locally If you have both Go and Angular installed on your computer, the easiest way to dip your feet into Singulatron is to run things locally. If you don't have those tools installed, you should probably look into the Docker Compose example. Without further ado: Backendâ€‹ cd localtron; go run main.go Frontendâ€‹ cd desktop/workspaces/angular-app/; npm run start Administrationâ€‹ Local filesâ€‹ By default Singulatron uses the folder ~/.singulatron on your machine for config, file downloads and for the local database. Config fileâ€‹ cat ~/.singulatron/config.yaml Download.jsonâ€‹ This file contains all the local downloads on a node. Losing is file is not a big deal as downloaded files are detected even if this file or the entry in this file is missing. ~/.singulatron/downloads.json Data filesâ€‹ By default Singulatron uses local gzipped json files to store database entries. Data access across Singulatron is interface based so the this implementation can be easily swapped out for PostgreSQL and other database backends. The files are located at ls ~/.singulatron/data If you want to view the contents of a file: cat ~/.singulatron/data/users.zip | gzip -dc # or if you jave jq installed cat ~/.singulatron/data/users.zip | gzip -dc | jq ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Docker Compose","type":0,"sectionRef":"#","url":"/docs/running/docker-compose","content":"Docker Compose This deployment method is one step above local development in terms of sophistication. Itâ€™s suitable for a development server or simple production environments. This snippet will give you a quick idea about how to deploy the frontend and backend containers so they play nicely together: version: &quot;3.8&quot; volumes: singulatron-data: name: singulatron-data driver: local services: singulatron-frontend: image: crufter/singulatron-frontend:latest ports: - &quot;3901:80&quot; environment: # The `BACKEND_ADDRESS` must be accessible from the browser. # It is not an internal address, it's the address the browser will make API requests to. - BACKEND_ADDRESS=http://127.0.0.1:58231 singulatron-backend: image: crufter/singulatron-backend:latest ports: - &quot;58231:58231&quot; volumes: # We mount the docker socket so the backend can start containers - /var/run/docker.sock:/var/run/docker.sock # We mount a volume so data will be persisted - singulatron-data:/root/.singulatron environment: # This folder will be mounted by the LLM containers to access the models - SINGULATRON_HOST_FOLDER=/var/lib/docker/volumes/ singulatron-data/_data # Address of the host so we can access the containers running the LLMs from the backend container # See &quot;System Specific Settings&quot; on this page for more information. - SINGULATRON_LLM_HOST=172.17.0.1 # # GPU Acceleration for NVIDIA GPUs # Uncomment this envar for NVIDIA GPUs. # # - SINGULATRON_GPU_PLATFORM=cuda Put the above into a file called docker-compose.yaml in a folder on your computer and run it with the following command: docker compose up Once it's runningâ€‹ After the containers successfully start, you can go to 127.0.0.1:3901 and log in with the Default Credentials. Please keep in mind that this will store data locally on your machine in as gzipped JSON because Singulatron defaults to local file storage. Configuringâ€‹ See the Backend Environment Variables and Frontend Environment Variables.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Frontend Environment Variables","type":0,"sectionRef":"#","url":"/docs/running/frontend-environment-variables","content":"Frontend Environment Variables BACKEND_ADDRESSâ€‹ In a publicly accessible setup should be something like https://singulatron-api.yourdomain.com. The point is that it must be accessible from the outside/browser.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Permission to Role","type":0,"sectionRef":"#","url":"/docs/singulatron/add-permission-to-role","content":"Add Permission to Role PUT /user-svc/role/:roleId/permission/:permissionId Adds a specific permission to a role identified by roleId. Requires the user-svc:permission:assign permission. Requestâ€‹ Path Parameters roleId stringrequired Role ID permissionId stringrequired Permission ID Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Message","type":0,"sectionRef":"#","url":"/docs/singulatron/add-message","content":"Add Message POST /chat-svc/thread/:threadId/message Add a new message to a specific thread. Requestâ€‹ Path Parameters threadId stringrequired Thread ID application/json Body required Add Message Request message object assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. Responsesâ€‹ 200400401500 Message successfully added application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Backend Environment Variables","type":0,"sectionRef":"#","url":"/docs/running/backend-environment-variables","content":"Backend Environment Variables SINGULATRON_GPU_PLATFORMâ€‹ This envar is used to enabel GPU acceleration. Supported platforms: cuda Do not set this if your card doesn't support the given architecture or things will break. SINGULATRON_HOST_FOLDERâ€‹ This envar is needed when Singulatron runs as a container next to containers it starts: Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron To be able persist data, a host folder must be mounted by all containers. In our example (SINGULATRON_HOST_FOLDER=/var/lib/docker/volumes/singulatron-data/_data) we basically pass down the full path of the singulatron-data volume we created in the docker compose file to the containers created by Singulatron. So cycle goes like this: Singulatron container writes to /root/.singulatron, which is mounted on host at /var/lib/docker/volumes/singulatron-data/_dataAssets (which are basically downloaded files) will be passed to containers created by Singulatron by mounting files in /var/lib/docker/volumes/singulatron-data/_data. SINGULATRON_LLM_HOSTâ€‹ When Singulatron is running in a container, it needs to know how to address its siblings (other containers it started): Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron The Singulatron Container uses the envar SINGULATRON_LLM_HOST to address Container Launched By Singulatron. Typically this value should be 172.17.0.1 if you are using the default docker network. If you are using an other network than default, use docker network inspect to find out the IP of your docker bridge for that network. Usually it's going to be 172.18.0.1. This envar is not needed if Singulatron runs directly on the host: Host With Singulatron | |-&gt; Container Launched By Singulatron SINGULATRON_DBâ€‹ You can use this envar to make Singulatron actually use a database instead of local file storage to store data. PostgreSQLâ€‹ SINGULATRON_DB=postgres SINGULATRON_DB_SQL_CONNECTION_STRING=&quot;postgres://postgres:mysecretpassword@localhost:5432/mydatabase?sslmode=disable&quot; Naturally, you should change the details of the connection string to reflect your environment. SINGULARON_LOCAL_STORAGE_PATHâ€‹ By default the local file storage will place files into ~/.singulatron/data, but this flag (and other config options) can override that.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Prompt","type":0,"sectionRef":"#","url":"/docs/singulatron/add-prompt","content":"Add Prompt POST /prompt-svc/prompt Adds a new prompt to the prompt queue and either waits for the response (if sync is set to true), or returns immediately. Requestâ€‹ application/json Body required Add Prompt Request id string Id is the unique ID of the prompt. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema answer string prompt object createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Change User Password","type":0,"sectionRef":"#","url":"/docs/singulatron/change-password","content":"Change User Password POST /user-svc/change-password Allows an authenticated user to change their own password. Requestâ€‹ application/json Body required Change Password Request currentPassword string newPassword string slug string Responsesâ€‹ 200400401500 Password changed successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Message","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-message","content":"Delete a Message DELETE /chat-svc/message/:messageId Delete a specific message from a chat thread by its ID Requestâ€‹ Path Parameters messageId stringrequired Message ID Responsesâ€‹ 200400401500 Message successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Thread","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-thread","content":"Delete a Thread DELETE /chat-svc/thread/:threadId Delete a specific chat thread by its ID Requestâ€‹ Path Parameters threadId stringrequired Thread ID Responsesâ€‹ 200400401500 Thread successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Download a File","type":0,"sectionRef":"#","url":"/docs/singulatron/download","content":"Download a File PUT /download-svc/download Start a download for a specified URL. Requires the download-svc:download:create permission. Requestâ€‹ application/json Body required Download Request folderPath string url string Responsesâ€‹ 200400401500 Download initiated successfully application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a User","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-user","content":"Delete a User DELETE /user-svc/user/:userId Delete a user based on the user ID. Requestâ€‹ Path Parameters userId stringrequired User ID Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Role","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-role","content":"Delete a Role DELETE /user-svc/role/:roleId Delete a role based on the role ID. Requestâ€‹ Path Parameters roleId stringrequired Role ID Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a Generic Object","type":0,"sectionRef":"#","url":"/docs/singulatron/create-object","content":"Create a Generic Object POST /generic-svc/object Creates a new object with the provided details. Requires authorization and user authentication. Requestâ€‹ application/json Body required Create request payload object object data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired userId string Responsesâ€‹ 200400401500 Success application/json SchemaExample (from schema) Schema object object createdAt string data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired updatedAt string userId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Config","type":0,"sectionRef":"#","url":"/docs/singulatron/get-config","content":"Get Config GET /config-svc/config Fetch the current configuration from the server Responsesâ€‹ 200401500 Current configuration retrieved successfully application/json SchemaExample (from schema) Schema config object app object loggingDisabled boolean directory string download object downloadFolder string isRuntimeInstalled boolean This flag drives a minor UX feature: if the user has not installed the runtime we show an INSTALLbutton, but if the user has already installed the runtime we showwe show a START runtime button. model object currentModelId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add Thread","type":0,"sectionRef":"#","url":"/docs/singulatron/add-thread","content":"Add Thread POST /chat-svc/thread Create a new chat thread and add the requesting user to it. Requires the chat-svc:thread:create permission. Requestâ€‹ application/json Body required Add Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responsesâ€‹ 200400401500 Thread successfully created application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Container Summary","type":0,"sectionRef":"#","url":"/docs/singulatron/get-container-summary","content":"Get Container Summary GET /docker-svc/container/:hash/summary/:numberOfLines Get a summary of the Docker container identified by the hash, limited to a specified number of lines Requestâ€‹ Path Parameters hash stringrequired Container Hash numberOfLines integerrequired Number of Lines Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema summary string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create an Organization","type":0,"sectionRef":"#","url":"/docs/singulatron/create-organization","content":"Create an Organization POST /user-svc/organization Allows a logged-in user to create a new organization. The user initiating the request will be assigned the role of admin for that organization. The initiating user will receive a dynamic role in the format user-svc:org:$organization-slug:admin, where $organization-slug is a unique identifier for the created organization. Dynamic roles are generated based on specific user-resource associations, offering more flexible permission management compared to static roles. Requestâ€‹ application/json Body required Create User Request id string name string Full name of the organization. slug string URL-friendly unique (inside the Singularon platform) identifier for the organization. Responsesâ€‹ 200400401500 User created successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a New User","type":0,"sectionRef":"#","url":"/docs/singulatron/create-user","content":"Create a New User POST /user-svc/user Allows an authenticated administrator to create a new user with specified details. Requestâ€‹ application/json Body required Create User Request password string roleIds string[] user object contact object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) primary boolean If this is the primary contact method updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Responsesâ€‹ 200400401500 User created successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Check","type":0,"sectionRef":"#","url":"/docs/singulatron/check","content":"Check POST /policy-svc/check Check records a resource access and returns if the access is allowed. Requestâ€‹ application/json Body required Check Request endpoint string ip string method string userId string Responsesâ€‹ 200400401500 Checked successfully application/json SchemaExample (from schema) Schema allowed booleanrequired Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Default Model Status","type":0,"sectionRef":"#","url":"/docs/singulatron/get-default-model-status","content":"Get Default Model Status GET /model-svc/default-model/status Retrieves the status of the default model. Requires the model-svc:model:view permission. Responsesâ€‹ 200401500 Model status retrieved successfully application/json SchemaExample (from schema) Schema status object address string assetsReady boolean running boolean Running triggers onModelLaunch on the frontend. Running is true when the model is both running and answering - fully loaded. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Change User Password (Admin)","type":0,"sectionRef":"#","url":"/docs/singulatron/change-password-admin","content":"Change User Password (Admin) POST /user-svc/change-password-admin Allows an administrator to change a user's password. Requestâ€‹ application/json Body required Change Password Request newPassword string slug string Responsesâ€‹ 200400401500 Password changed successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add a User to an Organization","type":0,"sectionRef":"#","url":"/docs/singulatron/add-user-to-organization","content":"Add a User to an Organization POST /user-svc/organization/:organizationId/user Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization. Requestâ€‹ Path Parameters organizationId stringrequired Organization ID application/json Body required Add User to Organization Request userId string Responsesâ€‹ 200400401403404500 User added successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Model Status","type":0,"sectionRef":"#","url":"/docs/singulatron/get-model-status","content":"Get Model Status GET /model-svc/model/:modelId/status Retrieves the status of a model by ID. Requires the model-svc:model:view permission. Requestâ€‹ Path Parameters modelId stringrequired Model ID Responsesâ€‹ 200401500 Model status retrieved successfully application/json SchemaExample (from schema) Schema status object address string assetsReady boolean running boolean Running triggers onModelLaunch on the frontend. Running is true when the model is both running and answering - fully loaded. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get a Download","type":0,"sectionRef":"#","url":"/docs/singulatron/get-download","content":"Get a Download GET /download-svc/download/:downloadId Get a download by ID. Requires the download-svc:download:view permission. Requestâ€‹ Path Parameters downloadId stringrequired Download ID Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema download object cancelled boolean dir string downloadedBytes integer error string fileName string filePath string fullFileSize integer id string paused boolean progress number status string url string exists boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Docker Service Information","type":0,"sectionRef":"#","url":"/docs/singulatron/get-info","content":"Get Docker Service Information GET /docker-svc/info Retrieve detailed information about the Docker service Responsesâ€‹ 200401500 Service Information application/json SchemaExample (from schema) Schema info object dockerDaemonAddress string error string hasDocker boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a Generic Object","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-objects","content":"Delete a Generic Object POST /generic-svc/objects/delete Removes a generic object from the system based on the provided conditions. Requires authorization and user authentication. Requestâ€‹ Path Parameters objectId stringrequired Object ID application/json Body required Delete request payload conditions object[] Array [ all object contains object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value equal object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value startsWith object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value ] table string Responsesâ€‹ 200400401500 Successful deletion of object application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a New Role","type":0,"sectionRef":"#","url":"/docs/singulatron/create-role","content":"Create a New Role POST /user-svc/role Create a new role.The role ID must be prefixed by the callers username (email).Eg. if the owner's slug is petstore-svc the role should look like petstore-svc:admin. The user account who creates the role will become the owner of that role, and only the owner will be able to edit the role. Requires the user-svc:role:create permission. Requestâ€‹ application/json Body required Create Role Request description string name string permissionIds string[] Responsesâ€‹ 200400401500 Role created successfully application/json SchemaExample (from schema) Schema role object createdAt string description string id string name string ownerId string updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Check If a Container Is Running","type":0,"sectionRef":"#","url":"/docs/singulatron/is-running","content":"Check If a Container Is Running GET /docker-svc/container/:hash/is-running Check if a Docker container identified by the hash is running Requestâ€‹ Path Parameters hash stringrequired Container Hash Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema isRunning boolean Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Threads","type":0,"sectionRef":"#","url":"/docs/singulatron/get-threads","content":"Get Threads POST /chat-svc/threads Fetch all chat threads associated with a specific user Requestâ€‹ application/json Body Get Threads Request object Responsesâ€‹ 200400401500 Threads successfully retrieved application/json SchemaExample (from schema) Schema threads object[] Array [ createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get a Model","type":0,"sectionRef":"#","url":"/docs/singulatron/get-model","content":"Get a Model GET /model-svc/model/:modelId Retrieves the details of a model by its ID. the Requires model.view permission. Requestâ€‹ Path Parameters modelId stringrequired Model ID Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema exists boolean model object assets object property name* string bits integer description string extension string flavour string full_name string id string max_bits integer max_ram number mirrors string[] name string parameters string platformId string prompt_template string quality string quant_comment string size number tags string[] uncensored boolean version string platform object architectures object cuda object envars string[] Envars passed to the container. eg. 'DEVICES=all' image string persistentPaths string[] Paths in the container to persist. port integer Port is the internal port of the Container default object envars string[] Envars passed to the container. eg. 'DEVICES=all' image string persistentPaths string[] Paths in the container to persist. port integer Port is the internal port of the Container id string name string version integer Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Messages","type":0,"sectionRef":"#","url":"/docs/singulatron/get-messages","content":"List Messages POST /chat-svc/thread/:threadId/messages Fetch messages (and associated assets) for a specific chat thread. Requestâ€‹ Path Parameters threadId stringrequired Thread ID Responsesâ€‹ 200400401500 Messages and assets successfully retrieved application/json SchemaExample (from schema) Schema assets object[] Array [ content string Content is the base64 encoded binary file direcly embedded in the asset itself createdAt string description string id string type string updatedAt string url string Url of the asset where ] messages object[] Array [ assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Docker Host","type":0,"sectionRef":"#","url":"/docs/singulatron/get-host","content":"Get Docker Host GET /docker-svc/host Retrieve information about the Docker host Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema host string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Public Key","type":0,"sectionRef":"#","url":"/docs/singulatron/get-public-key","content":"Get Public Key GET /user-svc/public-key Get the public key to descrypt the JWT. Responsesâ€‹ 200400401 OK application/json SchemaExample (from schema) Schema publicKey string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Downloads","type":0,"sectionRef":"#","url":"/docs/singulatron/list-downloads","content":"List Downloads POST /download-svc/downloads Fetch a list of all download details. Requires the download-svc:download:view permission. Responsesâ€‹ 200401500 List of downloads application/json SchemaExample (from schema) Schema downloads object[] Array [ cancelled boolean dir string downloadedBytes integer error string fileName string filePath string fullFileSize integer id string paused boolean progress number status string url string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Prompts","type":0,"sectionRef":"#","url":"/docs/singulatron/get-prompts","content":"List Prompts POST /prompt-svc/prompts List prompts that satisfy a query. Requestâ€‹ application/json Body List Prompts Request query object after undefined[] After is used for paginations. Instead of offset-based pagination, we support cursor-based pagination because it works better in a scalable, distributed environment. conditions object[] Conditions are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as condition constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ all object contains object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value equal object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value startsWith object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value ] count boolean Count true means return the count of the dataset filtered by Conditions without after or limit. limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema after count integer prompts object[] Array [ createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt stringrequired Prompt is the message itself eg. &quot;What's a banana? runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. If not present it's derived from ModelId. threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Models","type":0,"sectionRef":"#","url":"/docs/singulatron/list-models","content":"List Models POST /model-svc/models Retrieves a list of models. Requires model-svc:model:view permission. Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema models object[] Array [ assets object property name* string bits integer description string extension string flavour string full_name string id string max_bits integer max_ram number mirrors string[] name string parameters string platformId string prompt_template string quality string quant_comment string size number tags string[] uncensored boolean version string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Thread","type":0,"sectionRef":"#","url":"/docs/singulatron/get-thread","content":"Get Thread GET /chat-svc/thread/:threadId Fetch information about a specific chat thread by its ID Requestâ€‹ Path Parameters threadId stringrequired Thread ID Responsesâ€‹ 200400401500 Thread details successfully retrieved application/json SchemaExample (from schema) Schema exists boolean thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get all Roles","type":0,"sectionRef":"#","url":"/docs/singulatron/get-roles","content":"Get all Roles GET /user-svc/roles Retrieve all roles from the user service. Responsesâ€‹ 200401500 OK application/json SchemaExample (from schema) Schema roles object[] Array [ createdAt string description string id string name string ownerId string updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Pause a Download","type":0,"sectionRef":"#","url":"/docs/singulatron/pause","content":"Pause a Download PUT /download-svc/download/:downloadId/pause Pause a download that is currently in progress. Requires the download-svc:download:edit permission. Requestâ€‹ Path Parameters downloadId stringrequired Download ID Responsesâ€‹ 200400401500 Success response application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Get Permissions by Role","type":0,"sectionRef":"#","url":"/docs/singulatron/get-permissions-by-role","content":"Get Permissions by Role GET /user-svc/role/:roleId/permissions Retrieve permissions associated with a specific role ID. Requestâ€‹ Path Parameters roleId stringrequired Role ID Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema permissions object[] Array [ createdAt string description string id string eg. &quot;user.viewer&quot; name string eg. &quot;User Viewer&quot; ownerId string Service who owns the permission updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Nodes","type":0,"sectionRef":"#","url":"/docs/singulatron/list-nodes","content":"List Nodes POST /node-svc/nodes Retrieve a list of nodes. Requestâ€‹ application/json Body List Nodes Request object Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema nodes object[] Array [ gpus object[] Array [ busId string computeMode string gpuUtilization number id string Id Node.Hostname + IntraNodeId intraNodeId integer memoryTotal integer memoryUsage integer name string performanceState string powerCap number powerUsage number processDetails object[] Array [ memoryUsage integer pid integer processName string ] temperature number ] hostname string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Launch a Docker Container","type":0,"sectionRef":"#","url":"/docs/singulatron/launch-container","content":"Launch a Docker Container PUT /docker-svc/container Launches a Docker container with the specified parameters. Requires the docker-svc:docker:create permission. Requestâ€‹ application/json Body required Launch Container Request hostPort integer image string options object envs string[] gpuEnabled boolean hash string hostBinds string[] labels object property name* string name string port integer Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema info object newContainerStarted boolean portNumber integer Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Make a Model Default","type":0,"sectionRef":"#","url":"/docs/singulatron/make-default","content":"Make a Model Default PUT /model-svc/model/:modelId/make-default Sets a model as the default model â€” when prompts are sent without a Model ID, the default model is used. Requestâ€‹ Path Parameters modelId stringrequired Model ID Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Login","type":0,"sectionRef":"#","url":"/docs/singulatron/login","content":"Login POST /user-svc/login Authenticates a user and returns a token. Requestâ€‹ application/json Body required Login Request contact string password string slug string Responsesâ€‹ 200400500 Login successful application/json SchemaExample (from schema) Schema token object createdAt string deletedAt string id string token string updatedAt string userId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Publish an Event","type":0,"sectionRef":"#","url":"/docs/singulatron/publish-an-event","content":"Publish an Event POST /firehose-svc/publish Publishes an event to the firehose service after authorization check Requestâ€‹ application/json Body required Event to publish event object data name string Responsesâ€‹ 200400401 {} Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Is Authorized","type":0,"sectionRef":"#","url":"/docs/singulatron/is-authorized","content":"Is Authorized POST /user-svc/permission/:permissionId/is-authorized Check if a user is authorized for a specific permission. Requestâ€‹ Path Parameters permissionId stringrequired Permission ID application/json Body required Is Authorized Request contactsGranted string[] slugsGranted string[] Responsesâ€‹ 200400401 OK application/json SchemaExample (from schema) Schema authorized boolean user object contact object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) primary boolean If this is the primary contact method updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List Users","type":0,"sectionRef":"#","url":"/docs/singulatron/get-users","content":"List Users POST /user-svc/users Fetches a list of users with optional query filters and pagination. Requestâ€‹ application/json Body Get Users Request query object after undefined[] After is used for paginations. Instead of offset-based pagination, we support cursor-based pagination because it works better in a scalable, distributed environment. conditions object[] Conditions are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as condition constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ all object contains object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value equal object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value startsWith object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value ] count boolean Count true means return the count of the dataset filtered by Conditions without after or limit. limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] Responsesâ€‹ 200400401500 List of users retrieved successfully application/json SchemaExample (from schema) Schema after string count integer users object[] Array [ contact object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) primary boolean If this is the primary contact method updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove a User from an Organization","type":0,"sectionRef":"#","url":"/docs/singulatron/remove-user-from-organization","content":"Remove a User from an Organization DELETE /user-svc/organization/:organizationId/user/:userId Allows an authorized user to add another user to a specific organization. The user will be assigned a specific role within the organization. Requestâ€‹ Path Parameters organizationId stringrequired Organization ID userId stringrequired User ID application/json Body Add User to Organization Request object Responsesâ€‹ 200400401403404500 User added successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to Prompt","type":0,"sectionRef":"#","url":"/docs/singulatron/subscribe","content":"Subscribe to Prompt GET /prompt-svc/:threadId/subscribe Subscribe to prompt responses via Server-Sent Events (SSE) Requestâ€‹ Path Parameters threadId stringrequired Thread ID Responsesâ€‹ 200400401 Streaming response */* Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Set Role Permissions","type":0,"sectionRef":"#","url":"/docs/singulatron/set-role-permission","content":"Set Role Permissions PUT /user-svc/role/:roleId/permissions Set permissions for a specified role. The caller can add permissions it owns to any role. If the caller tries to add a permission it doesn't own to a role, StatusBadRequest will be returned. Requestâ€‹ Path Parameters roleId stringrequired Role ID application/json Body required Set Role Permissions Request permissionIds string[] Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Start the Default Model","type":0,"sectionRef":"#","url":"/docs/singulatron/start-default-model","content":"Start the Default Model PUT /model-svc/default-model/start Starts The Default Model. Requires the model-svc:model:create permission. Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Save Config","type":0,"sectionRef":"#","url":"/docs/singulatron/save-config","content":"Save Config PUT /config-svc/config Save the provided configuration to the server Requestâ€‹ application/json Body required Save Config Request config object app object loggingDisabled boolean directory string download object downloadFolder string isRuntimeInstalled boolean This flag drives a minor UX feature: if the user has not installed the runtime we show an INSTALLbutton, but if the user has already installed the runtime we showwe show a START runtime button. model object currentModelId string Responsesâ€‹ 200401500 Save Config Response application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove Prompt","type":0,"sectionRef":"#","url":"/docs/singulatron/remove-prompt","content":"Remove Prompt POST /prompt-svc/remove Remove a prompt by ID. Requestâ€‹ application/json Body required Remove Prompt Request promptId string Responsesâ€‹ 200400401500 {} application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Register","type":0,"sectionRef":"#","url":"/docs/singulatron/register","content":"Register POST /user-svc/register Register a new user with a name, email, and password. Requestâ€‹ application/json Body required Register Request contact object createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) primary boolean If this is the primary contact method updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified name string password string slug string Responsesâ€‹ 200400500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Query Generic Objects","type":0,"sectionRef":"#","url":"/docs/singulatron/query","content":"Query Generic Objects POST /generic-svc/objects Retrieves objects from a specified table based on search criteria. Requires authorization and user authentication. Use helper functions in your respective client library such as condition constructors (equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Requestâ€‹ application/json Body Query Request public boolean query object after undefined[] After is used for paginations. Instead of offset-based pagination, we support cursor-based pagination because it works better in a scalable, distributed environment. conditions object[] Conditions are filtering options of a query. It is advised to use It's advised to use helper functions in your respective client library such as condition constructors (all, equal, contains, startsWith) and field selectors (field, fields, id) for easier access. Array [ all object contains object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value equal object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value startsWith object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value ] count boolean Count true means return the count of the dataset filtered by Conditions without after or limit. limit integer Limit the number of records in the result set. orderBys object[] OrderBys order the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] table string Responsesâ€‹ 200400401500 Successful retrieval of objects application/json SchemaExample (from schema) Schema objects object[] Array [ createdAt string data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired updatedAt string userId string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert an Instance","type":0,"sectionRef":"#","url":"/docs/singulatron/upsert-instance","content":"Upsert an Instance PUT /policy-svc/instance/:instanceId Allows user to upsert a new policy instance based on a template. Requestâ€‹ Path Parameters instanceId stringrequired Instance ID application/json Body required Upsert Instance Request instance object blocklistParameters object blockedIPs string[] endpoint string id string rateLimitParameters object entity string Possible values: [userId, ip] maxRequests integer scope string Possible values: [endpoint, global] timeWindow string templateId stringrequired Possible values: [rate-limit, blocklist] Responsesâ€‹ 200400401500 Instance upserted successfully application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Singulatron","type":0,"sectionRef":"#","url":"/docs/singulatron/singulatron","content":"Version: 0.2 Export OpenAPI Spec Singulatron AI management and development platform. Authenticationâ€‹ API Key: BearerAuth Type &quot;Bearer&quot; followed by a space and token acquired from the User sService Login endpoint. Security Scheme Type: apiKey Header parameter name: Authorization Contact API Support: sales@singulatron.com URL: http://superplatform.ai/ Terms of Service http://swagger.io/terms/ License AGPL v3.0","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Start a Model","type":0,"sectionRef":"#","url":"/docs/singulatron/start-model","content":"Start a Model PUT /model-svc/model/:modelId/start Starts a model by ID Requestâ€‹ Path Parameters modelId stringrequired Model ID Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to the Event Stream","type":0,"sectionRef":"#","url":"/docs/singulatron/subscribe-to-the-event-stream","content":"Subscribe to the Event Stream GET /firehose-svc/subscribe Establish a subscription to the firehose events and accept a real time stream of them. Responsesâ€‹ 200401500 Event data text/event-stream Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Save User Profile","type":0,"sectionRef":"#","url":"/docs/singulatron/save-user-profile","content":"Save User Profile PUT /user-svc/user/:userId Save user profile information based on the provided user ID. Requestâ€‹ Path Parameters userId stringrequired User ID application/json Body required Save Profile Request name string slug string Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Read User by Token","type":0,"sectionRef":"#","url":"/docs/singulatron/read-user-by-token","content":"Read User by Token POST /user-svc/user/by-token Retrieve user information based on an authentication token. Requestâ€‹ application/json Body required Read User By Token Request token string Responsesâ€‹ 200400500 OK application/json SchemaExample (from schema) Schema user object contact object[] Contacts are used for login and identification purposes. Array [ createdAt string deletedAt string id string The unique identifier, which can be a URL. Example values: &quot;joe12&quot; (singulatron username), &quot;twitter.com/thejoe&quot; (twitter url), &quot;joe@joesdomain.com&quot; (email) platform string Platform of the contact (e.g., &quot;email&quot;, &quot;phone&quot;, &quot;twitter&quot;) primary boolean If this is the primary contact method updatedAt string userId string value string Value is the platform local unique identifier. Ie. while the id of a Twitter contact is twitter.com/thejoe, the value will be only thejoe. For email and phones the id and the value will be the same. This field mostly exists for display purposes. Example values: &quot;joe12&quot; (singulatron username), &quot;thejoe&quot; (twitter username), &quot;joe@joesdomain.com&quot; (email) verified boolean Whether the contact is verified ] createdAt string deletedAt string id string name string Full name of the organization. passwordHash string slug string URL-friendly unique (inside the Singularon platform) identifier for the user. updatedAt string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert a Generic Object","type":0,"sectionRef":"#","url":"/docs/singulatron/upsert-object","content":"Upsert a Generic Object PUT /generic-svc/object/:objectId Creates a new generic object or updates an existing one based on the provided data. Requires authorization and user authentication. Requestâ€‹ Path Parameters objectId stringrequired Object ID application/json Body required Upsert request payload object object data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired userId string Responsesâ€‹ 200400401500 Successful creation or update of object application/json SchemaExample (from schema) Schema object object createdAt string data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired updatedAt string userId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Upsert a Permission","type":0,"sectionRef":"#","url":"/docs/singulatron/upsert-permission","content":"Upsert a Permission PUT /user-svc/permission/:permissionId Creates or updates a permission.The permission ID must be prefixed by the callers username (email).Eg. if the owner's email/username is petstore-svc the permission should look like petstore-svc:pet:edit. Requires the user-svc:permission:create permission. Requestâ€‹ Path Parameters permissionId stringrequired Permission ID application/json Body required Permission Details permission object createdAt string description string id string eg. &quot;user.viewer&quot; name string eg. &quot;User Viewer&quot; ownerId string Service who owns the permission updatedAt string Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update Thread","type":0,"sectionRef":"#","url":"/docs/singulatron/update-thread","content":"Update Thread PUT /chat-svc/thread/:threadId Modify the details of a specific chat thread Requestâ€‹ Path Parameters threadId stringrequired Thread ID application/json Body required Update Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responsesâ€‹ 200400401500 Thread successfully updated application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update Generic Objects","type":0,"sectionRef":"#","url":"/docs/singulatron/update-objects","content":"Update Generic Objects POST /generic-svc/objects/update Updates objects in a specified table based on provided conditions. Requires authorization and user authentication. Requestâ€‹ application/json Body required Update request payload conditions object[] Array [ all object contains object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value equal object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value startsWith object selector object Selector selects one, more or all fields any boolean Any matches any fields in the object field string Field matchies a single field oneOf string[] OneOf matches a number of fields value ] object object createdAt string data object required property name* any id string public boolean Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone. table stringrequired updatedAt string userId string table string Responsesâ€‹ 200400401500 Successful update of objects application/json SchemaExample (from schema) Schema object Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"}],"options":{"id":"default"}}