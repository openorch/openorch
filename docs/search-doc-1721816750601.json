{"searchDocs":[{"title":"MDX Blog Post","type":0,"sectionRef":"#","url":"/blog/mdx-blog-post","content":"Blog posts support Docusaurus Markdown features, such as MDX. tip Use the power of React to create interactive blog posts. &lt;button onClick={() =&gt; alert('button clicked!')}&gt;Click me!&lt;/button&gt; Click me!","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Privacy Notice","type":0,"sectionRef":"#","url":"/docs/privacy-notice","content":"Privacy Notice This document details the privacy considerations of Singulatron. Overviewâ€‹ By running AIs locally/on-premise with Singulatron, neither the questions nor the answers leave your computer/premises. There are a few dependencies that are so huge that they are not bundled with Singulatron and must be downloaded at the start of the application: Things Singulatron downloadsâ€‹ Model Listâ€‹ There is a small list of hardcoded models in Singulatron, but the rest of the model list is downloaded from https://api.commonagi.com, a server owned by the authors of the Singulatron. Model Filesâ€‹ The model weights themselves are downloaded from https://huggingface.co. Docker Containersâ€‹ Docker containers are a form of lightweight virtualization technology that enables Singulatron to run a wide range of AI architectures. Things Singulatron uploadsâ€‹ None.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Welcome to Singulatron","type":0,"sectionRef":"#","url":"/docs/intro","content":"Welcome to Singulatron Singulatron is an open-source server daemon and web client that empowers you to self-host and interact with LLMs. It goes beyond chat functionality, enabling you to develop language-agnostic applications by harnessing Singulatron's AI infrastructure. Dive in and start building today! Startâ€‹ To deploy Singulatron on your servers, or even to lauch on your own laptop, see Start. Privacy Noticeâ€‹ Privacy is of prime importance to us. To learn more about the privcy aspects of this software, visit the Privacy Notice page.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Supported LLMs","type":0,"sectionRef":"#","url":"/docs/platform-capabilities/supported-llms","content":"Supported LLMs LLaMA ðŸ¦™ LLaMA 2 ðŸ¦™ðŸ¦™ LLaMA 3 ðŸ¦™ðŸ¦™ðŸ¦™ Mistral 7B Mixtral MoE DBRX Falcon Chinese LLaMA / Alpaca and Chinese LLaMA-2 / Alpaca-2 Vigogne (French) BERT Koala Baichuan 1 &amp; 2 + derivations Aquila 1 &amp; 2 Starcoder models Refact MPT Bloom Yi models StableLM models Deepseek models Qwen models PLaMo-13B Phi models GPT-2 Orion 14B InternLM2 CodeShell Gemma Mamba Grok-1 Xverse Command-R models SEA-LION GritLM-7B + GritLM-8x7B OLMo GPT-NeoX + Pythia ChatGLM3-6b + ChatGLM4-9b","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Long Blog Post","type":0,"sectionRef":"#","url":"/blog/long-blog-post","content":"This is the summary of a very long blog post, Use a &lt;!-- truncate --&gt; comment to limit blog post size in the list view. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Create a new chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/create-a-new-chat-thread","content":"Create a new chat thread POST /chat/thread/add Create a new chat thread and add the requesting user to it Requestâ€‹ application/json Body required Add Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responsesâ€‹ 200400401500 Thread successfully created application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Welcome","type":0,"sectionRef":"#","url":"/blog/welcome","content":"Docusaurus blogging features are powered by the blog plugin. Simply add Markdown files (or folders) to the blog directory. Regular blog authors can be added to authors.yml. The blog post date can be extracted from filenames, such as: 2019-05-30-welcome.md2019-05-30-welcome/index.md A blog post folder can be convenient to co-locate blog post images: The blog supports tags as well! And if you don't want a blog: just delete this directory, and use blog: false in your Docusaurus config.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"First Blog Post","type":0,"sectionRef":"#","url":"/blog/first-blog-post","content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque elementum dignissim ultricies. Fusce rhoncus ipsum tempor eros aliquam consequat. Lorem ipsum dolor sit amet","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":null},{"title":"Initiate a file download","type":0,"sectionRef":"#","url":"/docs/singulatron/initiate-a-file-download","content":"Initiate a file download POST /download/do Start a download for a specified URL and folder path Requestâ€‹ application/json Body required Download Request folderPath string url string Responsesâ€‹ 200400401500 Download initiated successfully application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create or update a generic object","type":0,"sectionRef":"#","url":"/docs/singulatron/create-or-update-a-generic-object","content":"Create or update a generic object POST /generic/upsert Creates a new generic object or updates an existing one based on the provided data. Requires authorization and user authentication. Requestâ€‹ application/json Body required Upsert request payload object object createdAt string data id string public boolean Entry is visible to all users of the app table string updatedAt string userId string Responsesâ€‹ 200400401500 Successful creation or update of object application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Add a new prompt","type":0,"sectionRef":"#","url":"/docs/singulatron/add-a-new-prompt","content":"Add a new prompt POST /prompt/add Add a new prompt for a user Requestâ€‹ application/json Body required Add Prompt Request prompt object createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt string Prompt is the message itself eg. &quot;What's a banana?&quot; runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. Might be derived from ModelId [INST]{prompt}[/INST] threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema answer string prompt object createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt string Prompt is the message itself eg. &quot;What's a banana?&quot; runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. Might be derived from ModelId [INST]{prompt}[/INST] threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove a chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/remove-a-chat-thread","content":"Remove a chat thread POST /chat/thread/delete Delete a specific chat thread by its ID Requestâ€‹ application/json Body required Delete Thread Request threadId string Responsesâ€‹ 200400401500 Thread successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Pause an ongoing download","type":0,"sectionRef":"#","url":"/docs/singulatron/pause-an-ongoing-download","content":"Pause an ongoing download POST /download/pause Pause a download that is currently in progress Requestâ€‹ application/json Body required Download request payload folderPath string url string Responsesâ€‹ 200400401500 Success response application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove a message from a chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/remove-a-message-from-a-chat-thread","content":"Remove a message from a chat thread POST /chat/message/delete Delete a specific message from a chat thread by its ID Requestâ€‹ application/json Body required Delete Message Request messageId string Responsesâ€‹ 200400401500 Message successfully deleted application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve download details","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-download-details","content":"Retrieve download details POST /download/list Fetch a list of all download details Responsesâ€‹ 200401500 List of downloads application/json SchemaExample (from schema) Schema downloads object[] Array [ cancelled boolean dir string downloadedBytes integer error string fileName string filePath string fullFileSize integer id string paused boolean progress number status string url string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Create a new generic object","type":0,"sectionRef":"#","url":"/docs/singulatron/create-a-new-generic-object","content":"Create a new generic object POST /generic/create Creates a new object with the provided details. Requires authorization and user authentication. Requestâ€‹ application/json Body required Create request payload object object createdAt string data id string public boolean Entry is visible to all users of the app table string updatedAt string userId string Responsesâ€‹ 200400401500 Success application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to firehose events","type":0,"sectionRef":"#","url":"/docs/singulatron/subscribe-to-firehose-events","content":"Subscribe to firehose events GET /firehose/subscribe Establish a subscription to firehose events and stream them to the client in real-time. Responsesâ€‹ 200401500 Event data text/event-stream Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Delete a generic object","type":0,"sectionRef":"#","url":"/docs/singulatron/delete-a-generic-object","content":"Delete a generic object POST /generic/delete Removes a generic object from the system based on the provided conditions. Requires authorization and user authentication. Requestâ€‹ application/json Body required Delete request payload conditions object[] Array [ all object contains object selector object any boolean field string oneOf string[] value equal object selector object any boolean field string oneOf string[] value startsWith object selector object any boolean field string oneOf string[] value ] table string Responsesâ€‹ 200400401500 Successful deletion of object application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve generic objects based on criteria","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-generic-objects-based-on-criteria","content":"Retrieve generic objects based on criteria POST /generic/find Retrieves objects from a specified table based on search criteria. Requires authorization and user authentication. Requestâ€‹ application/json Body required Find request payload conditions object[] Array [ all object contains object selector object any boolean field string oneOf string[] value equal object selector object any boolean field string oneOf string[] value startsWith object selector object any boolean field string oneOf string[] value ] orderBys object[] Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] public boolean Public true returns only public records of all users. If Public is false only the caller user's private records will be returned. table string Responsesâ€‹ 200400401500 Successful retrieval of objects application/json SchemaExample (from schema) Schema objects object[] Array [ createdAt string data id string public boolean Entry is visible to all users of the app table string updatedAt string userId string ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Subscribe to prompt responses","type":0,"sectionRef":"#","url":"/docs/singulatron/subscribe-to-prompt-responses","content":"Subscribe to prompt responses GET /prompt/subscribe Subscribe to prompt responses via Server-Sent Events (SSE) Requestâ€‹ Query Parameters threadId stringrequired Thread ID Responsesâ€‹ 200400401 Streaming response */* Schema Schema string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Once it's running","type":0,"sectionRef":"#","url":"/docs/start/using","content":"Once it's running Using Singulatron. Default Credentialsâ€‹ Unless you configured otherwise, you can log in with the following default credentials: username: singulatron password: changeme ","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"List prompts","type":0,"sectionRef":"#","url":"/docs/singulatron/list-prompts","content":"List prompts POST /prompt/list List prompts with specific criteria Requestâ€‹ application/json Body required List Prompts Request query object after undefined[] After is used for paginations. Instead of offset-based pagination, we support cursor-based pagination because it works better in a scalable, distributed environment. conditions object[] Conditions are filtering options of a query. Array [ all object contains object selector object any boolean field string oneOf string[] value equal object selector object any boolean field string oneOf string[] value startsWith object selector object any boolean field string oneOf string[] value ] count boolean Count true means return the count of the dataset filtered by Conditions without after or limit. limit integer Limit the number of records in the result set.. orderBys object[] OrderBys orders the result set. Array [ desc boolean Desc indicates whether the sorting should be in descending order. field string The field by which to order the results randomize boolean Randomize indicates that the results should be randomized instead of ordered by the field and desc criteria ] Responsesâ€‹ 200400401500 OK application/json SchemaExample (from schema) Schema after count integer prompts object[] Array [ createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt string Prompt is the message itself eg. &quot;What's a banana?&quot; runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. Might be derived from ModelId [INST]{prompt}[/INST] threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Frontend Environment Variables","type":0,"sectionRef":"#","url":"/docs/start/frontend-environment-variables","content":"Frontend Environment Variables BACKEND_ADDRESSâ€‹ In a publicly accessible setup should be something like https://singulatron-api.yourdomain.com. The point is that it must be accessible from the outside/browser.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update an existing chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/update-an-existing-chat-thread","content":"Update an existing chat thread POST /chat/thread/update Modify the details of a specific chat thread Requestâ€‹ application/json Body required Update Thread Request thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Responsesâ€‹ 200400401500 Thread successfully updated application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Docker Compose","type":0,"sectionRef":"#","url":"/docs/start/docker-compose","content":"Docker Compose This snippet will give you a quick idea about how to deploy the frontend and backend containers so they play nicely together: version: &quot;3.8&quot; volumes: singulatron-data: name: singulatron-data driver: local services: singulatron-frontend: image: crufter/singulatron-frontend:latest ports: - &quot;3901:80&quot; environment: # The `BACKEND_ADDRESS` must be accessible from the browser. # It is not an internal address, it's the address the browser will make API requests to. - BACKEND_ADDRESS=http://127.0.0.1:58231 singulatron-backend: image: crufter/singulatron-backend:latest ports: - &quot;58231:58231&quot; volumes: # We mount the docker socket so the backend can start containers - /var/run/docker.sock:/var/run/docker.sock # We mount a volume so data will be persisted - singulatron-data:/root/.singulatron environment: # This folder will be mounted by the LLM containers to access the models - SINGULATRON_HOST_FOLDER=/var/lib/docker/volumes/ singulatron-data/_data # Address of the host so we can access the containers running the LLMs from the backend container # See &quot;System Specific Settings&quot; on this page for more information. - SINGULATRON_LLM_HOST=172.17.0.1 # # GPU Acceleration for NVIDIA GPUs # Uncomment this envar for NVIDIA GPUs. # # - SINGULATRON_GPU_PLATFORM=cuda Put the above into a file called docker-compose.yaml in a folder on your computer and run it with the following command: docker compose up Once it's runningâ€‹ After the containers successfully start, you can go to 127.0.0.1:3901 and log in with the Default Credentials. Please keep in mind that this will store data locally on your machine in as gzipped JSON because Singulatron defaults to local file storage. Configuringâ€‹ See the Backend Environment Variables and Frontend Environment Variables.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve a list of chat threads for a user","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-a-list-of-chat-threads-for-a-user","content":"Retrieve a list of chat threads for a user POST /chat/threads Fetch all chat threads associated with a specific user Requestâ€‹ application/json Body required Get Threads Request object Responsesâ€‹ 200400401500 Threads successfully retrieved application/json SchemaExample (from schema) Schema threads object[] Array [ createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Backend Environment Variables","type":0,"sectionRef":"#","url":"/docs/start/backend-environment-variables","content":"Backend Environment Variables SINGULATRON_GPU_PLATFORMâ€‹ This envar is used to enabel GPU acceleration. Supported platforms: cuda Do not set this if your card doesn't support the given architecture or things will break. SINGULATRON_HOST_FOLDERâ€‹ This envar is needed when Singulatron runs as a container next to containers it starts: Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron To be able persist data, a host folder must be mounted by all containers. In our example (SINGULATRON_HOST_FOLDER=/var/lib/docker/volumes/singulatron-data/_data) we basically pass down the full path of the singulatron-data volume we created in the docker compose file to the containers created by Singulatron. So cycle goes like this: Singulatron container writes to /root/.singulatron, which is mounted on host at /var/lib/docker/volumes/singulatron-data/_dataAssets (which are basically downloaded files) will be passed to containers created by Singulatron by mounting files in /var/lib/docker/volumes/singulatron-data/_data. SINGULATRON_LLM_HOSTâ€‹ When Singulatron is running in a container, it needs to know how to address its siblings (other containers it started): Host | |-&gt; Singulatron Container |-&gt; Container Launched By Singulatron The Singulatron Container uses the envar SINGULATRON_LLM_HOST to address Container Launched By Singulatron. Typically this value should be 172.17.0.1 if you are using the default docker network. If you are using an other network than default, use docker network inspect to find out the IP of your docker bridge for that network. Usually it's going to be 172.18.0.1. This envar is not needed if Singulatron runs directly on the host: Host With Singulatron | |-&gt; Container Launched By Singulatron SINGULATRON_DBâ€‹ You can use this envar to make Singulatron actually use a database instead of local file storage to store data. PostgreSQLâ€‹ SINGULATRON_DB=postgres SINGULATRON_DB_SQL_CONNECTION_STRING=&quot;postgres://postgres:mysecretpassword@localhost:5432/mydatabase?sslmode=disable&quot; Naturally, you should change the details of the connection string to reflect your environment. SINGULARON_LOCAL_STORAGE_PATHâ€‹ By default the local file storage will place files into ~/.singulatron/data, but this flag (and other config options) can override that.","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Remove a prompt","type":0,"sectionRef":"#","url":"/docs/singulatron/remove-a-prompt","content":"Remove a prompt POST /prompt/remove Remove a prompt Requestâ€‹ application/json Body required Remove Prompt Request prompt object createdAt string CreatedAt is the time of the prompt creation. error string Error that arose during prompt execution, if any. id string Id is the unique ID of the prompt. lastRun string LastRun is the time of the last prompt run. maxRetries integer MaxRetries specified how many times the system should retry a prompt when it keeps erroring. modelId string ModelId is just the Singulatron internal ID of the model. prompt string Prompt is the message itself eg. &quot;What's a banana?&quot; runCount integer RunCount is the number of times the prompt was retried due to errors status string Possible values: [scheduled, running, completed, errored, abandoned, canceled] sync boolean Sync drives whether prompt add request should wait and hang until the prompt is done executing. By default the prompt just gets put on a queue and the client will just subscribe to a Thread Stream. For quick and dirty scripting however it's often times easier to do things syncronously. In those cases set Sync to true. template string Template of the prompt. Optional. Might be derived from ModelId [INST]{prompt}[/INST] threadId string ThreadId is the ID of the thread a prompt belongs to. Clients subscribe to Thread Streams to see the answer to a prompt, or set prompt.sync to true for a blocking answer. updatedAt string UpdatedAt is the last time the prompt was updated. userId string UserId contains the ID of the user who submitted the prompt. Responsesâ€‹ 200400401500 {} application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve details of a chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-details-of-a-chat-thread","content":"Retrieve details of a chat thread POST /chat/thread Fetch information about a specific chat thread by its ID Requestâ€‹ application/json Body required Get Thread Request threadId string Responsesâ€‹ 200400401500 Thread details successfully retrieved application/json SchemaExample (from schema) Schema thread object createdAt string id string title string Title of the thread. topicIds string[] TopicIds defines which topics the thread belongs to. Topics can roughly be thought of as tags for threads. updatedAt string userIds string[] UserIds the ids of the users who can see this thread. Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Update generic objects based on conditions","type":0,"sectionRef":"#","url":"/docs/singulatron/update-generic-objects-based-on-conditions","content":"Update generic objects based on conditions POST /generic/update Updates objects in a specified table based on provided conditions. Requires authorization and user authentication. Requestâ€‹ application/json Body required Update request payload conditions object[] Array [ all object contains object selector object any boolean field string oneOf string[] value equal object selector object any boolean field string oneOf string[] value startsWith object selector object any boolean field string oneOf string[] value ] object object createdAt string data id string public boolean Entry is visible to all users of the app table string updatedAt string userId string table string Responsesâ€‹ 200400401500 Successful update of objects application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve the current configuration","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-the-current-configuration","content":"Retrieve the current configuration POST /config/get Fetch the current configuration from the server Responsesâ€‹ 200401500 Current configuration retrieved successfully application/json SchemaExample (from schema) Schema config object app object loggingDisabled boolean download object downloadFolder string isRuntimeInstalled boolean This flag drives a minor UX feature: if the user has not installed the runtime we show an INSTALLbutton, but if the user has already installed the runtime we showwe show a START runtime button. model object currentModelId string Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Send a new message to a chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/send-a-new-message-to-a-chat-thread","content":"Send a new message to a chat thread POST /chat/message/add Add a new message to a specific chat thread Requestâ€‹ application/json Body required Add Message Request message object assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. Responsesâ€‹ 200400401500 Message successfully added application/json SchemaExample (from schema) Schema property name* any Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"},{"title":"Retrieve messages from a chat thread","type":0,"sectionRef":"#","url":"/docs/singulatron/retrieve-messages-from-a-chat-thread","content":"Retrieve messages from a chat thread POST /chat/messages Fetch messages for a specific chat thread and associated assets Requestâ€‹ application/json Body required Get Messages Request threadId string Responsesâ€‹ 200400401500 Messages and assets successfully retrieved application/json SchemaExample (from schema) Schema assets object[] Array [ content string Content is the base64 encoded binary file direcly embedded in the asset itself createdAt string description string id string type string updatedAt string url string Url of the asset where ] messages object[] Array [ assetIds string[] AssetIds defines the attachments the message has. content string Content of the message eg. &quot;Hi, what's up?&quot; createdAt string id string threadId string ThreadId of the message. updatedAt string userId string UserId is the id of the user who wrote the message. For AI messages this field is empty. ] Loading...","keywords":"ai  llm  free gpt  gpt  open-source  open source  ai framework  ai server","version":"Next"}],"options":{"id":"default"}}