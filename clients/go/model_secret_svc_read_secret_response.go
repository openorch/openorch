/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.3.0-rc.7
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SecretSvcReadSecretResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretSvcReadSecretResponse{}

// SecretSvcReadSecretResponse struct for SecretSvcReadSecretResponse
type SecretSvcReadSecretResponse struct {
	Secrets []SecretSvcSecret `json:"secrets,omitempty"`
}

// NewSecretSvcReadSecretResponse instantiates a new SecretSvcReadSecretResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretSvcReadSecretResponse() *SecretSvcReadSecretResponse {
	this := SecretSvcReadSecretResponse{}
	return &this
}

// NewSecretSvcReadSecretResponseWithDefaults instantiates a new SecretSvcReadSecretResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretSvcReadSecretResponseWithDefaults() *SecretSvcReadSecretResponse {
	this := SecretSvcReadSecretResponse{}
	return &this
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *SecretSvcReadSecretResponse) GetSecrets() []SecretSvcSecret {
	if o == nil || IsNil(o.Secrets) {
		var ret []SecretSvcSecret
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSvcReadSecretResponse) GetSecretsOk() ([]SecretSvcSecret, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *SecretSvcReadSecretResponse) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []SecretSvcSecret and assigns it to the Secrets field.
func (o *SecretSvcReadSecretResponse) SetSecrets(v []SecretSvcSecret) {
	o.Secrets = v
}

func (o SecretSvcReadSecretResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretSvcReadSecretResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	return toSerialize, nil
}

type NullableSecretSvcReadSecretResponse struct {
	value *SecretSvcReadSecretResponse
	isSet bool
}

func (v NullableSecretSvcReadSecretResponse) Get() *SecretSvcReadSecretResponse {
	return v.value
}

func (v *NullableSecretSvcReadSecretResponse) Set(val *SecretSvcReadSecretResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretSvcReadSecretResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretSvcReadSecretResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretSvcReadSecretResponse(val *SecretSvcReadSecretResponse) *NullableSecretSvcReadSecretResponse {
	return &NullableSecretSvcReadSecretResponse{value: val, isSet: true}
}

func (v NullableSecretSvcReadSecretResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretSvcReadSecretResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


