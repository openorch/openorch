/*
Singulatron

AI management and development platform.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DynamicSvcGenericObjectCreateFields type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicSvcGenericObjectCreateFields{}

// DynamicSvcGenericObjectCreateFields struct for DynamicSvcGenericObjectCreateFields
type DynamicSvcGenericObjectCreateFields struct {
	Data map[string]interface{} `json:"data"`
	Id *string `json:"id,omitempty"`
	// Public determines if the object is visible to all users. When it's false the entry is only visible to the user who created it. When it's true the entry is visible to everyone.
	Public *bool `json:"public,omitempty"`
	Table string `json:"table"`
	UserId *string `json:"userId,omitempty"`
}

type _DynamicSvcGenericObjectCreateFields DynamicSvcGenericObjectCreateFields

// NewDynamicSvcGenericObjectCreateFields instantiates a new DynamicSvcGenericObjectCreateFields object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicSvcGenericObjectCreateFields(data map[string]interface{}, table string) *DynamicSvcGenericObjectCreateFields {
	this := DynamicSvcGenericObjectCreateFields{}
	this.Data = data
	this.Table = table
	return &this
}

// NewDynamicSvcGenericObjectCreateFieldsWithDefaults instantiates a new DynamicSvcGenericObjectCreateFields object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicSvcGenericObjectCreateFieldsWithDefaults() *DynamicSvcGenericObjectCreateFields {
	this := DynamicSvcGenericObjectCreateFields{}
	return &this
}

// GetData returns the Data field value
func (o *DynamicSvcGenericObjectCreateFields) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *DynamicSvcGenericObjectCreateFields) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *DynamicSvcGenericObjectCreateFields) SetData(v map[string]interface{}) {
	o.Data = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DynamicSvcGenericObjectCreateFields) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSvcGenericObjectCreateFields) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DynamicSvcGenericObjectCreateFields) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DynamicSvcGenericObjectCreateFields) SetId(v string) {
	o.Id = &v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *DynamicSvcGenericObjectCreateFields) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSvcGenericObjectCreateFields) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *DynamicSvcGenericObjectCreateFields) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *DynamicSvcGenericObjectCreateFields) SetPublic(v bool) {
	o.Public = &v
}

// GetTable returns the Table field value
func (o *DynamicSvcGenericObjectCreateFields) GetTable() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Table
}

// GetTableOk returns a tuple with the Table field value
// and a boolean to check if the value has been set.
func (o *DynamicSvcGenericObjectCreateFields) GetTableOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Table, true
}

// SetTable sets field value
func (o *DynamicSvcGenericObjectCreateFields) SetTable(v string) {
	o.Table = v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *DynamicSvcGenericObjectCreateFields) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicSvcGenericObjectCreateFields) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *DynamicSvcGenericObjectCreateFields) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *DynamicSvcGenericObjectCreateFields) SetUserId(v string) {
	o.UserId = &v
}

func (o DynamicSvcGenericObjectCreateFields) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicSvcGenericObjectCreateFields) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["data"] = o.Data
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	toSerialize["table"] = o.Table
	if !IsNil(o.UserId) {
		toSerialize["userId"] = o.UserId
	}
	return toSerialize, nil
}

func (o *DynamicSvcGenericObjectCreateFields) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"table",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDynamicSvcGenericObjectCreateFields := _DynamicSvcGenericObjectCreateFields{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDynamicSvcGenericObjectCreateFields)

	if err != nil {
		return err
	}

	*o = DynamicSvcGenericObjectCreateFields(varDynamicSvcGenericObjectCreateFields)

	return err
}

type NullableDynamicSvcGenericObjectCreateFields struct {
	value *DynamicSvcGenericObjectCreateFields
	isSet bool
}

func (v NullableDynamicSvcGenericObjectCreateFields) Get() *DynamicSvcGenericObjectCreateFields {
	return v.value
}

func (v *NullableDynamicSvcGenericObjectCreateFields) Set(val *DynamicSvcGenericObjectCreateFields) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicSvcGenericObjectCreateFields) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicSvcGenericObjectCreateFields) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicSvcGenericObjectCreateFields(val *DynamicSvcGenericObjectCreateFields) *NullableDynamicSvcGenericObjectCreateFields {
	return &NullableDynamicSvcGenericObjectCreateFields{value: val, isSet: true}
}

func (v NullableDynamicSvcGenericObjectCreateFields) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicSvcGenericObjectCreateFields) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


