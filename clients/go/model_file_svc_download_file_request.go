/*
OpenOrch

On-premise AI platform and microservices ecosystem.

API version: 0.3.0-rc.11
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the FileSvcDownloadFileRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileSvcDownloadFileRequest{}

// FileSvcDownloadFileRequest struct for FileSvcDownloadFileRequest
type FileSvcDownloadFileRequest struct {
	FolderPath *string `json:"folderPath,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewFileSvcDownloadFileRequest instantiates a new FileSvcDownloadFileRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileSvcDownloadFileRequest() *FileSvcDownloadFileRequest {
	this := FileSvcDownloadFileRequest{}
	return &this
}

// NewFileSvcDownloadFileRequestWithDefaults instantiates a new FileSvcDownloadFileRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileSvcDownloadFileRequestWithDefaults() *FileSvcDownloadFileRequest {
	this := FileSvcDownloadFileRequest{}
	return &this
}

// GetFolderPath returns the FolderPath field value if set, zero value otherwise.
func (o *FileSvcDownloadFileRequest) GetFolderPath() string {
	if o == nil || IsNil(o.FolderPath) {
		var ret string
		return ret
	}
	return *o.FolderPath
}

// GetFolderPathOk returns a tuple with the FolderPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSvcDownloadFileRequest) GetFolderPathOk() (*string, bool) {
	if o == nil || IsNil(o.FolderPath) {
		return nil, false
	}
	return o.FolderPath, true
}

// HasFolderPath returns a boolean if a field has been set.
func (o *FileSvcDownloadFileRequest) HasFolderPath() bool {
	if o != nil && !IsNil(o.FolderPath) {
		return true
	}

	return false
}

// SetFolderPath gets a reference to the given string and assigns it to the FolderPath field.
func (o *FileSvcDownloadFileRequest) SetFolderPath(v string) {
	o.FolderPath = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *FileSvcDownloadFileRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileSvcDownloadFileRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *FileSvcDownloadFileRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *FileSvcDownloadFileRequest) SetUrl(v string) {
	o.Url = &v
}

func (o FileSvcDownloadFileRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileSvcDownloadFileRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FolderPath) {
		toSerialize["folderPath"] = o.FolderPath
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableFileSvcDownloadFileRequest struct {
	value *FileSvcDownloadFileRequest
	isSet bool
}

func (v NullableFileSvcDownloadFileRequest) Get() *FileSvcDownloadFileRequest {
	return v.value
}

func (v *NullableFileSvcDownloadFileRequest) Set(val *FileSvcDownloadFileRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFileSvcDownloadFileRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFileSvcDownloadFileRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileSvcDownloadFileRequest(val *FileSvcDownloadFileRequest) *NullableFileSvcDownloadFileRequest {
	return &NullableFileSvcDownloadFileRequest{value: val, isSet: true}
}

func (v NullableFileSvcDownloadFileRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileSvcDownloadFileRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


