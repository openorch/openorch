/*
Singulatron

Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PolicySvcUpsertInstanceResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicySvcUpsertInstanceResponse{}

// PolicySvcUpsertInstanceResponse struct for PolicySvcUpsertInstanceResponse
type PolicySvcUpsertInstanceResponse struct {
	Endpoint *string `json:"endpoint,omitempty"`
	Id *string `json:"id,omitempty"`
	IpWhitelistParameters *PolicySvcBlocklistParameters `json:"ipWhitelistParameters,omitempty"`
	RateLimitParameters *PolicySvcRateLimitParameters `json:"rateLimitParameters,omitempty"`
	TemplateId string `json:"templateId"`
}

type _PolicySvcUpsertInstanceResponse PolicySvcUpsertInstanceResponse

// NewPolicySvcUpsertInstanceResponse instantiates a new PolicySvcUpsertInstanceResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicySvcUpsertInstanceResponse(templateId string) *PolicySvcUpsertInstanceResponse {
	this := PolicySvcUpsertInstanceResponse{}
	this.TemplateId = templateId
	return &this
}

// NewPolicySvcUpsertInstanceResponseWithDefaults instantiates a new PolicySvcUpsertInstanceResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicySvcUpsertInstanceResponseWithDefaults() *PolicySvcUpsertInstanceResponse {
	this := PolicySvcUpsertInstanceResponse{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *PolicySvcUpsertInstanceResponse) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySvcUpsertInstanceResponse) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *PolicySvcUpsertInstanceResponse) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *PolicySvcUpsertInstanceResponse) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PolicySvcUpsertInstanceResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySvcUpsertInstanceResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PolicySvcUpsertInstanceResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *PolicySvcUpsertInstanceResponse) SetId(v string) {
	o.Id = &v
}

// GetIpWhitelistParameters returns the IpWhitelistParameters field value if set, zero value otherwise.
func (o *PolicySvcUpsertInstanceResponse) GetIpWhitelistParameters() PolicySvcBlocklistParameters {
	if o == nil || IsNil(o.IpWhitelistParameters) {
		var ret PolicySvcBlocklistParameters
		return ret
	}
	return *o.IpWhitelistParameters
}

// GetIpWhitelistParametersOk returns a tuple with the IpWhitelistParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySvcUpsertInstanceResponse) GetIpWhitelistParametersOk() (*PolicySvcBlocklistParameters, bool) {
	if o == nil || IsNil(o.IpWhitelistParameters) {
		return nil, false
	}
	return o.IpWhitelistParameters, true
}

// HasIpWhitelistParameters returns a boolean if a field has been set.
func (o *PolicySvcUpsertInstanceResponse) HasIpWhitelistParameters() bool {
	if o != nil && !IsNil(o.IpWhitelistParameters) {
		return true
	}

	return false
}

// SetIpWhitelistParameters gets a reference to the given PolicySvcBlocklistParameters and assigns it to the IpWhitelistParameters field.
func (o *PolicySvcUpsertInstanceResponse) SetIpWhitelistParameters(v PolicySvcBlocklistParameters) {
	o.IpWhitelistParameters = &v
}

// GetRateLimitParameters returns the RateLimitParameters field value if set, zero value otherwise.
func (o *PolicySvcUpsertInstanceResponse) GetRateLimitParameters() PolicySvcRateLimitParameters {
	if o == nil || IsNil(o.RateLimitParameters) {
		var ret PolicySvcRateLimitParameters
		return ret
	}
	return *o.RateLimitParameters
}

// GetRateLimitParametersOk returns a tuple with the RateLimitParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicySvcUpsertInstanceResponse) GetRateLimitParametersOk() (*PolicySvcRateLimitParameters, bool) {
	if o == nil || IsNil(o.RateLimitParameters) {
		return nil, false
	}
	return o.RateLimitParameters, true
}

// HasRateLimitParameters returns a boolean if a field has been set.
func (o *PolicySvcUpsertInstanceResponse) HasRateLimitParameters() bool {
	if o != nil && !IsNil(o.RateLimitParameters) {
		return true
	}

	return false
}

// SetRateLimitParameters gets a reference to the given PolicySvcRateLimitParameters and assigns it to the RateLimitParameters field.
func (o *PolicySvcUpsertInstanceResponse) SetRateLimitParameters(v PolicySvcRateLimitParameters) {
	o.RateLimitParameters = &v
}

// GetTemplateId returns the TemplateId field value
func (o *PolicySvcUpsertInstanceResponse) GetTemplateId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemplateId
}

// GetTemplateIdOk returns a tuple with the TemplateId field value
// and a boolean to check if the value has been set.
func (o *PolicySvcUpsertInstanceResponse) GetTemplateIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateId, true
}

// SetTemplateId sets field value
func (o *PolicySvcUpsertInstanceResponse) SetTemplateId(v string) {
	o.TemplateId = v
}

func (o PolicySvcUpsertInstanceResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicySvcUpsertInstanceResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IpWhitelistParameters) {
		toSerialize["ipWhitelistParameters"] = o.IpWhitelistParameters
	}
	if !IsNil(o.RateLimitParameters) {
		toSerialize["rateLimitParameters"] = o.RateLimitParameters
	}
	toSerialize["templateId"] = o.TemplateId
	return toSerialize, nil
}

func (o *PolicySvcUpsertInstanceResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"templateId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPolicySvcUpsertInstanceResponse := _PolicySvcUpsertInstanceResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPolicySvcUpsertInstanceResponse)

	if err != nil {
		return err
	}

	*o = PolicySvcUpsertInstanceResponse(varPolicySvcUpsertInstanceResponse)

	return err
}

type NullablePolicySvcUpsertInstanceResponse struct {
	value *PolicySvcUpsertInstanceResponse
	isSet bool
}

func (v NullablePolicySvcUpsertInstanceResponse) Get() *PolicySvcUpsertInstanceResponse {
	return v.value
}

func (v *NullablePolicySvcUpsertInstanceResponse) Set(val *PolicySvcUpsertInstanceResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicySvcUpsertInstanceResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicySvcUpsertInstanceResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicySvcUpsertInstanceResponse(val *PolicySvcUpsertInstanceResponse) *NullablePolicySvcUpsertInstanceResponse {
	return &NullablePolicySvcUpsertInstanceResponse{value: val, isSet: true}
}

func (v NullablePolicySvcUpsertInstanceResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicySvcUpsertInstanceResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


