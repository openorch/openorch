/*
Superplatform

On-premise AI platform and microservices ecosystem.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the SecretSvcReadResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretSvcReadResponse{}

// SecretSvcReadResponse struct for SecretSvcReadResponse
type SecretSvcReadResponse struct {
	Secrets []SecretSvcSecret `json:"secrets,omitempty"`
}

// NewSecretSvcReadResponse instantiates a new SecretSvcReadResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretSvcReadResponse() *SecretSvcReadResponse {
	this := SecretSvcReadResponse{}
	return &this
}

// NewSecretSvcReadResponseWithDefaults instantiates a new SecretSvcReadResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretSvcReadResponseWithDefaults() *SecretSvcReadResponse {
	this := SecretSvcReadResponse{}
	return &this
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *SecretSvcReadResponse) GetSecrets() []SecretSvcSecret {
	if o == nil || IsNil(o.Secrets) {
		var ret []SecretSvcSecret
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretSvcReadResponse) GetSecretsOk() ([]SecretSvcSecret, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *SecretSvcReadResponse) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []SecretSvcSecret and assigns it to the Secrets field.
func (o *SecretSvcReadResponse) SetSecrets(v []SecretSvcSecret) {
	o.Secrets = v
}

func (o SecretSvcReadResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretSvcReadResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	return toSerialize, nil
}

type NullableSecretSvcReadResponse struct {
	value *SecretSvcReadResponse
	isSet bool
}

func (v NullableSecretSvcReadResponse) Get() *SecretSvcReadResponse {
	return v.value
}

func (v *NullableSecretSvcReadResponse) Set(val *SecretSvcReadResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretSvcReadResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretSvcReadResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretSvcReadResponse(val *SecretSvcReadResponse) *NullableSecretSvcReadResponse {
	return &NullableSecretSvcReadResponse{value: val, isSet: true}
}

func (v NullableSecretSvcReadResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretSvcReadResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


