/*
OpenOrch

AI app platform. A language-agnostic, distributed platform for building microservices-based AI backends.

API version: 0.3.0-rc.18
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ContainerSvcRunInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerSvcRunInfo{}

// ContainerSvcRunInfo struct for ContainerSvcRunInfo
type ContainerSvcRunInfo struct {
	NewContainerStarted *bool `json:"newContainerStarted,omitempty"`
	PortNumber *int32 `json:"portNumber,omitempty"`
}

// NewContainerSvcRunInfo instantiates a new ContainerSvcRunInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSvcRunInfo() *ContainerSvcRunInfo {
	this := ContainerSvcRunInfo{}
	return &this
}

// NewContainerSvcRunInfoWithDefaults instantiates a new ContainerSvcRunInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSvcRunInfoWithDefaults() *ContainerSvcRunInfo {
	this := ContainerSvcRunInfo{}
	return &this
}

// GetNewContainerStarted returns the NewContainerStarted field value if set, zero value otherwise.
func (o *ContainerSvcRunInfo) GetNewContainerStarted() bool {
	if o == nil || IsNil(o.NewContainerStarted) {
		var ret bool
		return ret
	}
	return *o.NewContainerStarted
}

// GetNewContainerStartedOk returns a tuple with the NewContainerStarted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSvcRunInfo) GetNewContainerStartedOk() (*bool, bool) {
	if o == nil || IsNil(o.NewContainerStarted) {
		return nil, false
	}
	return o.NewContainerStarted, true
}

// HasNewContainerStarted returns a boolean if a field has been set.
func (o *ContainerSvcRunInfo) HasNewContainerStarted() bool {
	if o != nil && !IsNil(o.NewContainerStarted) {
		return true
	}

	return false
}

// SetNewContainerStarted gets a reference to the given bool and assigns it to the NewContainerStarted field.
func (o *ContainerSvcRunInfo) SetNewContainerStarted(v bool) {
	o.NewContainerStarted = &v
}

// GetPortNumber returns the PortNumber field value if set, zero value otherwise.
func (o *ContainerSvcRunInfo) GetPortNumber() int32 {
	if o == nil || IsNil(o.PortNumber) {
		var ret int32
		return ret
	}
	return *o.PortNumber
}

// GetPortNumberOk returns a tuple with the PortNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerSvcRunInfo) GetPortNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PortNumber) {
		return nil, false
	}
	return o.PortNumber, true
}

// HasPortNumber returns a boolean if a field has been set.
func (o *ContainerSvcRunInfo) HasPortNumber() bool {
	if o != nil && !IsNil(o.PortNumber) {
		return true
	}

	return false
}

// SetPortNumber gets a reference to the given int32 and assigns it to the PortNumber field.
func (o *ContainerSvcRunInfo) SetPortNumber(v int32) {
	o.PortNumber = &v
}

func (o ContainerSvcRunInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerSvcRunInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewContainerStarted) {
		toSerialize["newContainerStarted"] = o.NewContainerStarted
	}
	if !IsNil(o.PortNumber) {
		toSerialize["portNumber"] = o.PortNumber
	}
	return toSerialize, nil
}

type NullableContainerSvcRunInfo struct {
	value *ContainerSvcRunInfo
	isSet bool
}

func (v NullableContainerSvcRunInfo) Get() *ContainerSvcRunInfo {
	return v.value
}

func (v *NullableContainerSvcRunInfo) Set(val *ContainerSvcRunInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSvcRunInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSvcRunInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSvcRunInfo(val *ContainerSvcRunInfo) *NullableContainerSvcRunInfo {
	return &NullableContainerSvcRunInfo{value: val, isSet: true}
}

func (v NullableContainerSvcRunInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSvcRunInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


