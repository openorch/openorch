/*
Singulatron

AI management and development platform.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DockerSvcLaunchOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DockerSvcLaunchOptions{}

// DockerSvcLaunchOptions struct for DockerSvcLaunchOptions
type DockerSvcLaunchOptions struct {
	Envs []string `json:"envs,omitempty"`
	GpuEnabled *bool `json:"gpuEnabled,omitempty"`
	Hash *string `json:"hash,omitempty"`
	HostBinds []string `json:"hostBinds,omitempty"`
	Labels *map[string]string `json:"labels,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewDockerSvcLaunchOptions instantiates a new DockerSvcLaunchOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerSvcLaunchOptions() *DockerSvcLaunchOptions {
	this := DockerSvcLaunchOptions{}
	return &this
}

// NewDockerSvcLaunchOptionsWithDefaults instantiates a new DockerSvcLaunchOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerSvcLaunchOptionsWithDefaults() *DockerSvcLaunchOptions {
	this := DockerSvcLaunchOptions{}
	return &this
}

// GetEnvs returns the Envs field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetEnvs() []string {
	if o == nil || IsNil(o.Envs) {
		var ret []string
		return ret
	}
	return o.Envs
}

// GetEnvsOk returns a tuple with the Envs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetEnvsOk() ([]string, bool) {
	if o == nil || IsNil(o.Envs) {
		return nil, false
	}
	return o.Envs, true
}

// HasEnvs returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasEnvs() bool {
	if o != nil && !IsNil(o.Envs) {
		return true
	}

	return false
}

// SetEnvs gets a reference to the given []string and assigns it to the Envs field.
func (o *DockerSvcLaunchOptions) SetEnvs(v []string) {
	o.Envs = v
}

// GetGpuEnabled returns the GpuEnabled field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetGpuEnabled() bool {
	if o == nil || IsNil(o.GpuEnabled) {
		var ret bool
		return ret
	}
	return *o.GpuEnabled
}

// GetGpuEnabledOk returns a tuple with the GpuEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetGpuEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GpuEnabled) {
		return nil, false
	}
	return o.GpuEnabled, true
}

// HasGpuEnabled returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasGpuEnabled() bool {
	if o != nil && !IsNil(o.GpuEnabled) {
		return true
	}

	return false
}

// SetGpuEnabled gets a reference to the given bool and assigns it to the GpuEnabled field.
func (o *DockerSvcLaunchOptions) SetGpuEnabled(v bool) {
	o.GpuEnabled = &v
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetHash() string {
	if o == nil || IsNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetHashOk() (*string, bool) {
	if o == nil || IsNil(o.Hash) {
		return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasHash() bool {
	if o != nil && !IsNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *DockerSvcLaunchOptions) SetHash(v string) {
	o.Hash = &v
}

// GetHostBinds returns the HostBinds field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetHostBinds() []string {
	if o == nil || IsNil(o.HostBinds) {
		var ret []string
		return ret
	}
	return o.HostBinds
}

// GetHostBindsOk returns a tuple with the HostBinds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetHostBindsOk() ([]string, bool) {
	if o == nil || IsNil(o.HostBinds) {
		return nil, false
	}
	return o.HostBinds, true
}

// HasHostBinds returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasHostBinds() bool {
	if o != nil && !IsNil(o.HostBinds) {
		return true
	}

	return false
}

// SetHostBinds gets a reference to the given []string and assigns it to the HostBinds field.
func (o *DockerSvcLaunchOptions) SetHostBinds(v []string) {
	o.HostBinds = v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetLabels() map[string]string {
	if o == nil || IsNil(o.Labels) {
		var ret map[string]string
		return ret
	}
	return *o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetLabelsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given map[string]string and assigns it to the Labels field.
func (o *DockerSvcLaunchOptions) SetLabels(v map[string]string) {
	o.Labels = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *DockerSvcLaunchOptions) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerSvcLaunchOptions) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *DockerSvcLaunchOptions) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *DockerSvcLaunchOptions) SetName(v string) {
	o.Name = &v
}

func (o DockerSvcLaunchOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerSvcLaunchOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Envs) {
		toSerialize["envs"] = o.Envs
	}
	if !IsNil(o.GpuEnabled) {
		toSerialize["gpuEnabled"] = o.GpuEnabled
	}
	if !IsNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	if !IsNil(o.HostBinds) {
		toSerialize["hostBinds"] = o.HostBinds
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableDockerSvcLaunchOptions struct {
	value *DockerSvcLaunchOptions
	isSet bool
}

func (v NullableDockerSvcLaunchOptions) Get() *DockerSvcLaunchOptions {
	return v.value
}

func (v *NullableDockerSvcLaunchOptions) Set(val *DockerSvcLaunchOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerSvcLaunchOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerSvcLaunchOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerSvcLaunchOptions(val *DockerSvcLaunchOptions) *NullableDockerSvcLaunchOptions {
	return &NullableDockerSvcLaunchOptions{value: val, isSet: true}
}

func (v NullableDockerSvcLaunchOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerSvcLaunchOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


