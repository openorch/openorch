/*
OpenOrch

AI app platform. A language-agnostic, distributed platform for building microservices-based AI backends.

API version: 0.3.0-rc.17
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ContainerSvcGetDockerHostResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerSvcGetDockerHostResponse{}

// ContainerSvcGetDockerHostResponse struct for ContainerSvcGetDockerHostResponse
type ContainerSvcGetDockerHostResponse struct {
	Host string `json:"host"`
}

type _ContainerSvcGetDockerHostResponse ContainerSvcGetDockerHostResponse

// NewContainerSvcGetDockerHostResponse instantiates a new ContainerSvcGetDockerHostResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerSvcGetDockerHostResponse(host string) *ContainerSvcGetDockerHostResponse {
	this := ContainerSvcGetDockerHostResponse{}
	this.Host = host
	return &this
}

// NewContainerSvcGetDockerHostResponseWithDefaults instantiates a new ContainerSvcGetDockerHostResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerSvcGetDockerHostResponseWithDefaults() *ContainerSvcGetDockerHostResponse {
	this := ContainerSvcGetDockerHostResponse{}
	return &this
}

// GetHost returns the Host field value
func (o *ContainerSvcGetDockerHostResponse) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ContainerSvcGetDockerHostResponse) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ContainerSvcGetDockerHostResponse) SetHost(v string) {
	o.Host = v
}

func (o ContainerSvcGetDockerHostResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerSvcGetDockerHostResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host
	return toSerialize, nil
}

func (o *ContainerSvcGetDockerHostResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerSvcGetDockerHostResponse := _ContainerSvcGetDockerHostResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainerSvcGetDockerHostResponse)

	if err != nil {
		return err
	}

	*o = ContainerSvcGetDockerHostResponse(varContainerSvcGetDockerHostResponse)

	return err
}

type NullableContainerSvcGetDockerHostResponse struct {
	value *ContainerSvcGetDockerHostResponse
	isSet bool
}

func (v NullableContainerSvcGetDockerHostResponse) Get() *ContainerSvcGetDockerHostResponse {
	return v.value
}

func (v *NullableContainerSvcGetDockerHostResponse) Set(val *ContainerSvcGetDockerHostResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerSvcGetDockerHostResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerSvcGetDockerHostResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerSvcGetDockerHostResponse(val *ContainerSvcGetDockerHostResponse) *NullableContainerSvcGetDockerHostResponse {
	return &NullableContainerSvcGetDockerHostResponse{value: val, isSet: true}
}

func (v NullableContainerSvcGetDockerHostResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerSvcGetDockerHostResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


