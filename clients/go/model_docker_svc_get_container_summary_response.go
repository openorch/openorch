/*
OpenOrch

On-premise AI platform and microservices ecosystem.

API version: 0.3.0-rc.8
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DockerSvcGetContainerSummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DockerSvcGetContainerSummaryResponse{}

// DockerSvcGetContainerSummaryResponse struct for DockerSvcGetContainerSummaryResponse
type DockerSvcGetContainerSummaryResponse struct {
	Logs string `json:"logs"`
	Status string `json:"status"`
	// DEPRECATED. Summary contains both Status and Logs.
	Summary string `json:"summary"`
}

type _DockerSvcGetContainerSummaryResponse DockerSvcGetContainerSummaryResponse

// NewDockerSvcGetContainerSummaryResponse instantiates a new DockerSvcGetContainerSummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerSvcGetContainerSummaryResponse(logs string, status string, summary string) *DockerSvcGetContainerSummaryResponse {
	this := DockerSvcGetContainerSummaryResponse{}
	this.Logs = logs
	this.Status = status
	this.Summary = summary
	return &this
}

// NewDockerSvcGetContainerSummaryResponseWithDefaults instantiates a new DockerSvcGetContainerSummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerSvcGetContainerSummaryResponseWithDefaults() *DockerSvcGetContainerSummaryResponse {
	this := DockerSvcGetContainerSummaryResponse{}
	return &this
}

// GetLogs returns the Logs field value
func (o *DockerSvcGetContainerSummaryResponse) GetLogs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Logs
}

// GetLogsOk returns a tuple with the Logs field value
// and a boolean to check if the value has been set.
func (o *DockerSvcGetContainerSummaryResponse) GetLogsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Logs, true
}

// SetLogs sets field value
func (o *DockerSvcGetContainerSummaryResponse) SetLogs(v string) {
	o.Logs = v
}

// GetStatus returns the Status field value
func (o *DockerSvcGetContainerSummaryResponse) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *DockerSvcGetContainerSummaryResponse) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *DockerSvcGetContainerSummaryResponse) SetStatus(v string) {
	o.Status = v
}

// GetSummary returns the Summary field value
func (o *DockerSvcGetContainerSummaryResponse) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *DockerSvcGetContainerSummaryResponse) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *DockerSvcGetContainerSummaryResponse) SetSummary(v string) {
	o.Summary = v
}

func (o DockerSvcGetContainerSummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DockerSvcGetContainerSummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logs"] = o.Logs
	toSerialize["status"] = o.Status
	toSerialize["summary"] = o.Summary
	return toSerialize, nil
}

func (o *DockerSvcGetContainerSummaryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logs",
		"status",
		"summary",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDockerSvcGetContainerSummaryResponse := _DockerSvcGetContainerSummaryResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDockerSvcGetContainerSummaryResponse)

	if err != nil {
		return err
	}

	*o = DockerSvcGetContainerSummaryResponse(varDockerSvcGetContainerSummaryResponse)

	return err
}

type NullableDockerSvcGetContainerSummaryResponse struct {
	value *DockerSvcGetContainerSummaryResponse
	isSet bool
}

func (v NullableDockerSvcGetContainerSummaryResponse) Get() *DockerSvcGetContainerSummaryResponse {
	return v.value
}

func (v *NullableDockerSvcGetContainerSummaryResponse) Set(val *DockerSvcGetContainerSummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerSvcGetContainerSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerSvcGetContainerSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerSvcGetContainerSummaryResponse(val *DockerSvcGetContainerSummaryResponse) *NullableDockerSvcGetContainerSummaryResponse {
	return &NullableDockerSvcGetContainerSummaryResponse{value: val, isSet: true}
}

func (v NullableDockerSvcGetContainerSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerSvcGetContainerSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


