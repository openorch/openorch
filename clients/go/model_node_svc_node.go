/*
Singulatron

AI management and development platform.

API version: 0.2
Contact: sales@singulatron.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the NodeSvcNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NodeSvcNode{}

// NodeSvcNode struct for NodeSvcNode
type NodeSvcNode struct {
	Gpus []NodeSvcGPU `json:"gpus,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
}

// NewNodeSvcNode instantiates a new NodeSvcNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNodeSvcNode() *NodeSvcNode {
	this := NodeSvcNode{}
	return &this
}

// NewNodeSvcNodeWithDefaults instantiates a new NodeSvcNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNodeSvcNodeWithDefaults() *NodeSvcNode {
	this := NodeSvcNode{}
	return &this
}

// GetGpus returns the Gpus field value if set, zero value otherwise.
func (o *NodeSvcNode) GetGpus() []NodeSvcGPU {
	if o == nil || IsNil(o.Gpus) {
		var ret []NodeSvcGPU
		return ret
	}
	return o.Gpus
}

// GetGpusOk returns a tuple with the Gpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeSvcNode) GetGpusOk() ([]NodeSvcGPU, bool) {
	if o == nil || IsNil(o.Gpus) {
		return nil, false
	}
	return o.Gpus, true
}

// HasGpus returns a boolean if a field has been set.
func (o *NodeSvcNode) HasGpus() bool {
	if o != nil && !IsNil(o.Gpus) {
		return true
	}

	return false
}

// SetGpus gets a reference to the given []NodeSvcGPU and assigns it to the Gpus field.
func (o *NodeSvcNode) SetGpus(v []NodeSvcGPU) {
	o.Gpus = v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *NodeSvcNode) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NodeSvcNode) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *NodeSvcNode) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *NodeSvcNode) SetHostname(v string) {
	o.Hostname = &v
}

func (o NodeSvcNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NodeSvcNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Gpus) {
		toSerialize["gpus"] = o.Gpus
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	return toSerialize, nil
}

type NullableNodeSvcNode struct {
	value *NodeSvcNode
	isSet bool
}

func (v NullableNodeSvcNode) Get() *NodeSvcNode {
	return v.value
}

func (v *NullableNodeSvcNode) Set(val *NodeSvcNode) {
	v.value = val
	v.isSet = true
}

func (v NullableNodeSvcNode) IsSet() bool {
	return v.isSet
}

func (v *NullableNodeSvcNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNodeSvcNode(val *NodeSvcNode) *NullableNodeSvcNode {
	return &NullableNodeSvcNode{value: val, isSet: true}
}

func (v NullableNodeSvcNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNodeSvcNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


