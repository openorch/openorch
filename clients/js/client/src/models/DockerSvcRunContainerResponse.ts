/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.7
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DockerSvcRunInfo } from './DockerSvcRunInfo';
import {
    DockerSvcRunInfoFromJSON,
    DockerSvcRunInfoFromJSONTyped,
    DockerSvcRunInfoToJSON,
    DockerSvcRunInfoToJSONTyped,
} from './DockerSvcRunInfo';

/**
 * 
 * @export
 * @interface DockerSvcRunContainerResponse
 */
export interface DockerSvcRunContainerResponse {
    /**
     * 
     * @type {DockerSvcRunInfo}
     * @memberof DockerSvcRunContainerResponse
     */
    info?: DockerSvcRunInfo;
}

/**
 * Check if a given object implements the DockerSvcRunContainerResponse interface.
 */
export function instanceOfDockerSvcRunContainerResponse(value: object): value is DockerSvcRunContainerResponse {
    return true;
}

export function DockerSvcRunContainerResponseFromJSON(json: any): DockerSvcRunContainerResponse {
    return DockerSvcRunContainerResponseFromJSONTyped(json, false);
}

export function DockerSvcRunContainerResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerSvcRunContainerResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'info': json['info'] == null ? undefined : DockerSvcRunInfoFromJSON(json['info']),
    };
}

  export function DockerSvcRunContainerResponseToJSON(json: any): DockerSvcRunContainerResponse {
      return DockerSvcRunContainerResponseToJSONTyped(json, false);
  }

  export function DockerSvcRunContainerResponseToJSONTyped(value?: DockerSvcRunContainerResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'info': DockerSvcRunInfoToJSON(value['info']),
    };
}

