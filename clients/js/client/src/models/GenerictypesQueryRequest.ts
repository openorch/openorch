/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DatastoreQuery } from './DatastoreQuery';
import {
    DatastoreQueryFromJSON,
    DatastoreQueryFromJSONTyped,
    DatastoreQueryToJSON,
} from './DatastoreQuery';

/**
 * 
 * @export
 * @interface GenerictypesQueryRequest
 */
export interface GenerictypesQueryRequest {
    /**
     * 
     * @type {boolean}
     * @memberof GenerictypesQueryRequest
     */
    _public?: boolean;
    /**
     * 
     * @type {DatastoreQuery}
     * @memberof GenerictypesQueryRequest
     */
    query?: DatastoreQuery;
    /**
     * 
     * @type {string}
     * @memberof GenerictypesQueryRequest
     */
    table?: string;
}

/**
 * Check if a given object implements the GenerictypesQueryRequest interface.
 */
export function instanceOfGenerictypesQueryRequest(value: object): value is GenerictypesQueryRequest {
    return true;
}

export function GenerictypesQueryRequestFromJSON(json: any): GenerictypesQueryRequest {
    return GenerictypesQueryRequestFromJSONTyped(json, false);
}

export function GenerictypesQueryRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenerictypesQueryRequest {
    if (json == null) {
        return json;
    }
    return {
        
        '_public': json['public'] == null ? undefined : json['public'],
        'query': json['query'] == null ? undefined : DatastoreQueryFromJSON(json['query']),
        'table': json['table'] == null ? undefined : json['table'],
    };
}

export function GenerictypesQueryRequestToJSON(value?: GenerictypesQueryRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'public': value['_public'],
        'query': DatastoreQueryToJSON(value['query']),
        'table': value['table'],
    };
}

