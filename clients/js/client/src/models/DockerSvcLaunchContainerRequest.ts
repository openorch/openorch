/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DockerSvcLaunchOptions } from './DockerSvcLaunchOptions';
import {
    DockerSvcLaunchOptionsFromJSON,
    DockerSvcLaunchOptionsFromJSONTyped,
    DockerSvcLaunchOptionsToJSON,
} from './DockerSvcLaunchOptions';

/**
 * 
 * @export
 * @interface DockerSvcLaunchContainerRequest
 */
export interface DockerSvcLaunchContainerRequest {
    /**
     * 
     * @type {number}
     * @memberof DockerSvcLaunchContainerRequest
     */
    hostPort?: number;
    /**
     * 
     * @type {string}
     * @memberof DockerSvcLaunchContainerRequest
     */
    image?: string;
    /**
     * 
     * @type {DockerSvcLaunchOptions}
     * @memberof DockerSvcLaunchContainerRequest
     */
    options?: DockerSvcLaunchOptions;
    /**
     * 
     * @type {number}
     * @memberof DockerSvcLaunchContainerRequest
     */
    port?: number;
}

/**
 * Check if a given object implements the DockerSvcLaunchContainerRequest interface.
 */
export function instanceOfDockerSvcLaunchContainerRequest(value: object): value is DockerSvcLaunchContainerRequest {
    return true;
}

export function DockerSvcLaunchContainerRequestFromJSON(json: any): DockerSvcLaunchContainerRequest {
    return DockerSvcLaunchContainerRequestFromJSONTyped(json, false);
}

export function DockerSvcLaunchContainerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerSvcLaunchContainerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'hostPort': json['hostPort'] == null ? undefined : json['hostPort'],
        'image': json['image'] == null ? undefined : json['image'],
        'options': json['options'] == null ? undefined : DockerSvcLaunchOptionsFromJSON(json['options']),
        'port': json['port'] == null ? undefined : json['port'],
    };
}

export function DockerSvcLaunchContainerRequestToJSON(value?: DockerSvcLaunchContainerRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'hostPort': value['hostPort'],
        'image': value['image'],
        'options': DockerSvcLaunchOptionsToJSON(value['options']),
        'port': value['port'],
    };
}

