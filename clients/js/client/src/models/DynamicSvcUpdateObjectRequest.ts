/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.8
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DynamicSvcObject } from './DynamicSvcObject';
import {
    DynamicSvcObjectFromJSON,
    DynamicSvcObjectFromJSONTyped,
    DynamicSvcObjectToJSON,
    DynamicSvcObjectToJSONTyped,
} from './DynamicSvcObject';
import type { DatastoreFilter } from './DatastoreFilter';
import {
    DatastoreFilterFromJSON,
    DatastoreFilterFromJSONTyped,
    DatastoreFilterToJSON,
    DatastoreFilterToJSONTyped,
} from './DatastoreFilter';

/**
 * 
 * @export
 * @interface DynamicSvcUpdateObjectRequest
 */
export interface DynamicSvcUpdateObjectRequest {
    /**
     * 
     * @type {Array<DatastoreFilter>}
     * @memberof DynamicSvcUpdateObjectRequest
     */
    filters?: Array<DatastoreFilter>;
    /**
     * 
     * @type {DynamicSvcObject}
     * @memberof DynamicSvcUpdateObjectRequest
     */
    object?: DynamicSvcObject;
    /**
     * 
     * @type {string}
     * @memberof DynamicSvcUpdateObjectRequest
     */
    table?: string;
}

/**
 * Check if a given object implements the DynamicSvcUpdateObjectRequest interface.
 */
export function instanceOfDynamicSvcUpdateObjectRequest(value: object): value is DynamicSvcUpdateObjectRequest {
    return true;
}

export function DynamicSvcUpdateObjectRequestFromJSON(json: any): DynamicSvcUpdateObjectRequest {
    return DynamicSvcUpdateObjectRequestFromJSONTyped(json, false);
}

export function DynamicSvcUpdateObjectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DynamicSvcUpdateObjectRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'filters': json['filters'] == null ? undefined : ((json['filters'] as Array<any>).map(DatastoreFilterFromJSON)),
        'object': json['object'] == null ? undefined : DynamicSvcObjectFromJSON(json['object']),
        'table': json['table'] == null ? undefined : json['table'],
    };
}

  export function DynamicSvcUpdateObjectRequestToJSON(json: any): DynamicSvcUpdateObjectRequest {
      return DynamicSvcUpdateObjectRequestToJSONTyped(json, false);
  }

  export function DynamicSvcUpdateObjectRequestToJSONTyped(value?: DynamicSvcUpdateObjectRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'filters': value['filters'] == null ? undefined : ((value['filters'] as Array<any>).map(DatastoreFilterToJSON)),
        'object': DynamicSvcObjectToJSON(value['object']),
        'table': value['table'],
    };
}

