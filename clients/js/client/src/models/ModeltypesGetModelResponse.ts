/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModeltypesModel } from './ModeltypesModel';
import {
    ModeltypesModelFromJSON,
    ModeltypesModelFromJSONTyped,
    ModeltypesModelToJSON,
} from './ModeltypesModel';
import type { ModeltypesPlatform } from './ModeltypesPlatform';
import {
    ModeltypesPlatformFromJSON,
    ModeltypesPlatformFromJSONTyped,
    ModeltypesPlatformToJSON,
} from './ModeltypesPlatform';

/**
 * 
 * @export
 * @interface ModeltypesGetModelResponse
 */
export interface ModeltypesGetModelResponse {
    /**
     * 
     * @type {boolean}
     * @memberof ModeltypesGetModelResponse
     */
    _exists?: boolean;
    /**
     * 
     * @type {ModeltypesModel}
     * @memberof ModeltypesGetModelResponse
     */
    model?: ModeltypesModel;
    /**
     * 
     * @type {ModeltypesPlatform}
     * @memberof ModeltypesGetModelResponse
     */
    platform?: ModeltypesPlatform;
}

/**
 * Check if a given object implements the ModeltypesGetModelResponse interface.
 */
export function instanceOfModeltypesGetModelResponse(value: object): value is ModeltypesGetModelResponse {
    return true;
}

export function ModeltypesGetModelResponseFromJSON(json: any): ModeltypesGetModelResponse {
    return ModeltypesGetModelResponseFromJSONTyped(json, false);
}

export function ModeltypesGetModelResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModeltypesGetModelResponse {
    if (json == null) {
        return json;
    }
    return {
        
        '_exists': json['exists'] == null ? undefined : json['exists'],
        'model': json['model'] == null ? undefined : ModeltypesModelFromJSON(json['model']),
        'platform': json['platform'] == null ? undefined : ModeltypesPlatformFromJSON(json['platform']),
    };
}

export function ModeltypesGetModelResponseToJSON(value?: ModeltypesGetModelResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'exists': value['_exists'],
        'model': ModeltypesModelToJSON(value['model']),
        'platform': ModeltypesPlatformToJSON(value['platform']),
    };
}

