/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModeltypesArchitectures } from './ModeltypesArchitectures';
import {
    ModeltypesArchitecturesFromJSON,
    ModeltypesArchitecturesFromJSONTyped,
    ModeltypesArchitecturesToJSON,
} from './ModeltypesArchitectures';

/**
 * 
 * @export
 * @interface ModeltypesPlatform
 */
export interface ModeltypesPlatform {
    /**
     * 
     * @type {ModeltypesArchitectures}
     * @memberof ModeltypesPlatform
     */
    architectures?: ModeltypesArchitectures;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesPlatform
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesPlatform
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ModeltypesPlatform
     */
    version?: number;
}

/**
 * Check if a given object implements the ModeltypesPlatform interface.
 */
export function instanceOfModeltypesPlatform(value: object): value is ModeltypesPlatform {
    return true;
}

export function ModeltypesPlatformFromJSON(json: any): ModeltypesPlatform {
    return ModeltypesPlatformFromJSONTyped(json, false);
}

export function ModeltypesPlatformFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModeltypesPlatform {
    if (json == null) {
        return json;
    }
    return {
        
        'architectures': json['architectures'] == null ? undefined : ModeltypesArchitecturesFromJSON(json['architectures']),
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function ModeltypesPlatformToJSON(value?: ModeltypesPlatform | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'architectures': ModeltypesArchitecturesToJSON(value['architectures']),
        'id': value['id'],
        'name': value['name'],
        'version': value['version'],
    };
}

