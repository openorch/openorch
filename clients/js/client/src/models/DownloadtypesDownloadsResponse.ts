/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DownloadtypesDownloadDetails } from './DownloadtypesDownloadDetails';
import {
    DownloadtypesDownloadDetailsFromJSON,
    DownloadtypesDownloadDetailsFromJSONTyped,
    DownloadtypesDownloadDetailsToJSON,
} from './DownloadtypesDownloadDetails';

/**
 * 
 * @export
 * @interface DownloadtypesDownloadsResponse
 */
export interface DownloadtypesDownloadsResponse {
    /**
     * 
     * @type {Array<DownloadtypesDownloadDetails>}
     * @memberof DownloadtypesDownloadsResponse
     */
    downloads?: Array<DownloadtypesDownloadDetails>;
}

/**
 * Check if a given object implements the DownloadtypesDownloadsResponse interface.
 */
export function instanceOfDownloadtypesDownloadsResponse(value: object): value is DownloadtypesDownloadsResponse {
    return true;
}

export function DownloadtypesDownloadsResponseFromJSON(json: any): DownloadtypesDownloadsResponse {
    return DownloadtypesDownloadsResponseFromJSONTyped(json, false);
}

export function DownloadtypesDownloadsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadtypesDownloadsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'downloads': json['downloads'] == null ? undefined : ((json['downloads'] as Array<any>).map(DownloadtypesDownloadDetailsFromJSON)),
    };
}

export function DownloadtypesDownloadsResponseToJSON(value?: DownloadtypesDownloadsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'downloads': value['downloads'] == null ? undefined : ((value['downloads'] as Array<any>).map(DownloadtypesDownloadDetailsToJSON)),
    };
}

