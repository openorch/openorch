/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModeltypesModel
 */
export interface ModeltypesModel {
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ModeltypesModel
     */
    assets?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof ModeltypesModel
     */
    bits?: number;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    extension?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    flavour?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    fullName?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    id?: string;
    /**
     * 
     * @type {number}
     * @memberof ModeltypesModel
     */
    maxBits?: number;
    /**
     * 
     * @type {number}
     * @memberof ModeltypesModel
     */
    maxRam?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModeltypesModel
     */
    mirrors?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    parameters?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    platformId?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    promptTemplate?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    quality?: string;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    quantComment?: string;
    /**
     * 
     * @type {number}
     * @memberof ModeltypesModel
     */
    size?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModeltypesModel
     */
    tags?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof ModeltypesModel
     */
    uncensored?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModeltypesModel
     */
    version?: string;
}

/**
 * Check if a given object implements the ModeltypesModel interface.
 */
export function instanceOfModeltypesModel(value: object): value is ModeltypesModel {
    return true;
}

export function ModeltypesModelFromJSON(json: any): ModeltypesModel {
    return ModeltypesModelFromJSONTyped(json, false);
}

export function ModeltypesModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModeltypesModel {
    if (json == null) {
        return json;
    }
    return {
        
        'assets': json['assets'] == null ? undefined : json['assets'],
        'bits': json['bits'] == null ? undefined : json['bits'],
        'description': json['description'] == null ? undefined : json['description'],
        'extension': json['extension'] == null ? undefined : json['extension'],
        'flavour': json['flavour'] == null ? undefined : json['flavour'],
        'fullName': json['full_name'] == null ? undefined : json['full_name'],
        'id': json['id'] == null ? undefined : json['id'],
        'maxBits': json['max_bits'] == null ? undefined : json['max_bits'],
        'maxRam': json['max_ram'] == null ? undefined : json['max_ram'],
        'mirrors': json['mirrors'] == null ? undefined : json['mirrors'],
        'name': json['name'] == null ? undefined : json['name'],
        'parameters': json['parameters'] == null ? undefined : json['parameters'],
        'platformId': json['platformId'] == null ? undefined : json['platformId'],
        'promptTemplate': json['prompt_template'] == null ? undefined : json['prompt_template'],
        'quality': json['quality'] == null ? undefined : json['quality'],
        'quantComment': json['quant_comment'] == null ? undefined : json['quant_comment'],
        'size': json['size'] == null ? undefined : json['size'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'uncensored': json['uncensored'] == null ? undefined : json['uncensored'],
        'version': json['version'] == null ? undefined : json['version'],
    };
}

export function ModeltypesModelToJSON(value?: ModeltypesModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assets': value['assets'],
        'bits': value['bits'],
        'description': value['description'],
        'extension': value['extension'],
        'flavour': value['flavour'],
        'full_name': value['fullName'],
        'id': value['id'],
        'max_bits': value['maxBits'],
        'max_ram': value['maxRam'],
        'mirrors': value['mirrors'],
        'name': value['name'],
        'parameters': value['parameters'],
        'platformId': value['platformId'],
        'prompt_template': value['promptTemplate'],
        'quality': value['quality'],
        'quant_comment': value['quantComment'],
        'size': value['size'],
        'tags': value['tags'],
        'uncensored': value['uncensored'],
        'version': value['version'],
    };
}

