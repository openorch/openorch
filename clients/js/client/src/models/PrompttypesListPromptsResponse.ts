/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PrompttypesPrompt } from './PrompttypesPrompt';
import {
    PrompttypesPromptFromJSON,
    PrompttypesPromptFromJSONTyped,
    PrompttypesPromptToJSON,
} from './PrompttypesPrompt';

/**
 * 
 * @export
 * @interface PrompttypesListPromptsResponse
 */
export interface PrompttypesListPromptsResponse {
    /**
     * 
     * @type {object}
     * @memberof PrompttypesListPromptsResponse
     */
    after?: object;
    /**
     * 
     * @type {number}
     * @memberof PrompttypesListPromptsResponse
     */
    count?: number;
    /**
     * 
     * @type {Array<PrompttypesPrompt>}
     * @memberof PrompttypesListPromptsResponse
     */
    prompts?: Array<PrompttypesPrompt>;
}

/**
 * Check if a given object implements the PrompttypesListPromptsResponse interface.
 */
export function instanceOfPrompttypesListPromptsResponse(value: object): value is PrompttypesListPromptsResponse {
    return true;
}

export function PrompttypesListPromptsResponseFromJSON(json: any): PrompttypesListPromptsResponse {
    return PrompttypesListPromptsResponseFromJSONTyped(json, false);
}

export function PrompttypesListPromptsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PrompttypesListPromptsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'after': json['after'] == null ? undefined : json['after'],
        'count': json['count'] == null ? undefined : json['count'],
        'prompts': json['prompts'] == null ? undefined : ((json['prompts'] as Array<any>).map(PrompttypesPromptFromJSON)),
    };
}

export function PrompttypesListPromptsResponseToJSON(value?: PrompttypesListPromptsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'after': value['after'],
        'count': value['count'],
        'prompts': value['prompts'] == null ? undefined : ((value['prompts'] as Array<any>).map(PrompttypesPromptToJSON)),
    };
}

