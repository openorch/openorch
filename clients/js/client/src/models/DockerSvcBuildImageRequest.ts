/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DockerSvcBuildImageRequest
 */
export interface DockerSvcBuildImageRequest {
    /**
     * ContextPath is the local path to the build context
     * @type {string}
     * @memberof DockerSvcBuildImageRequest
     */
    contextPath: string;
    /**
     * DockerfilePath is the local path to the Dockerfile
     * @type {string}
     * @memberof DockerSvcBuildImageRequest
     */
    dockerfilePath?: string;
    /**
     * Name is the name of the image to build
     * @type {string}
     * @memberof DockerSvcBuildImageRequest
     */
    name: string;
}

/**
 * Check if a given object implements the DockerSvcBuildImageRequest interface.
 */
export function instanceOfDockerSvcBuildImageRequest(value: object): value is DockerSvcBuildImageRequest {
    if (!('contextPath' in value) || value['contextPath'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function DockerSvcBuildImageRequestFromJSON(json: any): DockerSvcBuildImageRequest {
    return DockerSvcBuildImageRequestFromJSONTyped(json, false);
}

export function DockerSvcBuildImageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): DockerSvcBuildImageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'contextPath': json['contextPath'],
        'dockerfilePath': json['dockerfilePath'] == null ? undefined : json['dockerfilePath'],
        'name': json['name'],
    };
}

export function DockerSvcBuildImageRequestToJSON(value?: DockerSvcBuildImageRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'contextPath': value['contextPath'],
        'dockerfilePath': value['dockerfilePath'],
        'name': value['name'],
    };
}

