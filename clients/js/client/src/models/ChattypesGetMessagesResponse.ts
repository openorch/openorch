/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChattypesAsset } from './ChattypesAsset';
import {
    ChattypesAssetFromJSON,
    ChattypesAssetFromJSONTyped,
    ChattypesAssetToJSON,
} from './ChattypesAsset';
import type { ChattypesMessage } from './ChattypesMessage';
import {
    ChattypesMessageFromJSON,
    ChattypesMessageFromJSONTyped,
    ChattypesMessageToJSON,
} from './ChattypesMessage';

/**
 * 
 * @export
 * @interface ChattypesGetMessagesResponse
 */
export interface ChattypesGetMessagesResponse {
    /**
     * 
     * @type {Array<ChattypesAsset>}
     * @memberof ChattypesGetMessagesResponse
     */
    assets?: Array<ChattypesAsset>;
    /**
     * 
     * @type {Array<ChattypesMessage>}
     * @memberof ChattypesGetMessagesResponse
     */
    messages?: Array<ChattypesMessage>;
}

/**
 * Check if a given object implements the ChattypesGetMessagesResponse interface.
 */
export function instanceOfChattypesGetMessagesResponse(value: object): value is ChattypesGetMessagesResponse {
    return true;
}

export function ChattypesGetMessagesResponseFromJSON(json: any): ChattypesGetMessagesResponse {
    return ChattypesGetMessagesResponseFromJSONTyped(json, false);
}

export function ChattypesGetMessagesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChattypesGetMessagesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'assets': json['assets'] == null ? undefined : ((json['assets'] as Array<any>).map(ChattypesAssetFromJSON)),
        'messages': json['messages'] == null ? undefined : ((json['messages'] as Array<any>).map(ChattypesMessageFromJSON)),
    };
}

export function ChattypesGetMessagesResponseToJSON(value?: ChattypesGetMessagesResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'assets': value['assets'] == null ? undefined : ((value['assets'] as Array<any>).map(ChattypesAssetToJSON)),
        'messages': value['messages'] == null ? undefined : ((value['messages'] as Array<any>).map(ChattypesMessageToJSON)),
    };
}

