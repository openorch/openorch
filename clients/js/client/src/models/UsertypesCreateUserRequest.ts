/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UsertypesUser } from './UsertypesUser';
import {
    UsertypesUserFromJSON,
    UsertypesUserFromJSONTyped,
    UsertypesUserToJSON,
} from './UsertypesUser';

/**
 * 
 * @export
 * @interface UsertypesCreateUserRequest
 */
export interface UsertypesCreateUserRequest {
    /**
     * 
     * @type {string}
     * @memberof UsertypesCreateUserRequest
     */
    password?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof UsertypesCreateUserRequest
     */
    roleIds?: Array<string>;
    /**
     * 
     * @type {UsertypesUser}
     * @memberof UsertypesCreateUserRequest
     */
    user?: UsertypesUser;
}

/**
 * Check if a given object implements the UsertypesCreateUserRequest interface.
 */
export function instanceOfUsertypesCreateUserRequest(value: object): value is UsertypesCreateUserRequest {
    return true;
}

export function UsertypesCreateUserRequestFromJSON(json: any): UsertypesCreateUserRequest {
    return UsertypesCreateUserRequestFromJSONTyped(json, false);
}

export function UsertypesCreateUserRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UsertypesCreateUserRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'password': json['password'] == null ? undefined : json['password'],
        'roleIds': json['roleIds'] == null ? undefined : json['roleIds'],
        'user': json['user'] == null ? undefined : UsertypesUserFromJSON(json['user']),
    };
}

export function UsertypesCreateUserRequestToJSON(value?: UsertypesCreateUserRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'password': value['password'],
        'roleIds': value['roleIds'],
        'user': UsertypesUserToJSON(value['user']),
    };
}

