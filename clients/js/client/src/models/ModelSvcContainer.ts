/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * AI app platform. A language-agnostic, distributed platform for building microservices-based AI backends.
 *
 * The version of the OpenAPI document: 0.3.0-rc.19
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelSvcContainer
 */
export interface ModelSvcContainer {
    /**
     * Envars passed to the container. eg.
     * 	'DEVICES=all'
     * @type {Array<string>}
     * @memberof ModelSvcContainer
     */
    envars?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ModelSvcContainer
     */
    imageTemplate?: string;
    /**
     * Keeps are paths in the container that should be persisted across restarts.
     * @type {Array<string>}
     * @memberof ModelSvcContainer
     */
    keeps?: Array<string>;
    /**
     * Port is the internal port of the Container
     * @type {number}
     * @memberof ModelSvcContainer
     */
    port?: number;
}

/**
 * Check if a given object implements the ModelSvcContainer interface.
 */
export function instanceOfModelSvcContainer(value: object): value is ModelSvcContainer {
    return true;
}

export function ModelSvcContainerFromJSON(json: any): ModelSvcContainer {
    return ModelSvcContainerFromJSONTyped(json, false);
}

export function ModelSvcContainerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelSvcContainer {
    if (json == null) {
        return json;
    }
    return {
        
        'envars': json['envars'] == null ? undefined : json['envars'],
        'imageTemplate': json['imageTemplate'] == null ? undefined : json['imageTemplate'],
        'keeps': json['keeps'] == null ? undefined : json['keeps'],
        'port': json['port'] == null ? undefined : json['port'],
    };
}

export function ModelSvcContainerToJSON(json: any): ModelSvcContainer {
    return ModelSvcContainerToJSONTyped(json, false);
}

export function ModelSvcContainerToJSONTyped(value?: ModelSvcContainer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'envars': value['envars'],
        'imageTemplate': value['imageTemplate'],
        'keeps': value['keeps'],
        'port': value['port'],
    };
}

