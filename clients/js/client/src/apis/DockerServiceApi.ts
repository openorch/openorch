/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DockerSvcErrorResponse,
  DockerSvcLaunchContainerRequest,
  DockerSvcLaunchContainerResponse,
} from '../models/index';
import {
    DockerSvcErrorResponseFromJSON,
    DockerSvcErrorResponseToJSON,
    DockerSvcLaunchContainerRequestFromJSON,
    DockerSvcLaunchContainerRequestToJSON,
    DockerSvcLaunchContainerResponseFromJSON,
    DockerSvcLaunchContainerResponseToJSON,
} from '../models/index';

export interface LaunchContainerRequest {
    request: DockerSvcLaunchContainerRequest;
}

/**
 * 
 */
export class DockerServiceApi extends runtime.BaseAPI {

    /**
     * Launches a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Launch a Docker Container
     */
    async launchContainerRaw(requestParameters: LaunchContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcLaunchContainerResponse>> {
        if (requestParameters['request'] == null) {
            throw new runtime.RequiredError(
                'request',
                'Required parameter "request" was null or undefined when calling launchContainer().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = await this.configuration.apiKey("Authorization"); // BearerAuth authentication
        }

        const response = await this.request({
            path: `/docker-svc/container`,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: DockerSvcLaunchContainerRequestToJSON(requestParameters['request']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DockerSvcLaunchContainerResponseFromJSON(jsonValue));
    }

    /**
     * Launches a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Launch a Docker Container
     */
    async launchContainer(requestParameters: LaunchContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcLaunchContainerResponse> {
        const response = await this.launchContainerRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
