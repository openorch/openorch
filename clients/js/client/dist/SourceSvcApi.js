'use strict';

var runtime = require('./runtime2.js');
var SourceSvcCheckoutRepoRequest = require('./SourceSvcCheckoutRepoRequest.js');
var SourceSvcCheckoutRepoResponse = require('./SourceSvcCheckoutRepoResponse.js');

/* tslint:disable */
/* eslint-disable */
/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.1
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class SourceSvcApi extends runtime.BaseAPI {
    /**
     * Checkout a git repository over https or ssh at a specific version into a temporary directory. Performs a shallow clone with minimal history for faster checkout.
     * Checkout a git repository
     */
    checkoutRepoRaw(requestParameters, initOverrides) {
        return runtime.__awaiter(this, void 0, void 0, function* () {
            if (requestParameters['request'] == null) {
                throw new runtime.RequiredError('request', 'Required parameter "request" was null or undefined when calling checkoutRepo().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/source-svc/repo/checkout`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: SourceSvcCheckoutRepoRequest.SourceSvcCheckoutRepoRequestToJSON(requestParameters['request']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => SourceSvcCheckoutRepoResponse.SourceSvcCheckoutRepoResponseFromJSON(jsonValue));
        });
    }
    /**
     * Checkout a git repository over https or ssh at a specific version into a temporary directory. Performs a shallow clone with minimal history for faster checkout.
     * Checkout a git repository
     */
    checkoutRepo(requestParameters, initOverrides) {
        return runtime.__awaiter(this, void 0, void 0, function* () {
            const response = yield this.checkoutRepoRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

exports.SourceSvcApi = SourceSvcApi;
