'use strict';

var DeploySvcDeploymentStrategy = require('./DeploySvcDeploymentStrategy.js');
var DeploySvcAutoScalingConfig = require('./DeploySvcAutoScalingConfig.js');
var DeploySvcDeploymentStatus = require('./DeploySvcDeploymentStatus.js');
var DeploySvcTargetRegion = require('./DeploySvcTargetRegion.js');
var DeploySvcResourceLimits = require('./DeploySvcResourceLimits.js');
require('./DeploySvcStrategyType.js');

/* tslint:disable */
/* eslint-disable */
/**
 * OpenOrch
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.8
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DeploySvcDeployment interface.
 */
function instanceOfDeploySvcDeployment(value) {
    if (!('definitionId' in value) || value['definitionId'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function DeploySvcDeploymentFromJSON(json) {
    return DeploySvcDeploymentFromJSONTyped(json);
}
function DeploySvcDeploymentFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'autoScaling': json['autoScaling'] == null ? undefined : DeploySvcAutoScalingConfig.DeploySvcAutoScalingConfigFromJSON(json['autoScaling']),
        'definitionId': json['definitionId'],
        'description': json['description'] == null ? undefined : json['description'],
        'details': json['details'] == null ? undefined : json['details'],
        'envars': json['envars'] == null ? undefined : json['envars'],
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'replicas': json['replicas'] == null ? undefined : json['replicas'],
        'resources': json['resources'] == null ? undefined : DeploySvcResourceLimits.DeploySvcResourceLimitsFromJSON(json['resources']),
        'status': json['status'] == null ? undefined : DeploySvcDeploymentStatus.DeploySvcDeploymentStatusFromJSON(json['status']),
        'strategy': json['strategy'] == null ? undefined : DeploySvcDeploymentStrategy.DeploySvcDeploymentStrategyFromJSON(json['strategy']),
        'targetRegions': json['targetRegions'] == null ? undefined : (json['targetRegions'].map(DeploySvcTargetRegion.DeploySvcTargetRegionFromJSON)),
    };
}
function DeploySvcDeploymentToJSON(json) {
    return DeploySvcDeploymentToJSONTyped(json, false);
}
function DeploySvcDeploymentToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'autoScaling': DeploySvcAutoScalingConfig.DeploySvcAutoScalingConfigToJSON(value['autoScaling']),
        'definitionId': value['definitionId'],
        'description': value['description'],
        'details': value['details'],
        'envars': value['envars'],
        'id': value['id'],
        'name': value['name'],
        'replicas': value['replicas'],
        'resources': DeploySvcResourceLimits.DeploySvcResourceLimitsToJSON(value['resources']),
        'status': DeploySvcDeploymentStatus.DeploySvcDeploymentStatusToJSON(value['status']),
        'strategy': DeploySvcDeploymentStrategy.DeploySvcDeploymentStrategyToJSON(value['strategy']),
        'targetRegions': value['targetRegions'] == null ? undefined : (value['targetRegions'].map(DeploySvcTargetRegion.DeploySvcTargetRegionToJSON)),
    };
}

exports.DeploySvcDeploymentFromJSON = DeploySvcDeploymentFromJSON;
exports.DeploySvcDeploymentFromJSONTyped = DeploySvcDeploymentFromJSONTyped;
exports.DeploySvcDeploymentToJSON = DeploySvcDeploymentToJSON;
exports.DeploySvcDeploymentToJSONTyped = DeploySvcDeploymentToJSONTyped;
exports.instanceOfDeploySvcDeployment = instanceOfDeploySvcDeployment;
