'use strict';

var DatastoreEqualCondition = require('./DatastoreEqualCondition.js');
var DatastoreContainsCondition = require('./DatastoreContainsCondition.js');
var DatastoreStartsWithCondition = require('./DatastoreStartsWithCondition.js');
require('./DatastoreFieldSelector.js');

/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the DatastoreCondition interface.
 */
function instanceOfDatastoreCondition(value) {
    return true;
}
function DatastoreConditionFromJSON(json) {
    return DatastoreConditionFromJSONTyped(json);
}
function DatastoreConditionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'all': json['all'] == null ? undefined : json['all'],
        'contains': json['contains'] == null ? undefined : DatastoreContainsCondition.DatastoreContainsConditionFromJSON(json['contains']),
        'equal': json['equal'] == null ? undefined : DatastoreEqualCondition.DatastoreEqualConditionFromJSON(json['equal']),
        'startsWith': json['startsWith'] == null ? undefined : DatastoreStartsWithCondition.DatastoreStartsWithConditionFromJSON(json['startsWith']),
    };
}
function DatastoreConditionToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'all': value['all'],
        'contains': DatastoreContainsCondition.DatastoreContainsConditionToJSON(value['contains']),
        'equal': DatastoreEqualCondition.DatastoreEqualConditionToJSON(value['equal']),
        'startsWith': DatastoreStartsWithCondition.DatastoreStartsWithConditionToJSON(value['startsWith']),
    };
}

exports.DatastoreConditionFromJSON = DatastoreConditionFromJSON;
exports.DatastoreConditionFromJSONTyped = DatastoreConditionFromJSONTyped;
exports.DatastoreConditionToJSON = DatastoreConditionToJSON;
exports.instanceOfDatastoreCondition = instanceOfDatastoreCondition;
