import { a as BaseAPI, _ as __awaiter, b as RequiredError, J as JSONApiResponse } from './runtime2.mjs';
import { DockerSvcLaunchContainerRequestToJSON } from './DockerSvcLaunchContainerRequest.mjs';
import { DockerSvcLaunchContainerResponseFromJSON } from './DockerSvcLaunchContainerResponse.mjs';
import './DockerSvcLaunchOptions.mjs';
import './DockerSvcLaunchInfo.mjs';

/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 */
class DockerServiceApi extends BaseAPI {
    /**
     * Launches a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Launch a Docker Container
     */
    launchContainerRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['request'] == null) {
                throw new RequiredError('request', 'Required parameter "request" was null or undefined when calling launchContainer().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // BearerAuth authentication
            }
            const response = yield this.request({
                path: `/docker-svc/container`,
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: DockerSvcLaunchContainerRequestToJSON(requestParameters['request']),
            }, initOverrides);
            return new JSONApiResponse(response, (jsonValue) => DockerSvcLaunchContainerResponseFromJSON(jsonValue));
        });
    }
    /**
     * Launches a Docker container with the specified parameters.  Requires the `docker-svc:docker:create` permission.
     * Launch a Docker Container
     */
    launchContainer(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.launchContainerRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}

export { DockerServiceApi };
