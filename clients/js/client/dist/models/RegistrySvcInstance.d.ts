/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RegistrySvcInstance
 */
export interface RegistrySvcInstance {
    /**
     * The ID of the deployment that this instance is an instance of.
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    deploymentId: string;
    /**
     * Host of the instance address. Required if URL is not provided
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    host?: string;
    /**
     * Required: ID of the instance
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    id: string;
    /**
     * IP of the instance address. Optional: to register by IP instead of host
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    ip?: string;
    /**
     * Last time the instance gave a sign of life
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    lastHeartbeat?: string;
    /**
     * URL of the Singulatron daemon
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    nodeUrl?: string;
    /**
     * Path of the instance address. Optional (e.g., "/api")
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    path?: string;
    /**
     * Port of the instance address. Required if URL is not provided
     * @type {number}
     * @memberof RegistrySvcInstance
     */
    port?: number;
    /**
     * Scheme of the instance address. Required if URL is not provided.
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    scheme?: string;
    /**
     * Full address URL of the instance.
     * @type {string}
     * @memberof RegistrySvcInstance
     */
    url: string;
}
/**
 * Check if a given object implements the RegistrySvcInstance interface.
 */
export declare function instanceOfRegistrySvcInstance(value: object): value is RegistrySvcInstance;
export declare function RegistrySvcInstanceFromJSON(json: any): RegistrySvcInstance;
export declare function RegistrySvcInstanceFromJSONTyped(json: any, ignoreDiscriminator: boolean): RegistrySvcInstance;
export declare function RegistrySvcInstanceToJSON(value?: RegistrySvcInstance | null): any;
