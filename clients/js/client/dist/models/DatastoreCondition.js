/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { DatastoreEqualConditionFromJSON, DatastoreEqualConditionToJSON, } from './DatastoreEqualCondition';
import { DatastoreContainsConditionFromJSON, DatastoreContainsConditionToJSON, } from './DatastoreContainsCondition';
import { DatastoreStartsWithConditionFromJSON, DatastoreStartsWithConditionToJSON, } from './DatastoreStartsWithCondition';
/**
 * Check if a given object implements the DatastoreCondition interface.
 */
export function instanceOfDatastoreCondition(value) {
    return true;
}
export function DatastoreConditionFromJSON(json) {
    return DatastoreConditionFromJSONTyped(json, false);
}
export function DatastoreConditionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'all': json['all'] == null ? undefined : json['all'],
        'contains': json['contains'] == null ? undefined : DatastoreContainsConditionFromJSON(json['contains']),
        'equal': json['equal'] == null ? undefined : DatastoreEqualConditionFromJSON(json['equal']),
        'startsWith': json['startsWith'] == null ? undefined : DatastoreStartsWithConditionFromJSON(json['startsWith']),
    };
}
export function DatastoreConditionToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'all': value['all'],
        'contains': DatastoreContainsConditionToJSON(value['contains']),
        'equal': DatastoreEqualConditionToJSON(value['equal']),
        'startsWith': DatastoreStartsWithConditionToJSON(value['startsWith']),
    };
}
