/**
 * OpenOrch
 * AI app platform. A language-agnostic, distributed platform for building microservices-based AI backends.
 *
 * The version of the OpenAPI document: 0.3.0-rc.19
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ContainerSvcRunContainerOptions } from './ContainerSvcRunContainerOptions';
/**
 *
 * @export
 * @interface ContainerSvcRunContainerRequest
 */
export interface ContainerSvcRunContainerRequest {
    /**
     * HostPort is the port on the host machine that will be mapped to the container's port
     * @type {number}
     * @memberof ContainerSvcRunContainerRequest
     */
    hostPort?: number;
    /**
     * Image is the Docker image to use for the container
     * @type {string}
     * @memberof ContainerSvcRunContainerRequest
     */
    image: string;
    /**
     * Options provides additional options for launching the container
     * @type {ContainerSvcRunContainerOptions}
     * @memberof ContainerSvcRunContainerRequest
     */
    options?: ContainerSvcRunContainerOptions;
    /**
     * Port is the port number that the container will expose
     * @type {number}
     * @memberof ContainerSvcRunContainerRequest
     */
    port: number;
}
/**
 * Check if a given object implements the ContainerSvcRunContainerRequest interface.
 */
export declare function instanceOfContainerSvcRunContainerRequest(value: object): value is ContainerSvcRunContainerRequest;
export declare function ContainerSvcRunContainerRequestFromJSON(json: any): ContainerSvcRunContainerRequest;
export declare function ContainerSvcRunContainerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContainerSvcRunContainerRequest;
export declare function ContainerSvcRunContainerRequestToJSON(json: any): ContainerSvcRunContainerRequest;
export declare function ContainerSvcRunContainerRequestToJSONTyped(value?: ContainerSvcRunContainerRequest | null, ignoreDiscriminator?: boolean): any;
