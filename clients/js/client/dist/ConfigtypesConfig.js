'use strict';

var ConfigtypesModelServiceConfig = require('./ConfigtypesModelServiceConfig.js');
var ConfigtypesDownloadServiceConfig = require('./ConfigtypesDownloadServiceConfig.js');
var ConfigtypesAppServiceConfig = require('./ConfigtypesAppServiceConfig.js');

/* tslint:disable */
/* eslint-disable */
/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Check if a given object implements the ConfigtypesConfig interface.
 */
function instanceOfConfigtypesConfig(value) {
    return true;
}
function ConfigtypesConfigFromJSON(json) {
    return ConfigtypesConfigFromJSONTyped(json);
}
function ConfigtypesConfigFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'app': json['app'] == null ? undefined : ConfigtypesAppServiceConfig.ConfigtypesAppServiceConfigFromJSON(json['app']),
        'directory': json['directory'] == null ? undefined : json['directory'],
        'download': json['download'] == null ? undefined : ConfigtypesDownloadServiceConfig.ConfigtypesDownloadServiceConfigFromJSON(json['download']),
        'isRuntimeInstalled': json['isRuntimeInstalled'] == null ? undefined : json['isRuntimeInstalled'],
        'model': json['model'] == null ? undefined : ConfigtypesModelServiceConfig.ConfigtypesModelServiceConfigFromJSON(json['model']),
    };
}
function ConfigtypesConfigToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'app': ConfigtypesAppServiceConfig.ConfigtypesAppServiceConfigToJSON(value['app']),
        'directory': value['directory'],
        'download': ConfigtypesDownloadServiceConfig.ConfigtypesDownloadServiceConfigToJSON(value['download']),
        'isRuntimeInstalled': value['isRuntimeInstalled'],
        'model': ConfigtypesModelServiceConfig.ConfigtypesModelServiceConfigToJSON(value['model']),
    };
}

exports.ConfigtypesConfigFromJSON = ConfigtypesConfigFromJSON;
exports.ConfigtypesConfigFromJSONTyped = ConfigtypesConfigFromJSONTyped;
exports.ConfigtypesConfigToJSON = ConfigtypesConfigToJSON;
exports.instanceOfConfigtypesConfig = instanceOfConfigtypesConfig;
