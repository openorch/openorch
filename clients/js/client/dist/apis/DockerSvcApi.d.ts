/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { DockerSvcBuildImageRequest, DockerSvcContainerIsRunningResponse, DockerSvcGetContainerSummaryResponse, DockerSvcGetDockerHostResponse, DockerSvcGetInfoResponse, DockerSvcRunContainerRequest, DockerSvcRunContainerResponse, DockerSvcStopContainerRequest } from '../models/index';
export interface BuildImageRequest {
    request: DockerSvcBuildImageRequest;
}
export interface ContainerIsRunningRequest {
    hash?: string;
    name?: string;
}
export interface ContainerSummaryRequest {
    hash?: string;
    name?: string;
    lines?: number;
}
export interface RunContainerRequest {
    request: DockerSvcRunContainerRequest;
}
export interface StopContainerRequest {
    request: DockerSvcStopContainerRequest;
}
/**
 *
 */
export declare class DockerSvcApi extends runtime.BaseAPI {
    /**
     * Builds a Docker image with the specified parameters.  Requires the `docker-svc:image:build` permission.
     * Build an Image
     */
    buildImageRaw(requestParameters: BuildImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Builds a Docker image with the specified parameters.  Requires the `docker-svc:image:build` permission.
     * Build an Image
     */
    buildImage(requestParameters: BuildImageRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
    /**
     * Check if a Docker container is running, identified by hash or name.
     * Check If a Container Is Running
     */
    containerIsRunningRaw(requestParameters: ContainerIsRunningRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcContainerIsRunningResponse>>;
    /**
     * Check if a Docker container is running, identified by hash or name.
     * Check If a Container Is Running
     */
    containerIsRunning(requestParameters?: ContainerIsRunningRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcContainerIsRunningResponse>;
    /**
     * Get a summary of the Docker container identified by hash or name, limited to a specified number of lines.
     * Get Container Summary
     */
    containerSummaryRaw(requestParameters: ContainerSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetContainerSummaryResponse>>;
    /**
     * Get a summary of the Docker container identified by hash or name, limited to a specified number of lines.
     * Get Container Summary
     */
    containerSummary(requestParameters?: ContainerSummaryRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetContainerSummaryResponse>;
    /**
     * Retrieve information about the Docker host
     * Get Docker Host
     */
    getHostRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetDockerHostResponse>>;
    /**
     * Retrieve information about the Docker host
     * Get Docker Host
     */
    getHost(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetDockerHostResponse>;
    /**
     * Retrieve detailed information about the Docker service
     * Get Docker Service Information
     */
    getInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcGetInfoResponse>>;
    /**
     * Retrieve detailed information about the Docker service
     * Get Docker Service Information
     */
    getInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcGetInfoResponse>;
    /**
     * Runs a Docker container with the specified parameters.  Requires the `docker-svc:container:run` permission.
     * Run a Container
     */
    runContainerRaw(requestParameters: RunContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DockerSvcRunContainerResponse>>;
    /**
     * Runs a Docker container with the specified parameters.  Requires the `docker-svc:container:run` permission.
     * Run a Container
     */
    runContainer(requestParameters: RunContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DockerSvcRunContainerResponse>;
    /**
     * Stops a Docker container with the specified parameters.  Requires the `docker-svc:container:stop` permission.
     * Stop a Container
     */
    stopContainerRaw(requestParameters: StopContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>>;
    /**
     * Stops a Docker container with the specified parameters.  Requires the `docker-svc:container:stop` permission.
     * Stop a Container
     */
    stopContainer(requestParameters: StopContainerRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object>;
}
