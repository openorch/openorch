/**
 * Singulatron
 * Run and develop self-hosted AI apps. Your programmable in-house GPT. The Firebase for the AI age.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { DatastoreContainsCondition } from './datastoreContainsCondition';
import { DatastoreEqualCondition } from './datastoreEqualCondition';
import { DatastoreStartsWithCondition } from './datastoreStartsWithCondition';

export class DatastoreCondition {
    /**
    * All condition returns all objects.
    */
    'all'?: object;
    /**
    * Contains condition returns all objects where the field(s) values contain a particular string.
    */
    'contains'?: DatastoreContainsCondition;
    /**
    * Equal condition returns objects where value of a field equals (=) to the specified value in the query.
    */
    'equal'?: DatastoreEqualCondition;
    /**
    * StartsWith condition returns all objects where the field(s) values start with a particular string.
    */
    'startsWith'?: DatastoreStartsWithCondition;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "all",
            "baseName": "all",
            "type": "object"
        },
        {
            "name": "contains",
            "baseName": "contains",
            "type": "DatastoreContainsCondition"
        },
        {
            "name": "equal",
            "baseName": "equal",
            "type": "DatastoreEqualCondition"
        },
        {
            "name": "startsWith",
            "baseName": "startsWith",
            "type": "DatastoreStartsWithCondition"
        }    ];

    static getAttributeTypeMap() {
        return DatastoreCondition.attributeTypeMap;
    }
}

