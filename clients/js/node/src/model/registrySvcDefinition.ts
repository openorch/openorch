/**
 * Superplatform
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.2
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { RegistrySvcAPISpec } from './registrySvcAPISpec';
import { RegistrySvcClient } from './registrySvcClient';
import { RegistrySvcImageSpec } from './registrySvcImageSpec';

export class RegistrySvcDefinition {
    /**
    * API Specs such as OpenAPI definitions etc.
    */
    'apiSpecs'?: Array<RegistrySvcAPISpec>;
    /**
    * Programming language clients such as on npm or GitHub.
    */
    'clients'?: Array<RegistrySvcClient>;
    /**
    * HostPort is a clutch until automatic port assignment works. It will go a way as it doesn\'t make any sense in a Definition.
    */
    'hostPort'?: number;
    'id': string;
    /**
    * Container specifications for Docker, K8s, etc.
    */
    'image': RegistrySvcImageSpec;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "apiSpecs",
            "baseName": "apiSpecs",
            "type": "Array<RegistrySvcAPISpec>"
        },
        {
            "name": "clients",
            "baseName": "clients",
            "type": "Array<RegistrySvcClient>"
        },
        {
            "name": "hostPort",
            "baseName": "hostPort",
            "type": "number"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "image",
            "baseName": "image",
            "type": "RegistrySvcImageSpec"
        }    ];

    static getAttributeTypeMap() {
        return RegistrySvcDefinition.attributeTypeMap;
    }
}

