/**
 * OpenOrch
 * On-premise AI platform and microservices ecosystem.
 *
 * The version of the OpenAPI document: 0.3.0-rc.9
 * Contact: sales@singulatron.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import http from 'http';
import { FileSvcDownloadRequest } from '../model/fileSvcDownloadRequest';
import { FileSvcDownloadsResponse } from '../model/fileSvcDownloadsResponse';
import { FileSvcGetDownloadResponse } from '../model/fileSvcGetDownloadResponse';
import { Authentication, Interceptor } from '../model/models';
import { ApiKeyAuth } from '../model/models';
export declare enum FileSvcApiApiKeys {
    BearerAuth = 0
}
export declare class FileSvcApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        default: Authentication;
        BearerAuth: ApiKeyAuth;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    set useQuerystring(value: boolean);
    set basePath(basePath: string);
    set defaultHeaders(defaultHeaders: any);
    get defaultHeaders(): any;
    get basePath(): string;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: FileSvcApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Start or resume the download for a specified URL.  Requires the `file-svc:download:create` permission.
     * @summary Download a File
     * @param body Download Request
     */
    downloadFile(body: FileSvcDownloadRequest, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: {
            [key: string]: any;
        };
    }>;
    /**
     * Get a download by ID.  Requires the `file-svc:download:view` permission.
     * @summary Get a Download
     * @param downloadId Download ID
     */
    getDownload(downloadId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: FileSvcGetDownloadResponse;
    }>;
    /**
     * Fetch a list of all download details.  Requires the `file-svc:download:view` permission.
     * @summary List Downloads
     */
    listDownloads(options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: FileSvcDownloadsResponse;
    }>;
    /**
     * Pause a download that is currently in progress.  Requires the `file-svc:download:edit` permission.
     * @summary Pause a Download
     * @param downloadId Download ID
     */
    pauseDownload(downloadId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: {
            [key: string]: any;
        };
    }>;
}
