// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/node/types/interface.go
//
// Generated by this command:
//
//	mockgen -source=./services/node/types/interface.go -destination=./services/node/types/mock_nodetypes.go -package=nodetypes
//

// Package nodetypes is a generated GoMock package.
package nodetypes

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockNodeServiceI is a mock of NodeServiceI interface.
type MockNodeServiceI struct {
	ctrl     *gomock.Controller
	recorder *MockNodeServiceIMockRecorder
}

// MockNodeServiceIMockRecorder is the mock recorder for MockNodeServiceI.
type MockNodeServiceIMockRecorder struct {
	mock *MockNodeServiceI
}

// NewMockNodeServiceI creates a new mock instance.
func NewMockNodeServiceI(ctrl *gomock.Controller) *MockNodeServiceI {
	mock := &MockNodeServiceI{ctrl: ctrl}
	mock.recorder = &MockNodeServiceIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeServiceI) EXPECT() *MockNodeServiceIMockRecorder {
	return m.recorder
}

// ListNodes mocks base method.
func (m *MockNodeServiceI) ListNodes() ([]*Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListNodes")
	ret0, _ := ret[0].([]*Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListNodes indicates an expected call of ListNodes.
func (mr *MockNodeServiceIMockRecorder) ListNodes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListNodes", reflect.TypeOf((*MockNodeServiceI)(nil).ListNodes))
}
