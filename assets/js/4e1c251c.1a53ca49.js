"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[7373],{34204:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>r});const a=JSON.parse('{"id":"command-line/basics","title":"Basics","description":"Installation","source":"@site/docs/command-line/basics.md","sourceDirName":"command-line","slug":"/command-line/basics","permalink":"/docs/command-line/basics","draft":false,"unlisted":false,"editUrl":"https://github.com/openorch/openorch/tree/main/docs-source/docs/command-line/basics.md","tags":[{"inline":true,"label":"cli","permalink":"/docs/tags/cli"}],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"tags":["cli"]},"sidebar":"tutorialSidebar","previous":{"title":"Command line","permalink":"/docs/category/command-line"},"next":{"title":"Built-in services","permalink":"/docs/category/built-in-services"}}');var c=s(74848),l=s(28453);const t={sidebar_position:2,tags:["cli"]},o="Basics",i={},r=[{value:"Installation",id:"installation",level:2},{value:"Use",id:"use",level:2},{value:"CLI flag to request body mapping",id:"cli-flag-to-request-body-mapping",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsx)(n.h1,{id:"basics",children:"Basics"})}),"\n",(0,c.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,c.jsx)(n.p,{children:"At the moment you need Go to install the OpenOrch CLI:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"go install github.com/openorch/openorch/cli/oo@latest\n"})}),"\n",(0,c.jsx)(n.h2,{id:"use",children:"Use"}),"\n",(0,c.jsxs)(n.p,{children:["After the daemon already runs (see ",(0,c.jsx)(n.a,{href:"/docs/running-the-daemon/using#default-credentials",children:"this section about that"}),"), you can interact with it through the CLI."]}),"\n",(0,c.jsx)(n.p,{children:"Let's add the local environment first:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"$ oo env add local http://127.0.0.1:58231\n$ oo env ls\nSELECTED   NAME    URL                           DESCRIPTION\n*          local   http://127.0.0.1:58231\n"})}),"\n",(0,c.jsx)(n.p,{children:"After this you you need to log in:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"$ oo login openorch\nEnter password:\n"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"$ oo whoami\nslug: openorch\nid: usr_eH9mXKgmb0\nroles:\n- user-svc:admin\n"})}),"\n",(0,c.jsx)(n.p,{children:"Let's make a GET call:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo get /config-svc/config\n{"config":{"namespace":"","data":{"config-svc":{"directory":"/root"},"download-svc":{"downloadFolder":"/root/downloads"},"model-svc":{"currentModelId":"huggingface/TheBloke/mistral-7b-instruct-v0.2.Q3_K_S.gguf"}}}}\n'})}),"\n",(0,c.jsx)(n.p,{children:"Or a POST call:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo post /user-svc/users\n{\n  "users": [\n\n    {\n      "id": "usr_e9WSYwjRuL",\n      "createdAt": "2024-12-06T20:51:38.062985Z",\n      "updatedAt": "2024-12-06T20:51:38.062985Z",\n      "name": "Proxy Service",\n      "slug": "proxy-svc",\n      "contacts": [\n        {\n          "createdAt": "0001-01-01T00:00:00Z",\n          "updatedAt": "0001-01-01T00:00:00Z"\n        }\n      ]\n    },\n...\n'})}),"\n",(0,c.jsx)(n.p,{children:"Or a POST call with some request body parameters:"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo post /secret-svc/encrypt --value=hey\n{\n  "value": "UsoGq6VCa0+89pzIPhgU49kgoL0p/3jc90IsOR/8ldk="\n}\n'})}),"\n",(0,c.jsx)(n.p,{children:"Here we should talk a bit about how CLI flags get mapped to request bodies."}),"\n",(0,c.jsx)(n.h2,{id:"cli-flag-to-request-body-mapping",children:"CLI flag to request body mapping"}),"\n",(0,c.jsxs)(n.p,{children:["When doing ",(0,c.jsx)(n.code,{children:"POST"}),", ",(0,c.jsx)(n.code,{children:"PUT"})," and ",(0,c.jsx)(n.code,{children:"DELETE"})," queries, CLI flags can be turned into multilevel JSON request bodies, such as this:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"$ oo post /secret-svc/encrypt --value=hey\n"})}),"\n",(0,c.jsx)(n.p,{children:"Is roughly equivalent to the pseudocurl"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'curl -XPOST -H "Auth..." $ADDR/secret-svc/encrypt -d \'{"value": "hey"}\'\n'})}),"\n",(0,c.jsxs)(n.p,{children:["Similarly, dot ",(0,c.jsx)(n.code,{children:"."})," and dash ",(0,c.jsx)(n.code,{children:"-"})," delimiters get turned into a multidimensional JSON:"]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo post /secret-svc/encrypt --value-text=hey\n# turns into\n{\n  "value": {\n    "text": "hey"\n  }\n}\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo post /secret-svc/encrypt --value.text=hey\n# turns into\n{\n  "value": {\n    "text": "hey"\n  }\n}\n'})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'$ oo post /secret-svc/encrypt --valueText=hey\n# turns into\n{\n  "valueText": "hey"\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);