"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[7184],{79795:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>h,contentTitle:()=>y,default:()=>v,frontMatter:()=>u,metadata:()=>i,toc:()=>T});const i=JSON.parse('{"id":"openorch/list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","source":"@site/docs/openorch/list-platforms.api.mdx","sourceDirName":"openorch","slug":"/openorch/list-platforms","permalink":"/docs/openorch/list-platforms","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-platforms","title":"List Platforms","description":"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.","sidebar_label":"List Platforms","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"List Models","permalink":"/docs/openorch/list-models"},"next":{"title":"Check","permalink":"/docs/openorch/check"}}');var r=o(74848),n=o(28453),a=o(53746),p=o.n(a),s=o(56518),c=o.n(s),l=o(99972),m=o.n(l),d=o(25342),g=o.n(d),f=(o(44215),o(82223),o(24861));const u={id:"list-platforms",title:"List Platforms",description:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc.",sidebar_label:"List Platforms",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},y=void 0,h={},T=[];function b(e){const t={code:"code",p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Platforms"}),"\n",(0,r.jsx)(p(),{method:"post",path:"/model-svc/platforms",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Retrieves a list of AI platforms. Eg. LlamaCpp, StableDiffusion etc."}),"\n",(0,r.jsxs)(t.p,{children:["Requires ",(0,r.jsx)(t.code,{children:"model-svc:platform:view"})," permission."]}),"\n",(0,r.jsx)(c(),{parameters:void 0}),"\n",(0,r.jsx)(m(),{title:"Body",body:void 0}),"\n",(0,r.jsx)(g(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{platforms:{items:{properties:{architectures:{properties:{cuda:{allOf:[{properties:{container:{allOf:[{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{type:"string"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{type:"string"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}],description:"Container configuration related to CUDA usage."},cudaVersionPrecision:{description:'Level of precision for selecting the CUDA version when resolving the container image.\n- 2 -> Use "major.minor" (e.g., "12.2")\n- 3 -> Use "major.minor.patch" (e.g., "12.2.0")',type:"integer"},defaultCudaVersion:{description:'Default CUDA version to use (e.g., "12.2" or "12.2.0").',type:"string"},defaultCudnnVersion:{description:"Default cuDNN version to use alongside CUDA.",type:"string"}},type:"object"}],description:"CUDA-specific container parameters, if applicable."},default:{allOf:[{properties:{container:{properties:{envars:{description:'Environment variables to be passed to the container (e.g., "DEVICES=all").',items:{type:"string"},type:"array"},imageTemplate:{description:"Template for constructing the container image name.",type:"string"},keeps:{description:"List of container paths that should persist across restarts.",items:{type:"string"},type:"array"},port:{description:"Internal port exposed by the container.",type:"integer"}},type:"object"}},type:"object"}],description:"Default container configuration for non-GPU environments."}},type:"object"},id:{type:"string"},name:{type:"string"},types:{description:"List of prompt types that the AI engine supports.",items:{enum:["Image-Text-to-Text","Visual Question Answering","Document Question Answering","Text-to-Image","Image-to-Image","Image-to-Video","Unconditional Image Generation","Text-to-Video","Zero-Shot Image Classification","Zero-Shot Object Detection","Text-to-3D","Image-to-3D","Image Feature Extraction","Keypoint Detection","Text-to-Text","Question Answering","Translation","Summarization","Text Generation","Fill-Mask","Text-to-Speech","Text-to-Audio","Automatic Speech Recognition","Audio-to-Audio","Audio Classification","Reinforcement Learning","Robotics","Graph Machine Learning"],type:"string","x-enum-varnames":["PromptTypeImageTextToText","PromptTypeVisualQuestionAnswering","PromptTypeDocumentQuestionAnswering","PromptTypeTextToImage","PromptTypeImageToImage","PromptTypeImageToVideo","PromptTypeUnconditionalImageGeneration","PromptTypeTextToVideo","PromptTypeZeroShotImageClassification","PromptTypeZeroShotObjectDetection","PromptTypeTextTo3D","PromptTypeImageTo3D","PromptTypeImageFeatureExtraction","PromptTypeKeypointDetection","PromptTypeTextToText","PromptTypeQuestionAnswering","PromptTypeTranslation","PromptTypeSummarization","PromptTypeTextGeneration","PromptTypeFillMask","PromptTypeTextToSpeech","PromptTypeTextToAudio","PromptTypeAutomaticSpeechRecognition","PromptTypeAudioToAudio","PromptTypeAudioClassification","PromptTypeReinforcementLearning","PromptTypeRobotics","PromptTypeGraphMachineLearning"]},type:"array"},version:{type:"integer"}},type:"object"},type:"array"}},required:["platforms"],type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(b,{...e})}):b(e)}}}]);