"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5925],{37726:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>m,contentTitle:()=>g,default:()=>w,frontMatter:()=>y,metadata:()=>i,toc:()=>b});const i=JSON.parse('{"id":"openorch/get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/openorch/get-users.api.mdx","sourceDirName":"openorch","slug":"/openorch/get-users","permalink":"/docs/openorch/get-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/openorch/read-user-by-token"}}');var r=s(74848),n=s(28453),o=s(53746),a=s.n(o),p=s(56518),l=s.n(p),d=s(99972),c=s.n(d),u=s(25342),f=s.n(u),h=(s(44215),s(82223),s(24861));const y={id:"get-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},g=void 0,m={},b=[];function S(e){const t={p:"p",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,r.jsx)(a(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,r.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,r.jsx)(h.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,r.jsx)(l(),{parameters:void 0}),"\n",(0,r.jsx)(c(),{title:"Body",body:{content:{"application/json":{schema:{properties:{query:{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"},sortingType:{allOf:[{enum:["","numeric","text","date"],type:"string","x-enum-varnames":["SortingTypeDefault","SortingTypeNumeric","SortingTypeText","SortingTypeDate"]}],description:"Defines the type of sorting to apply (numeric, text, date, etc.)"}},type:"object"},type:"array"}},type:"object"}},type:"object"}}},description:"Get Users Request"}}),"\n",(0,r.jsx)(f(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contacts:{description:"Contacts are used for login and identification purposes.",items:{properties:{createdAt:{type:"string"},deletedAt:{type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (openorch username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},isPrimary:{description:"If this is the primary contact method",type:"boolean"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"},updatedAt:{type:"string"},userId:{type:"string"},value:{description:'Value is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (openorch username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},verified:{description:"Whether the contact is verified",type:"boolean"}},type:"object"},type:"array"},createdAt:{type:"string"},deletedAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the organization.",example:"Jane Doe",type:"string"},passwordHash:{type:"string"},slug:{description:"URL-friendly unique (inside the Singularon platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function w(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(S,{...e})}):S(e)}}}]);