"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2015],{8587:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>j,contentTitle:()=>y,default:()=>v,frontMatter:()=>u,metadata:()=>n,toc:()=>b});const n=JSON.parse('{"id":"openorch/list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","source":"@site/docs/openorch/list-definitions.api.mdx","sourceDirName":"openorch","slug":"/openorch/list-definitions","permalink":"/docs/openorch/list-definitions","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","sidebar_label":"List Definitions","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Delete Definition","permalink":"/docs/openorch/delete-definition"},"next":{"title":"Register Instance","permalink":"/docs/openorch/register-instance"}}');var s=i(74848),o=i(28453),r=i(53746),a=i.n(r),p=i(56518),l=i.n(p),c=i(99972),d=i.n(c),f=i(25342),m=i.n(f),h=(i(44215),i(82223),i(24861));const u={id:"list-definitions",title:"List Definitions",description:"Retrieves a list of all definitions or filters them by specific criteria.",sidebar_label:"List Definitions",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},y=void 0,j={},b=[];function g(e){const t={p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(h.default,{as:"h1",className:"openapi__heading",children:"List Definitions"}),"\n",(0,s.jsx)(a(),{method:"get",path:"/registry-svc/definitions",context:"endpoint"}),"\n",(0,s.jsx)(t.p,{children:"Retrieves a list of all definitions or filters them by specific criteria."}),"\n",(0,s.jsx)(l(),{parameters:void 0}),"\n",(0,s.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,s.jsx)(m(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{definitions:{items:{properties:{apiSpecs:{description:"API Specs such as OpenAPI definitions etc.",items:{properties:{metadata:{additionalProperties:{type:"string"},description:"Additional metadata about the API (e.g., author, license, etc.)",type:"object"},protocolType:{description:"Protocol type (e.g., OpenAPI, Swagger, etc.)",type:"string"},url:{description:"URL to the OpenAPI file or other API definition",type:"string"},version:{description:"Version of the API specification (e.g., 3.0.0)",type:"string"}},type:"object"},type:"array"},clients:{description:"Programming language clients such as on npm or GitHub.",items:{properties:{language:{allOf:[{enum:["JavaScript","Python","Java","C#","C++","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","Objective-C","F#"],type:"string","x-enum-varnames":["JavaScript","Python","Java","CSharp","CPlusPlus","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","ObjectiveC","FSharp"]}],description:"Programming language.",example:"JavaScript"},url:{description:"The URL of the client.",example:"https://example.com/client.js",type:"string"}},required:["language","url"],type:"object"},type:"array"},envars:{additionalProperties:{type:"string"},description:'Envars is a map of Renvironment variables that a deployment (see Deploy Svc Deployment) of this definition will REQUIRE to run.\nE.g., {"DB_URL": "mysql://user:password@host:port/db"}\nThese will be injected into the service instances (see Registry Svc Instance) at runtime.\nThe value of a key here is the default value. The actual value can be overridden at deployment time.',type:"object"},hostPort:{description:"HostPort is a clutch until automatic port assignment works.\nIt will go a way as it doesn't make any sense in a Definition.",type:"integer"},id:{type:"string"},image:{allOf:[{properties:{name:{description:"Name is the container image name/URL to use for the container",example:"nginx:latest",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"}},required:["name","port"],type:"object"}],description:"Container specifications for Docker, K8s, etc.\nUse this to deploy already built images."},repository:{allOf:[{properties:{buildContext:{description:"Context is the path to the image build context",example:"path/to/subfolder",type:"string"},containerFile:{description:"ContainerFile is the path to the file that contains the container build instructions\nRelative from the build context. By default, it is assumed to be a Dockerfile.",example:"docker/Dockerfile",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"},url:{description:"URL is the URL to the repository",example:"https://github.com/openorch/openorch.git",type:"string"},version:{description:"Version of the code to use",example:"v1.0.0",type:"string"}},required:["url"],type:"object"}],description:"Repository based definitions is an alternative to Image definitions.\nInstead of deploying an already built and pushed image, a source code repository\nurl can be provided. The container will be built from the source."}},required:["id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid filters",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function v(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}}}]);