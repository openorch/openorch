"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2015],{8587:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>k,frontMatter:()=>u,metadata:()=>o,toc:()=>m});const o=JSON.parse('{"id":"openorch/list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","source":"@site/docs/openorch/list-definitions.api.mdx","sourceDirName":"openorch","slug":"/openorch/list-definitions","permalink":"/docs/openorch/list-definitions","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","sidebar_label":"List Definitions","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Delete Definition","permalink":"/docs/openorch/delete-definition"},"next":{"title":"Register Instance","permalink":"/docs/openorch/register-instance"}}');var n=i(74848),r=i(28453),s=i(53746),a=i.n(s),p=i(56518),l=i.n(p),d=i(99972),c=i.n(d),f=i(25342),h=i.n(f),g=(i(44215),i(82223),i(24861));const u={id:"list-definitions",title:"List Definitions",description:"Retrieves a list of all definitions or filters them by specific criteria.",sidebar_label:"List Definitions",hide_title:!0,hide_table_of_contents:!0,api:"eJzNWN9v2zgS/lcG3IfbYhUr2+4ChZ82TbNtrsHFZzf3EgeHMTWW2FCkSlJ2fIb/98OQsi3HTre4OyzuoaksDoffzHzzg1qLgrx0qgnKGjEUYwpO0YI8IGjlA9g5oNZQ0FwZxUIerIO50oGch1BRDbMV+IakmisJ0qlATuFAZMI25JC3XBdiKFjb+70WkQlHvrHGkxfDtXh9fs7/HaK5/SQyIa0JZAKvYtNoJaPO/ItnkbXwsqIa+alxfGJQSWEPMf9UgWp/LIWNmjQk/fHZF6NriEvgW1kBerhtyPDbvi8oSDb1Be01BSwwRHRYFHEP6tGBTFg1JIbCB6dMKTbZcxi7bbDVBjizbWDfA8P5kQblIANsQ2VdBlpJMp6yCO2VyLYH2NkXkoEPaJwNVlr9OS48t3vUrQLv2yrvTM9gssSyJHekfQ+/dfpY6d34BoKNkLdenCtNTCUbKnJw6NdTehfkvEohP9T9j7TATN26ZEvHyJStDW8G54PzE5A3J1zUvUDncMW/pVZkwgmWjJwtHda1MiVoNGWLJUEnvSOONWCamo39oMLHdvYNxmx1RMZofTsXw/u1INPWYngv/ooLnMTTRSZGq1BFV/FbkYnLH/jPTz+JTIzb2Upk4oMVmZgs1TyKfxyJTHDMdxo+2aAVa5hI1KxiRE7H7Z6XP6J/JM0vLrX90joSmbjS6kk5kYnb6Cu1oLNLkYnffxAPzx2biaczBn62QGewZvv+yIJJha7hh5FuPf/7k22JpiQQD5uH56l4KtYcSnrCutFsec+6lzLhc0XA2dCxNVHlUEsVQuOHed69GUhb553cF3+Sv46+tspRwR7eMSgBePgOdpNZoPP/RZG6igpAcdeosWHjxmQWyllTkwmwQKdwpokbBgZAKKjRdhXXfvRE8D7+hslCdo+89Co5SfleZYCl0hrGV3+/ux5fcUlxrRlMzVXM8PVUvH/3z7vxzVQMYSrqlf+qh3neenLDBr1fWlf8Vlkfho11IS9mU7GZms8VeUp6ZwTKsJeoAGW6guXJLZTkFR/QSPIJ8phK5YNLoK+7tVeAgSEFVdMgqoYF6pZiG4VHWkFFjthRrLmgObY6JJEBsDTK0KLuNkk0DMkuyDlVFGRYe8918ZRTFZ5tHFkXjun3sVtJsZK6DbICxqu5gdgag5LA3gH0XpUpfEvrHv1gaq5DclNpAWGJK65tKkBhyZu/BKjxkQDNCjw3IFAGEPYdvwdUmUAlOUaqipP0UvVRDTysk1xQjq37G9Y75/LYgMqQg6gMeEfe9aHWE8ytO5Q7yEFTKvM01Bgolo8jgM1J7249y3qjE01bz8gl1h+Cio7kmYgM9wd2iTOo9aoP4+352/Njrz1L+OiKDtFxth9VscsdhIMu6aND3lv5yN3901ufWvzU3HlKSRhsxz1A7QiLFcxapUNyrx+ICKuxXgXrVt+KHW8rGAY9nfBht7BzI4ZqOzqkQMbt0ZO8vx80ls2DzX07m1tdxJAeRW4Xgt+VPkGhy/7yKRBxbokB7TQ9p1vCx9XCtTK6dmrGpJEbDMydraP8gRUDeLfaVoOMU4qz0/u2poKPnRFnUgwNn37YLYr4Pt8v/7/R9RsjYXd2bzrsMehUSyxVqNpZ7Ii2IWOdrHYPg1KdTNXvHRylLagrDgdnL37mwfEP++7pZnuUfuOdgTBDT8XBbYLDbgB1dG7kS7BwHVnfE+NKbHwgLBh6ykmeSeLWfmaiKaBpfcXdjJVkgOBt62Rn7N7ZU9M6ve03jbMLVVCROtIzDsyoU75jctI4OHKIKr5j+Dgevjf87pdTt8Frs0Ctiu3l8z+/GpJz1p3oOy+A+fU0mJQBMCG3IAdXUeefA2mTCU+ydSqsYnl9R+jIXbShEsP7OLgGLOO43R9SOBo1hcrybbwkzhWua2IocteJnfmFzIuDS7qP5vl4TsxjkefaStRxjvr17es3P0eWbwFN2MBkUx/W0RjMl8tpJzIVMLda2yUV/DEBwTcoKdI32Ecee2Si1Z50d55cnLxubKkMkCkaq9IgrVh/RZjqfxoUxEW8Hat/4eH1Ehv1iRINlZlbxhn5LmMAqUbFFnvU5H/zypStxuCs4QLU081fCtom1tiu2MWCNcz3tcm6Mj9xud/dI86wNNbz8FUr6Ww3c3qYO6yJ56/YnmPT4FS/uIYeuzyb3d3798ORuPgwuoHFm1i79qi4jC6Xy0Fp2oiq2+dzLBt9xpfkKtQ6Ziq52t/OJwnL3iifvgEMlM2jSM7+VCEWS77d3zpZiV7dFeeDN4PzMycHr39JzciHGk0P6Q1/aTr8OHTgqPU+rf6nX6g6FnALzhuNyvS6VcqNe9HPjYhrj/IhTdostV5zNb9zerPh119b4hno/iET27tPTM1sS0xOp0dacZSkpHiDjTN/5OSzsrHpJ+6Hq88iE9gl1Z7GrCzbPrD27ZJZ9XQ/T4MEgf9ushe2rNcpSTabnXxaenHHLveSNHv1YbPZ/Bv9JRCH",sidebar_class_name:"get api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},b=void 0,y={},m=[];function v(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(g.default,{as:"h1",className:"openapi__heading",children:"List Definitions"}),"\n",(0,n.jsx)(a(),{method:"get",path:"/registry-svc/definitions",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of all definitions or filters them by specific criteria."}),"\n",(0,n.jsx)(l(),{parameters:void 0}),"\n",(0,n.jsx)(c(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{definitions:{items:{properties:{apiSpecs:{description:"API Specs such as OpenAPI definitions etc.",items:{properties:{metadata:{additionalProperties:{type:"string"},description:"Additional metadata about the API (e.g., author, license, etc.)",type:"object"},protocolType:{description:"Protocol type (e.g., OpenAPI, Swagger, etc.)",type:"string"},url:{description:"URL to the OpenAPI file or other API definition",type:"string"},version:{description:"Version of the API specification (e.g., 3.0.0)",type:"string"}},type:"object"},type:"array"},clients:{description:"Programming language clients such as on npm or GitHub.",items:{properties:{language:{allOf:[{enum:["JavaScript","Python","Java","C#","C++","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","Objective-C","F#"],type:"string","x-enum-varnames":["JavaScript","Python","Java","CSharp","CPlusPlus","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","ObjectiveC","FSharp"]}],description:"Programming language.",example:"JavaScript"},url:{description:"The URL of the client.",example:"https://example.com/client.js",type:"string"}},required:["language","url"],type:"object"},type:"array"},envars:{additionalProperties:{type:"string"},description:'Envars is a map of Renvironment variables that a deployment (see Deploy Svc Deployment) of this definition will REQUIRE to run.\nE.g., {"DB_URL": "mysql://user:password@host:port/db"}\nThese will be injected into the service instances (see Registry Svc Instance) at runtime.\nThe value of a key here is the default value. The actual value can be overridden at deployment time.',type:"object"},hostPort:{description:"HostPort is a clutch until automatic port assignment works.\nIt will go a way as it doesn't make any sense in a Definition.",type:"integer"},id:{type:"string"},image:{allOf:[{properties:{name:{description:"Name is the container image name/URL to use for the container",example:"nginx:latest",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"}},required:["name","port"],type:"object"}],description:"Container specifications for Docker, K8s, etc.\nUse this to deploy already built images."},repository:{allOf:[{properties:{buildContext:{description:"Context is the path to the image build context",example:"path/to/subfolder",type:"string"},containerFile:{description:"ContainerFile is the path to the file that contains the container build instructions\nRelative from the build context. By default, it is assumed to be a Dockerfile.",example:"docker/Dockerfile",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"},url:{description:"URL is the URL to the repository",example:"https://github.com/openorch/openorch.git",type:"string"},version:{description:"Version of the code to use",example:"v1.0.0",type:"string"}},required:["url"],type:"object"}],description:"Repository based definitions is an alternative to Image definitions.\nInstead of deploying an already built and pushed image, a source code repository\nurl can be provided. The container will be built from the source."}},required:["id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid filters",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function k(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}}}]);