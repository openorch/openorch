"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[9369],{1233:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"built-in-services/data-svc","title":"Data Svc","description":"The Data Service (Data Svc) is designed to facilitate backendless applications, allowing data to be saved and queried directly from the frontend, similar to Firebase.","source":"@site/docs/built-in-services/data-svc.md","sourceDirName":"built-in-services","slug":"/built-in-services/data-svc","permalink":"/docs/built-in-services/data-svc","draft":false,"unlisted":false,"editUrl":"https://github.com/openorch/openorch/tree/main/docs-source/docs/built-in-services/data-svc.md","tags":[{"inline":true,"label":"data-svc","permalink":"/docs/tags/data-svc"},{"inline":true,"label":"data","permalink":"/docs/tags/data"},{"inline":true,"label":"permissions","permalink":"/docs/tags/permissions"},{"inline":true,"label":"roles","permalink":"/docs/tags/roles"},{"inline":true,"label":"authentication","permalink":"/docs/tags/authentication"},{"inline":true,"label":"authorization","permalink":"/docs/tags/authorization"},{"inline":true,"label":"services","permalink":"/docs/tags/services"}],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_position":100,"tags":["data-svc","data","permissions","roles","authentication","authorization","services"]},"sidebar":"tutorialSidebar","previous":{"title":"Model Svc","permalink":"/docs/built-in-services/model-svc"},"next":{"title":"Container Svc","permalink":"/docs/built-in-services/container-svc"}}');var t=i(74848),r=i(28453);const a={sidebar_position:100,tags:["data-svc","data","permissions","roles","authentication","authorization","services"]},o="Data Svc",l={},d=[{value:"Purpose",id:"purpose",level:2},{value:"Data types",id:"data-types",level:2},{value:"Objects",id:"objects",level:2},{value:"Data model",id:"data-model",level:3},{value:"Permission model",id:"permission-model",level:3},{value:"Readers",id:"readers",level:2},{value:"Authors",id:"authors",level:2},{value:"Writers",id:"writers",level:2},{value:"Deleters",id:"deleters",level:2},{value:"Conventions",id:"conventions",level:3},{value:"Table name and object ID",id:"table-name-and-object-id",level:4},{value:"<code>_self</code>",id:"_self",level:4}];function c(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"data-svc",children:"Data Svc"})}),"\n",(0,t.jsx)(s.p,{children:"The Data Service (Data Svc) is designed to facilitate backendless applications, allowing data to be saved and queried directly from the frontend, similar to Firebase."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["This page provides a high-level overview of ",(0,t.jsx)(s.code,{children:"Data Svc"}),". For detailed information, refer to the ",(0,t.jsx)(s.a,{href:"/docs/openorch/query",children:"Data Svc API documentation"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"purpose",children:"Purpose"}),"\n",(0,t.jsx)(s.p,{children:"Data Svc serves as a lightweight database abstraction designed for rapid prototyping. It allows direct reading, writing, and deletion from the frontend, eliminating the need for basic CRUD microservices that merely handle routine database operations."}),"\n",(0,t.jsx)(s.h2,{id:"data-types",children:"Data types"}),"\n",(0,t.jsxs)(s.p,{children:["Currently, Data Svc supports only untyped, dynamic, and schemaless entries known as ",(0,t.jsx)(s.code,{children:"Object"}),"s."]}),"\n",(0,t.jsx)(s.h2,{id:"objects",children:"Objects"}),"\n",(0,t.jsx)(s.h3,{id:"data-model",children:"Data model"}),"\n",(0,t.jsx)(s.p,{children:"Multiple tenants (users or services) write to shared tables. Access is governed by the permission model outlined below."}),"\n",(0,t.jsx)(s.h3,{id:"permission-model",children:"Permission model"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"Data Svc"})," ",(0,t.jsx)(s.code,{children:"Object"})," permission model is designed with two primary goals:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Simplicity \u2013 Easy to understand and implement"}),"\n",(0,t.jsx)(s.li,{children:"Flexibility \u2013 Versatile while maintaining simplicity"}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"To illustrate the model, consider the following example entry:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'table: "pet"\nid: "pet_67890"\ndata:\n  yourCustomKey1: "yourCustomValue1"\n  yourCustomKey2: 42\nreaders:\n  - "usr_12345"\n  - "org_67890"\nwriters:\n  - "org_67890"\ndeleters:\n  - "usr_12345"\nauthors:\n  - "usr_99999"\n  - "org_99999"\n'})}),"\n",(0,t.jsx)(s.h2,{id:"readers",children:"Readers"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"readers"})," field defines which users, organizations, or roles have permission to view an entry."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Users and organizations outside of your own can be granted access."}),"\n",(0,t.jsx)(s.li,{children:"This field can be set by the author or writers to include user IDs, organization IDs, or roles they themselves do not belong to."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"authors",children:"Authors"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"authors"})," field identifies the original creators of an entry. Unlike ",(0,t.jsx)(s.code,{children:"readers"}),", ",(0,t.jsx)(s.code,{children:"writers"}),", and ",(0,t.jsx)(s.code,{children:"deleters"}),", which are user-defined, this field is system-assigned. It can only include the author's user ID, organization IDs they belong to, or roles they hold. This ensures it cannot be altered or spoofed, helping to prevent spam."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:'In multi-tenant applications, spam can occur because anyone can "offer" a record to be read by another user or organization they are not part of. This can be problematic\u2014for example, in a chat application where strangers could send unsolicited messages simply by knowing a company ID.'}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.code,{children:"authors"})," field helps prevent such abuse limiting the list to resources the author has."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"writers",children:"Writers"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"writers"})," field specifies which users, organizations, or roles have permission to modify an entry."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"This field can be set by the author or existing writers to include user IDs, organization IDs, or roles they themselves do not belong to."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"deleters",children:"Deleters"}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"deleters"})," field defines which users, organizations, or roles are authorized to delete an entry."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"This field can be set by the author or existing writers to include user IDs, organization IDs, or roles they themselves do not belong to."}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"conventions",children:"Conventions"}),"\n",(0,t.jsx)(s.h4,{id:"table-name-and-object-id",children:"Table name and object ID"}),"\n",(0,t.jsx)(s.p,{children:"Each object ID must be prefixed with the table name. Whenever possible, use singular table names."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'table: "pet"\nid: "pet_67890"\n'})}),"\n",(0,t.jsx)(s.h4,{id:"_self",children:(0,t.jsx)(s.code,{children:"_self"})}),"\n",(0,t.jsxs)(s.p,{children:["You can specify the reserved string ",(0,t.jsx)(s.code,{children:"_self"})," in the ",(0,t.jsx)(s.code,{children:"readers"}),", ",(0,t.jsx)(s.code,{children:"writers"})," or ",(0,t.jsx)(s.code,{children:"deleters"})," lists. It will be extrapolated to your user ID."]})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>a,x:()=>o});var n=i(96540);const t={},r=n.createContext(t);function a(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);