"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[5925],{37726:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>y,default:()=>g,frontMatter:()=>m,metadata:()=>s,toc:()=>O});const s=JSON.parse('{"id":"openorch/get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","source":"@site/docs/openorch/get-users.api.mdx","sourceDirName":"openorch","slug":"/openorch/get-users","permalink":"/docs/openorch/get-users","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-users","title":"List Users","description":"Fetches a list of users with optional query filters and pagination.","sidebar_label":"List Users","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"post api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Read User by Token","permalink":"/docs/openorch/read-user-by-token"}}');var o=i(74848),r=i(28453),n=i(53746),a=i.n(n),p=i(56518),d=i.n(p),c=i(99972),l=i.n(c),u=i(25342),h=i.n(u),f=(i(44215),i(82223),i(24861));const m={id:"get-users",title:"List Users",description:"Fetches a list of users with optional query filters and pagination.",sidebar_label:"List Users",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"post api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},y=void 0,b={},O=[];function N(e){const t={p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(f.default,{as:"h1",className:"openapi__heading",children:"List Users"}),"\n",(0,o.jsx)(a(),{method:"post",path:"/user-svc/users",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"Fetches a list of users with optional query filters and pagination."}),"\n",(0,o.jsx)(f.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(d(),{parameters:void 0}),"\n",(0,o.jsx)(l(),{title:"Body",body:{content:{"application/json":{schema:{properties:{query:{properties:{count:{description:"Count true means return the count of the dataset filtered by Filters\nwithout after or limit.",type:"boolean"},filters:{description:"Filters are filtering options of a query. It is advised to use\nIt's advised to use helper functions in your respective client library such as filter constructors (`all`, `equal`, `contains`, `startsWith`) and field selectors (`field`, `fields`, `id`) for easier access.",items:{properties:{fields:{items:{type:"string"},type:"array"},jsonValues:{description:"JSONValues is a JSON marshalled array of values.\nIt's JSON marhalled due to the limitations of the\nSwaggo -> OpenAPI 2.0 -> OpenAPI Go generator toolchain.",type:"string"},op:{enum:["equals","containsSubstring","startsWith","intersects","isInList"],type:"string","x-enum-varnames":["OpEquals","OpContainsSubstring","OpStartsWith","OpIntersects","OpIsInList"]}},type:"object"},type:"array"},jsonAfter:{description:"JSONAfter is used for cursor-based pagination, which is more\neffective in scalable and distributed environments compared\nto offset-based pagination.\n\nJSONAfter is a JSON encoded string due to limitations of Swaggo (ie. []interface{} generates []map[stirng]interface{}).",type:"string"},limit:{description:"Limit the number of records in the result set.",type:"integer"},orderBys:{description:"OrderBys order the result set.",items:{properties:{desc:{description:"Desc indicates whether the sorting should be in descending order.",type:"boolean"},field:{description:"The field by which to order the results",type:"string"},randomize:{description:"Randomize indicates that the results should be randomized instead of ordered by the `field` and `desc` criteria",type:"boolean"}},type:"object"},type:"array"}},type:"object"}},type:"object"}}},description:"Get Users Request"}}),"\n",(0,o.jsx)(h(),{id:void 0,label:void 0,responses:{200:{description:"List of users retrieved successfully",content:{"application/json":{schema:{properties:{after:{type:"string"},count:{type:"integer"},users:{items:{properties:{contacts:{description:"Contacts are used for login and identification purposes.",items:{properties:{createdAt:{type:"string"},deletedAt:{type:"string"},id:{description:'The unique identifier, which can be a URL.\n\nExample values: "joe12" (openorch username), "twitter.com/thejoe" (twitter url), "joe@joesdomain.com" (email)',example:"twitter.com/thejoe",type:"string"},isPrimary:{description:"If this is the primary contact method",type:"boolean"},platform:{description:'Platform of the contact (e.g., "email", "phone", "twitter")',example:"twitter",type:"string"},updatedAt:{type:"string"},userId:{type:"string"},value:{description:'Value is the platform local unique identifier.\nIe. while the `id` of a Twitter contact is `twitter.com/thejoe`, the value will be only `thejoe`.\nFor email and phones the `id` and the `value` will be the same.\nThis field mostly exists for display purposes.\n\nExample values: "joe12" (openorch username), "thejoe" (twitter username), "joe@joesdomain.com" (email)',example:"thejoe",type:"string"},verified:{description:"Whether the contact is verified",type:"boolean"}},type:"object"},type:"array"},createdAt:{type:"string"},deletedAt:{type:"string"},id:{type:"string"},name:{description:"Full name of the organization.",example:"Jane Doe",type:"string"},passwordHash:{type:"string"},slug:{description:"URL-friendly unique (inside the Singularon platform) identifier for the `user`.",example:"jane-doe",type:"string"},updatedAt:{type:"string"}},type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid JSON",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},401:{description:"Unauthorized",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function g(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(N,{...e})}):N(e)}}}]);