"use strict";(self.webpackChunksingulatron_api_docs=self.webpackChunksingulatron_api_docs||[]).push([[2015],{8587:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>b,contentTitle:()=>m,default:()=>w,frontMatter:()=>f,metadata:()=>o,toc:()=>g});const o=JSON.parse('{"id":"openorch/list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","source":"@site/docs/openorch/list-definitions.api.mdx","sourceDirName":"openorch","slug":"/openorch/list-definitions","permalink":"/docs/openorch/list-definitions","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"list-definitions","title":"List Definitions","description":"Retrieves a list of all definitions or filters them by specific criteria.","sidebar_label":"List Definitions","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/openorch/openorch","custom_edit_url":null},"sidebar":"openApiSidebar","previous":{"title":"Delete Definition","permalink":"/docs/openorch/delete-definition"},"next":{"title":"Register Instance","permalink":"/docs/openorch/register-instance"}}');var n=i(74848),s=i(28453),r=i(53746),a=i.n(r),l=i(56518),p=i.n(l),c=i(99972),d=i.n(c),h=i(25342),y=i.n(h),u=(i(44215),i(82223),i(24861));const f={id:"list-definitions",title:"List Definitions",description:"Retrieves a list of all definitions or filters them by specific criteria.",sidebar_label:"List Definitions",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/openorch/openorch",custom_edit_url:null},m=void 0,b={},g=[];function v(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(u.default,{as:"h1",className:"openapi__heading",children:"List Definitions"}),"\n",(0,n.jsx)(a(),{method:"get",path:"/registry-svc/definitions",context:"endpoint"}),"\n",(0,n.jsx)(t.p,{children:"Retrieves a list of all definitions or filters them by specific criteria."}),"\n",(0,n.jsx)(p(),{parameters:void 0}),"\n",(0,n.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,n.jsx)(y(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{properties:{definitions:{items:{properties:{apiSpecs:{description:"API Specs such as OpenAPI definitions etc.",items:{properties:{metadata:{additionalProperties:{type:"string"},description:"Additional metadata about the API (e.g., author, license, etc.)",type:"object"},protocolType:{description:"Protocol type (e.g., OpenAPI, Swagger, etc.)",type:"string"},url:{description:"URL to the OpenAPI file or other API definition",type:"string"},version:{description:"Version of the API specification (e.g., 3.0.0)",type:"string"}},type:"object"},type:"array"},clients:{description:"Programming language clients such as on npm or GitHub.",items:{properties:{language:{allOf:[{enum:["JavaScript","Python","Java","C#","C++","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","Objective-C","F#"],type:"string","x-enum-varnames":["JavaScript","Python","Java","CSharp","CPlusPlus","Ruby","Go","Swift","PHP","TypeScript","Kotlin","Scala","Perl","Rust","Haskell","Clojure","Elixir","ObjectiveC","FSharp"]}],description:"Programming language.",example:"JavaScript"},url:{description:"The URL of the client.",example:"https://example.com/client.js",type:"string"}},required:["language","url"],type:"object"},type:"array"},envars:{additionalProperties:{type:"string"},description:'Envars is a map of Renvironment variables that a deployment (see Deploy Svc Deployment) of this definition will REQUIRE to run.\nE.g., {"DB_URL": "mysql://user:password@host:port/db"}\nThese will be injected into the service instances (see Registry Svc Instance) at runtime.\nThe value of a key here is the default value. The actual value can be overridden at deployment time.',type:"object"},hostPort:{description:"HostPort is a clutch until automatic port assignment works.\nIt will go a way as it doesn't make any sense in a Definition.",type:"integer"},id:{type:"string"},image:{allOf:[{properties:{name:{description:"Name is the container image name/URL to use for the container",example:"nginx:latest",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"}},required:["name","port"],type:"object"}],description:"Container specifications for Docker, K8s, etc.\nUse this to deploy already built images."},repository:{allOf:[{properties:{buildContext:{description:"Context is the path to the image build context",example:"path/to/subfolder",type:"string"},containerFile:{description:"ContainerFile is the path to the file that contains the container build instructions\nRelative from the build context. By default, it is assumed to be a Dockerfile.",example:"docker/Dockerfile",type:"string"},port:{description:"Port is the port number that the container will listen on internally",example:8080,type:"integer"},url:{description:"URL is the URL to the repository",example:"https://github.com/openorch/openorch.git",type:"string"},version:{description:"Version of the code to use",example:"v1.0.0",type:"string"}},required:["url"],type:"object"}],description:"Repository based definitions is an alternative to Image definitions.\nInstead of deploying an already built and pushed image, a source code repository\nurl can be provided. The container will be built from the source."}},required:["id"],type:"object"},type:"array"}},type:"object"}}}},400:{description:"Invalid filters",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}},500:{description:"Internal Server Error",content:{"application/json":{schema:{properties:{error:{type:"string"}},type:"object"}}}}}})]})}function w(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(v,{...e})}):v(e)}}}]);