name: "OpenOrch backend Docker build"

on:
  workflow_dispatch:
    inputs:
      branch:
        description: "Branch to build from"
        required: false
        default: "main"
      tag:
        description: "Tag to apply to the Docker image"
        required: false
        default: "latest"
      backend:
        description: "GPU Backend (default, nvidia)"
        required: true
        default: "default"
      backend_version:
        description: "Backend version (e.g., 12.5.0 for CUDA, etc.)"
        required: false
        default: "12.2.2"

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: "openorch-backend"

jobs:
  build-and-push:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Login to Docker Hub
        id: login-dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Validate Backend Selection
        run: |
          case "${{ github.event.inputs.backend }}" in
            "default"|"nvidia") ;;
            *) echo "Error: Invalid backend specified"; exit 1 ;;
          esac

      - name: Set Image Tag
        run: |
          IMAGE_TAG="${{ env.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.backend }}-${{ github.event.inputs.backend_version }}-${{ github.event.inputs.tag }}"
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        run: |
          DOCKERFILE="Dockerfile"
          if [ "${{ github.event.inputs.backend }}" = "nvidia" ]; then
            DOCKERFILE="DockerfileNvidia"
          fi

          DOCKER_BUILDKIT=1 docker build \
            -f ./server/docker/$DOCKERFILE \
            -t ${{ env.IMAGE_TAG }} .

          docker push ${{ env.IMAGE_TAG }}
        working-directory: ./server/docker
